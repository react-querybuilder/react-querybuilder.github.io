"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7030],{57030:e=>{var t,s=Object.defineProperty,r=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,a=Object.prototype.hasOwnProperty,n={};((e,t)=>{for(var r in t)s(e,r,{get:t[r],enumerable:!0})})(n,{parseSQL:()=>x}),e.exports=(t=n,((e,t,n,o)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let c of i(t))a.call(e,c)||c===n||s(e,c,{get:()=>t[c],enumerable:!(o=r(t,c))||o.enumerable});return e})(s({},"__esModule",{value:!0}),t));var o=e=>!!e&&"object"==typeof e&&"rules"in e&&Array.isArray(e.rules),c=e=>Array.isArray(e)&&e.length>0&&"options"in e[0],l=(e,t,s)=>{if(!e.comparator){const s=t=>t.name!==e.name;return c(t)?t.map((e=>({...e,options:e.options.filter(s)}))):t.filter(s)}const r=t=>e.name!==t.name&&("string"==typeof e.comparator?e[e.comparator]===t[e.comparator]:e.comparator(t,s));return c(t)?t.map((e=>({...e,options:e.options.filter(r)}))).filter((e=>e.options.length>0)):t.filter(r)},h=["value"],u=(e,t,s)=>{const r=e??{};if(r.valueSources)return"function"==typeof r.valueSources?r.valueSources(t):r.valueSources;if(s){const e=s(r.name,t);if(e)return e}return h},p=e=>{const t=new Set,s=[];return e.forEach((e=>{t.has(e.name)||(t.add(e.name),s.push(e))})),s},y=e=>{let t=[];const s=e?Array.isArray(e)?e:Object.keys(e).map((t=>({...e[t],name:t}))).sort(((e,t)=>e.label.localeCompare(t.label))):[];return t=c(s)?p(t.concat(...s.map((e=>e.options)))):p(s),t};var f=function(){var e=function(e,t,s,r){for(s=s||{},r=e.length;r--;s[e[r]]=t);return s},t=[1,8],s=[1,4],r=[2,4],i=[1,11],a=[1,10],n=[2,16],o=[1,14],c=[1,15],l=[1,16],h=[6,8],u=[2,148],p=[1,19],y=[1,20],f=[16,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],b=[16,18,32,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],E=[2,162],_=[1,29],g=[6,8,14,17,146,150,152,154],d=[1,42],m=[1,61],O=[1,53],S=[1,60],k=[1,62],x=[1,63],N=[1,64],I=[1,65],R=[1,66],v=[1,59],$=[1,54],A=[1,55],T=[1,56],L=[1,57],C=[1,58],P=[1,43],U=[1,44],B=[1,45],D=[1,47],F=[1,34],W=[1,67],w=[16,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],H=[6,8,14,17,150,152,154],M=[2,145],G=[1,76],j=[1,77],Q=[6,8,14,17,43,133,138,144,146,150,152,154],X=[1,80],Y=[1,79],J=[1,81],K=[6,8,14,17,36,43,51,52,53,71,72,74,77,89,109,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],q=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,109,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],V=[1,102],z=[1,100],Z=[1,101],ee=[1,96],te=[1,97],se=[1,98],re=[1,99],ie=[1,103],ae=[1,104],ne=[1,105],oe=[1,106],ce=[1,107],le=[1,108],he=[2,107],ue=[6,8,14,17,34,36,43,45,51,52,53,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],pe=[6,8,14,17,34,36,43,45,51,52,53,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],ye=[2,82],fe=[1,110],be=[1,109],Ee=[1,117],_e=[2,65],ge=[1,119],de=[16,35,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],me=[16,29,35,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,121,195],Oe=[1,162],Se=[1,164],ke=[17,43],xe=[6,8,14,16,17,34,35,36,43,45,50,51,52,53,56,57,59,60,62,71,72,74,76,77,79,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],Ne=[2,60],Ie=[1,174],Re=[1,172],ve=[6,8,138,146],$e=[16,35,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Ae=[6,8,14,17,138,144,146,150,152,154],Te=[6,8,14,17,36,43,51,52,53,71,72,74,77,89,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Le=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Ce=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,79,81,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Pe=[16,35,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Ue=[16,35,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Be=[6,8,14,17,43,157],De=[16,35,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Fe=[71,74,77],We=[16,35,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],we=[1,239],He=[6,8,14,17],Me=[1,257],Ge=[1,253],je=[2,199],Qe=[1,261],Xe=[1,262],Ye=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],Je=[1,264],Ke=[1,267],qe=[1,268],Ve=[1,269],ze=[1,270],Ze=[2,176],et=[1,266],tt=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],st=[6,8,14,17,135,138,144,146,150,152,154],rt=[1,282],it=[2,181],at=[170,173],nt=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],ot=[2,201],ct=[1,287],lt=[1,299],ht=[1,307],ut=[1,308],pt=[1,309],yt=[6,8,14,17,138,146,150,152,154],ft=[1,319],bt=[1,325],Et=[1,326],_t=[2,206],gt=[1,337],dt=[16,152],mt=[6,8,14,17,152,154],Ot=[1,353],St={trace:function(){},yy:{},symbols_:{error:2,main:3,selectClause:4,semicolonOpt:5,EOF:6,unionClause:7,";":8,unionClauseNotParenthesized:9,unionClauseParenthesized:10,order_by_opt:11,limit_opt:12,selectClauseParenthesized:13,UNION:14,distinctOpt:15,"(":16,")":17,SELECT:18,highPriorityOpt:19,maxStateMentTimeOpt:20,straightJoinOpt:21,sqlSmallResultOpt:22,sqlBigResultOpt:23,sqlBufferResultOpt:24,sqlCacheOpt:25,sqlCalcFoundRowsOpt:26,selectExprList:27,selectDataSetOpt:28,ALL:29,DISTINCT:30,DISTINCTROW:31,HIGH_PRIORITY:32,MAX_STATEMENT_TIME:33,"=":34,NUMERIC:35,STRAIGHT_JOIN:36,SQL_SMALL_RESULT:37,SQL_BIG_RESULT:38,SQL_BUFFER_RESULT:39,SQL_CACHE:40,SQL_NO_CACHE:41,SQL_CALC_FOUND_ROWS:42,",":43,selectExpr:44,"*":45,selectExprStar:46,expr:47,selectExprAliasOpt:48,identifier:49,DOT:50,AS:51,IDENTIFIER:52,STRING:53,string:54,number:55,EXPONENT_NUMERIC:56,HEX_NUMERIC:57,boolean:58,TRUE:59,FALSE:60,null:61,NULL:62,literal:63,place_holder:64,function_call:65,function_call_param_list:66,function_call_param:67,identifier_list:68,case_expr_opt:69,when_then_list:70,WHEN:71,THEN:72,case_when_else:73,ELSE:74,case_when:75,CASE:76,END:77,simple_expr_prefix:78,"+":79,simple_expr:80,"-":81,"~":82,"!":83,BINARY:84,expr_list:85,ROW:86,EXISTS:87,"{":88,"}":89,"||":90,WILDCARD:91,bit_expr:92,"|":93,"&":94,"<<":95,">>":96,"/":97,DIV:98,MOD:99,"%":100,"^":101,not_opt:102,NOT:103,escape_opt:104,ESCAPE:105,predicate:106,IN:107,BETWEEN:108,AND:109,SOUNDS:110,LIKE:111,REGEXP:112,comparison_operator:113,">=":114,">":115,"<=":116,"<":117,"<>":118,"!=":119,sub_query_data_set_opt:120,ANY:121,boolean_primary:122,IS:123,boolean_extra:124,UNKNOWN:125,OR:126,XOR:127,where_opt:128,WHERE:129,group_by_opt:130,group_by:131,roll_up_opt:132,WITH:133,ROLLUP:134,GROUP_BY:135,group_by_order_by_item_list:136,order_by:137,ORDER_BY:138,group_by_order_by_item:139,sort_opt:140,ASC:141,DESC:142,having_opt:143,HAVING:144,limit:145,LIMIT:146,OFFSET:147,procedure_opt:148,procedure:149,PROCEDURE:150,for_update_lock_in_share_mode_opt:151,FOR:152,UPDATE:153,LOCK:154,SHARE:155,MODE:156,FROM:157,table_references:158,partitionOpt:159,escaped_table_reference:160,table_reference:161,OJ:162,join_inner_cross:163,INNER:164,CROSS:165,left_right:166,LEFT:167,RIGHT:168,out_opt:169,OUTER:170,left_right_out_opt:171,join_table:172,JOIN:173,table_factor:174,join_condition:175,on_join_condition:176,NATURAL:177,join_condition_opt:178,ON:179,USING:180,partition_names:181,PARTITION:182,aliasOpt:183,index_or_key:184,INDEX:185,KEY:186,for_opt:187,identifier_list_opt:188,index_hint_list_opt:189,index_hint_list:190,index_hint:191,USE:192,IGNORE:193,FORCE:194,PLACE_HOLDER:195,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",8:";",14:"UNION",16:"(",17:")",18:"SELECT",29:"ALL",30:"DISTINCT",31:"DISTINCTROW",32:"HIGH_PRIORITY",33:"MAX_STATEMENT_TIME",34:"=",35:"NUMERIC",36:"STRAIGHT_JOIN",37:"SQL_SMALL_RESULT",38:"SQL_BIG_RESULT",39:"SQL_BUFFER_RESULT",40:"SQL_CACHE",41:"SQL_NO_CACHE",42:"SQL_CALC_FOUND_ROWS",43:",",45:"*",50:"DOT",51:"AS",52:"IDENTIFIER",53:"STRING",56:"EXPONENT_NUMERIC",57:"HEX_NUMERIC",59:"TRUE",60:"FALSE",62:"NULL",71:"WHEN",72:"THEN",74:"ELSE",76:"CASE",77:"END",79:"+",81:"-",82:"~",83:"!",84:"BINARY",86:"ROW",87:"EXISTS",88:"{",89:"}",90:"||",91:"WILDCARD",93:"|",94:"&",95:"<<",96:">>",97:"/",98:"DIV",99:"MOD",100:"%",101:"^",103:"NOT",105:"ESCAPE",107:"IN",108:"BETWEEN",109:"AND",110:"SOUNDS",111:"LIKE",112:"REGEXP",114:">=",115:">",116:"<=",117:"<",118:"<>",119:"!=",121:"ANY",123:"IS",125:"UNKNOWN",126:"OR",127:"XOR",129:"WHERE",133:"WITH",134:"ROLLUP",135:"GROUP_BY",138:"ORDER_BY",141:"ASC",142:"DESC",144:"HAVING",146:"LIMIT",147:"OFFSET",150:"PROCEDURE",152:"FOR",153:"UPDATE",154:"LOCK",155:"SHARE",156:"MODE",157:"FROM",162:"OJ",164:"INNER",165:"CROSS",167:"LEFT",168:"RIGHT",170:"OUTER",173:"JOIN",177:"NATURAL",179:"ON",180:"USING",182:"PARTITION",185:"INDEX",186:"KEY",192:"USE",193:"IGNORE",194:"FORCE",195:"PLACE_HOLDER"},productions_:[0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[46,3],[48,0],[48,2],[48,1],[48,2],[48,1],[54,1],[55,1],[55,1],[55,1],[58,1],[58,1],[61,1],[63,1],[63,1],[63,1],[63,1],[63,1],[65,4],[66,3],[66,1],[67,0],[67,1],[67,1],[67,2],[67,1],[49,1],[49,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[80,3],[80,3],[80,5],[92,1],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[102,0],[102,1],[104,0],[104,2],[106,1],[106,6],[106,6],[106,6],[106,4],[106,5],[106,4],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[120,1],[120,1],[122,1],[122,4],[122,3],[122,6],[124,1],[124,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[64,1]],performAction:function(e,t,s,r,i,a,n){var o=a.length-1;switch(i){case 1:case 2:return{nodeType:"Main",value:a[o-2],hasSemicolon:a[o-1]};case 3:case 146:this.$=!0;break;case 4:this.$=!1;break;case 5:case 13:case 14:case 15:case 17:case 19:case 21:case 23:case 25:case 27:case 30:case 31:case 32:case 37:case 52:case 53:case 54:case 55:case 56:case 61:case 62:case 64:case 70:case 74:case 81:case 82:case 83:case 84:case 90:case 94:case 108:case 110:case 111:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 125:case 126:case 127:case 131:case 133:case 142:case 144:case 149:case 155:case 156:case 158:case 163:case 165:case 166:case 177:case 178:case 179:case 180:case 182:case 191:case 193:case 195:case 196:case 204:case 205:case 211:case 213:this.$=a[o];break;case 6:this.$=a[o-2],this.$.orderBy=a[o-1],this.$.limit=a[o];break;case 7:case 8:case 10:case 11:this.$={type:"Union",left:a[o-3],distinctOpt:a[o-1],right:a[o]};break;case 9:this.$={type:"SelectParenthesized",value:a[o-1]};break;case 12:this.$={type:"Select",distinctOpt:a[o-10],highPriorityOpt:a[o-9],maxStateMentTimeOpt:a[o-8],straightJoinOpt:a[o-7],sqlSmallResultOpt:a[o-6],sqlBigResultOpt:a[o-5],sqlBufferResultOpt:a[o-4],sqlCacheOpt:a[o-3],sqlCalcFoundRowsOpt:a[o-2],selectItems:a[o-1],from:a[o].from,partition:a[o].partition,where:a[o].where,groupBy:a[o].groupBy,having:a[o].having,orderBy:a[o].orderBy,limit:a[o].limit,procedure:a[o].procedure,updateLockMode:a[o].updateLockMode};break;case 16:case 18:case 20:case 22:case 24:case 26:case 28:case 29:case 33:case 60:case 69:case 73:case 107:case 109:case 141:case 143:case 145:case 148:case 154:case 157:case 162:case 164:case 167:case 176:case 181:case 190:case 199:case 206:case 210:case 212:this.$=null;break;case 34:a[o-2].value.push(a[o]);break;case 35:this.$={type:"SelectExpr",value:[a[o]]};break;case 36:case 65:this.$={type:"Identifier",value:a[o]};break;case 38:this.$=a[o-1],this.$.alias=a[o].alias,this.$.hasAs=a[o].hasAs;break;case 39:case 66:this.$=a[o-2],a[o-2].value+="."+a[o];break;case 40:case 201:this.$={alias:null,hasAs:null};break;case 41:case 43:this.$={alias:a[o],hasAs:!0};break;case 42:this.$={alias:a[o],hasAs:!1};break;case 44:this.$={alias:a[$01],hasAs:!1};break;case 45:this.$={type:"String",value:a[o]};break;case 46:case 47:case 48:this.$={type:"Number",value:a[o]};break;case 49:this.$={type:"Boolean",value:"TRUE"};break;case 50:this.$={type:"Boolean",value:"FALSE"};break;case 51:this.$={type:"Null",value:"null"};break;case 57:this.$={type:"FunctionCall",name:a[o-3],params:a[o-1]};break;case 58:a[o-2].push(a[o]),this.$=a[o-2];break;case 59:case 151:case 197:this.$=[a[o]];break;case 63:this.$={type:"FunctionCallParam",distinctOpt:a[o-1],value:a[o]};break;case 67:this.$={type:"IdentifierList",value:[a[o]]};break;case 68:case 173:this.$=a[o-2],a[o-2].value.push(a[o]);break;case 71:this.$={type:"WhenThenList",value:[{when:a[o-2],then:a[o]}]};break;case 72:this.$=a[o-4],this.$.value.push({when:a[o-2],then:a[o]});break;case 75:this.$={type:"CaseWhen",caseExprOpt:a[o-3],whenThenList:a[o-2],else:a[o-1]};break;case 76:case 77:case 78:case 79:case 80:this.$={type:"Prefix",prefix:a[o-1],value:a[o]};break;case 85:this.$={type:"SimpleExprParentheses",value:a[o-1]};break;case 86:this.$={type:"SimpleExprParentheses",value:a[o-2],hasRow:!0};break;case 87:this.$={type:"SubQuery",value:a[o-1]};break;case 88:this.$={type:"SubQuery",value:a[o-1],hasExists:!0};break;case 89:this.$={type:"IdentifierExpr",identifier:a[o-2],value:a[o-1]};break;case 91:this.$={type:"StartsWithExpr",value:a[o-2]};break;case 92:this.$={type:"EndsWithExpr",value:a[o]};break;case 93:this.$={type:"ContainsExpr",value:a[o-2]};break;case 95:this.$={type:"BitExpression",operator:"|",left:a[o-2],right:a[o]};break;case 96:this.$={type:"BitExpression",operator:"&",left:a[o-2],right:a[o]};break;case 97:this.$={type:"BitExpression",operator:"<<",left:a[o-2],right:a[o]};break;case 98:this.$={type:"BitExpression",operator:">>",left:a[o-2],right:a[o]};break;case 99:this.$={type:"BitExpression",operator:"+",left:a[o-2],right:a[o]};break;case 100:this.$={type:"BitExpression",operator:"-",left:a[o-2],right:a[o]};break;case 101:this.$={type:"BitExpression",operator:"*",left:a[o-2],right:a[o]};break;case 102:this.$={type:"BitExpression",operator:"/",left:a[o-2],right:a[o]};break;case 103:this.$={type:"BitExpression",operator:"DIV",left:a[o-2],right:a[o]};break;case 104:this.$={type:"BitExpression",operator:"MOD",left:a[o-2],right:a[o]};break;case 105:this.$={type:"BitExpression",operator:"%",left:a[o-2],right:a[o]};break;case 106:this.$={type:"BitExpression",operator:"^",left:a[o-2],right:a[o]};break;case 112:this.$={type:"InSubQueryPredicate",hasNot:a[o-4],left:a[o-5],right:a[o-1]};break;case 113:this.$={type:"InExpressionListPredicate",hasNot:a[o-4],left:a[o-5],right:a[o-1]};break;case 114:this.$={type:"BetweenPredicate",hasNot:a[o-4],left:a[o-5],right:{left:a[o-2],right:a[o]}};break;case 115:this.$={type:"SoundsLikePredicate",hasNot:!1,left:a[o-3],right:a[o]};break;case 116:this.$={type:"LikePredicate",hasNot:a[o-3],left:a[o-4],right:a[o-1],escape:a[o]};break;case 117:this.$={type:"RegexpPredicate",hasNot:a[o-2],left:a[o-3],right:a[o]};break;case 128:this.$={type:"IsNullBooleanPrimary",hasNot:a[o-1],value:a[o-3]};break;case 129:this.$={type:"ComparisonBooleanPrimary",left:a[o-2],operator:a[o-1],right:a[o]};break;case 130:this.$={type:"ComparisonSubQueryBooleanPrimary",operator:a[o-4],subQueryOpt:a[o-3],left:a[o-5],right:a[o-1]};break;case 132:this.$={type:"BooleanExtra",value:a[o]};break;case 134:this.$={type:"IsExpression",hasNot:a[o-1],left:a[o-3],right:a[o]};break;case 135:this.$={type:"NotExpression",value:a[o]};break;case 136:this.$={type:"OrExpression",operator:a[o-1],left:a[o-2],right:a[o]};break;case 137:this.$={type:"AndExpression",operator:a[o-1],left:a[o-2],right:a[o]};break;case 138:this.$={type:"XorExpression",operator:a[o-1],left:a[o-2],right:a[o]};break;case 139:this.$={type:"ExpressionList",value:[a[o]]};break;case 140:case 215:this.$=a[o-2],this.$.value.push(a[o]);break;case 147:this.$={type:"GroupBy",value:a[o-1],rollUp:a[o]};break;case 150:this.$={type:"OrderBy",value:a[o-1],rollUp:a[o]};break;case 152:case 198:this.$=a[o-2],a[o-2].push(a[o]);break;case 153:this.$={type:"GroupByOrderByItem",value:a[o-1],sortOpt:a[o]};break;case 159:this.$={type:"Limit",value:[a[o]]};break;case 160:this.$={type:"Limit",value:[a[o-2],a[o]]};break;case 161:this.$={type:"Limit",value:[a[o],a[o-2]],offsetMode:!0};break;case 168:this.$=a[o-1]+" "+a[o];break;case 169:this.$=a[o-3]+" "+a[o-2]+" "+a[o-1]+" "+a[o];break;case 170:this.$={};break;case 171:this.$={from:a[o-8],partition:a[o-7],where:a[o-6],groupBy:a[o-5],having:a[o-4],orderBy:a[o-3],limit:a[o-2],procedure:a[o-1],updateLockMode:a[o]};break;case 172:this.$={type:"TableReferences",value:[a[o]]};break;case 174:this.$={type:"TableReference",value:a[o]};break;case 175:this.$={type:"TableReference",hasOj:!0,value:a[o-1]};break;case 183:this.$={leftRight:null,outOpt:null};break;case 184:this.$={leftRight:a[o-1],outOpt:a[o]};break;case 185:this.$={type:"InnerCrossJoinTable",innerCrossOpt:a[o-2],left:a[o-3],right:a[o],condition:null};break;case 186:this.$={type:"InnerCrossJoinTable",innerCrossOpt:a[o-3],left:a[o-4],right:a[o-1],condition:a[o]};break;case 187:this.$={type:"StraightJoinTable",left:a[o-3],right:a[o-1],condition:a[o]};break;case 188:this.$={type:"LeftRightJoinTable",leftRight:a[o-4],outOpt:a[o-3],left:a[o-5],right:a[o-1],condition:a[o]};break;case 189:this.$={type:"NaturalJoinTable",leftRight:a[o-2].leftRight,outOpt:a[o-2].outOpt,left:a[o-4],right:a[o]};break;case 192:this.$={type:"OnJoinCondition",value:a[o]};break;case 194:this.$={type:"UsingJoinCondition",value:a[o-1]};break;case 200:this.$={type:"Partitions",value:a[o-1]};break;case 202:this.$={hasAs:!0,alias:a[o]};break;case 203:this.$={hasAs:!1,alias:a[o]};break;case 207:case 208:case 209:this.$={type:"ForOptIndexHint",value:a[o]};break;case 214:this.$={type:"IndexHintList",value:[a[o]]};break;case 216:this.$={type:"UseIndexHint",value:a[o-1],forOpt:a[o-3],indexOrKey:a[o-4]};break;case 217:this.$={type:"IgnoreIndexHint",value:a[o-1],forOpt:a[o-3],indexOrKey:a[o-4]};break;case 218:this.$={type:"ForceIndexHint",value:a[o-1],forOpt:a[o-3],indexOrKey:a[o-4]};break;case 219:this.$={type:"TableFactor",value:a[o-3],partition:a[o-2],alias:a[o-1].alias,hasAs:a[o-1].hasAs,indexHintOpt:a[o]};break;case 220:this.$={type:"TableFactor",value:{type:"SubQuery",value:a[o-2]},alias:a[o].alias,hasAs:a[o].hasAs};break;case 221:this.$=a[o-1],this.$.hasParentheses=!0;break;case 222:this.$={type:"PlaceHolder",value:a[o],param:a[o].slice(2,-1)}}},table:[{3:1,4:2,7:3,9:5,10:6,13:7,16:t,18:s},{1:[3]},{5:9,6:r,8:i,14:a},{5:12,6:r,8:i},e([16,32,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],n,{15:13,29:o,30:c,31:l}),e(h,[2,5]),e([6,8,146],u,{11:17,137:18,138:p}),{14:y},{4:21,18:s},{6:[1,22]},{15:23,18:n,29:o,30:c,31:l},{6:[2,3]},{6:[1,24]},e(f,[2,18],{19:25,32:[1,26]}),e(b,[2,13]),e(b,[2,14]),e(b,[2,15]),e(h,E,{12:27,145:28,146:_}),e(g,[2,149]),{16:d,35:m,47:32,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,136:30,139:31,195:W},{15:68,16:n,29:o,30:c,31:l},{17:[1,69]},{1:[2,1]},{4:70,9:71,18:s},{1:[2,2]},e(w,[2,20],{20:72,33:[1,73]}),e(f,[2,17]),e(h,[2,6]),e(H,[2,163]),{35:[1,74]},e(g,M,{132:75,43:G,133:j}),e(Q,[2,151]),e(Q,[2,154],{140:78,109:X,126:Y,127:J,141:[1,82],142:[1,83]}),e(K,[2,133],{113:85,34:[1,86],114:[1,87],115:[1,88],116:[1,89],117:[1,90],118:[1,91],119:[1,92],123:[1,84]}),{16:d,35:m,47:93,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(q,[2,127]),e(q,[2,111],{102:94,45:V,79:z,81:Z,93:ee,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe,101:ce,103:le,107:he,108:he,111:he,112:he,110:[1,95]}),e(ue,[2,94]),e(pe,[2,81]),e(pe,ye,{50:fe,90:be}),e(pe,[2,83]),e(pe,[2,84]),{4:112,16:d,18:s,35:m,47:113,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,85:111,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:[1,114]},{16:[1,115]},{49:116,52:Ee},e(pe,[2,90]),{90:[1,118]},e(pe,[2,52]),e(pe,[2,53]),e(pe,[2,54]),e(pe,[2,55]),e(pe,[2,56]),e([6,8,14,17,34,36,43,45,50,51,52,53,71,72,74,77,79,81,89,90,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],_e,{16:ge}),{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:120,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:121,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:122,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:123,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:124,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,47:126,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,69:125,71:[2,69],75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(pe,[2,45]),e(pe,[2,46]),e(pe,[2,47]),e(pe,[2,48]),e(pe,[2,49]),e(pe,[2,50]),e(pe,[2,51]),e(pe,[2,222]),{10:128,13:127,16:t},e([6,8,14,138,146],[2,9]),e(h,[2,10],{14:a}),e(h,[2,11]),e(de,[2,22],{21:129,36:[1,130]}),{34:[1,131]},e(H,[2,159],{43:[1,132],147:[1,133]}),e(g,[2,150]),{16:d,35:m,47:32,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,139:134,195:W},{134:[1,135]},e(Q,[2,153]),{16:d,35:m,47:136,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:d,35:m,47:137,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:d,35:m,47:138,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(Q,[2,155]),e(Q,[2,156]),e([59,60,62,125],he,{102:139,103:le}),{16:d,29:[1,142],35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,106:140,120:141,121:[1,143],195:W},e(me,[2,118]),e(me,[2,119]),e(me,[2,120]),e(me,[2,121]),e(me,[2,122]),e(me,[2,123]),e(me,[2,124]),e(K,[2,135]),{107:[1,144],108:[1,145],111:[1,146],112:[1,147]},{111:[1,148]},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:149,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:150,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:151,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:152,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:153,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:154,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:155,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:156,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:157,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:158,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:159,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:160,195:W},e([59,60,62,107,108,111,112,125],[2,108]),{91:[1,161]},{52:Oe},{17:[1,163],43:Se},{17:[1,165]},e(ke,[2,139],{109:X,126:Y,127:J}),{16:d,35:m,47:113,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,85:166,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{4:167,18:s},{16:d,35:m,47:168,49:39,50:fe,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(xe,_e),{49:169,52:Ee},e(ke,Ne,{122:33,106:35,92:36,80:37,63:38,65:40,78:41,75:46,54:48,55:49,58:50,61:51,64:52,66:170,67:171,46:173,47:175,49:176,16:d,30:Ie,35:m,45:Re,52:O,53:S,56:k,57:x,59:N,60:I,62:R,76:v,79:$,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,103:F,195:W}),e(pe,[2,76]),e(pe,[2,77]),e(pe,[2,78]),e(pe,[2,79]),e(pe,[2,80]),{70:177,71:[1,178]},{71:[2,70],109:X,126:Y,127:J},e(ve,[2,7],{14:y}),e(ve,[2,8]),e($e,[2,24],{22:179,37:[1,180]}),e(de,[2,21]),{35:[1,181]},{35:[1,182]},{35:[1,183]},e(Q,[2,152]),e(Ae,[2,146]),e(Te,[2,136],{109:X}),e(K,[2,137]),e(Te,[2,138],{109:X}),{58:186,59:N,60:I,62:[1,185],124:184,125:[1,187]},e(q,[2,129]),{16:[1,188]},{16:[2,125]},{16:[2,126]},{16:[1,189]},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:190,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:191,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:192,195:W},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:193,195:W},e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,95],{45:V,79:z,81:Z,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe,101:ce}),e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,94,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,96],{45:V,79:z,81:Z,95:se,96:re,97:ie,98:ae,99:ne,100:oe}),e(Le,[2,97],{45:V,79:z,81:Z,97:ie,98:ae,99:ne,100:oe}),e(Le,[2,98],{45:V,79:z,81:Z,97:ie,98:ae,99:ne,100:oe}),e(Ce,[2,99],{45:V,97:ie,98:ae,99:ne,100:oe}),e(Ce,[2,100],{45:V,97:ie,98:ae,99:ne,100:oe}),e(ue,[2,101]),e(ue,[2,102]),e(ue,[2,103]),e(ue,[2,104]),e(ue,[2,105]),e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,106],{45:V,79:z,81:Z,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe}),e(pe,[2,91]),e(xe,[2,66]),e(pe,[2,85]),{16:d,35:m,47:194,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(pe,[2,87]),{17:[1,195],43:Se},{17:[1,196]},{89:[1,197],109:X,126:Y,127:J},e(pe,[2,92],{50:fe,90:[1,198]}),{17:[1,199],43:[1,200]},e(ke,[2,59]),e(ke,[2,61]),e(ke,[2,62]),{16:d,35:m,47:201,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(ke,[2,64],{109:X,126:Y,127:J}),e([6,8,14,17,34,43,45,51,52,53,79,81,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,157],ye,{50:[1,202],90:be}),{71:[1,204],73:203,74:[1,205],77:[2,73]},{16:d,35:m,47:206,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(Pe,[2,26],{23:207,38:[1,208]}),e($e,[2,23]),e(w,[2,19]),e(H,[2,160]),e(H,[2,161]),e(K,[2,134]),e(q,[2,128]),e(K,[2,131]),e(K,[2,132]),{4:209,18:s},{4:210,16:d,18:s,35:m,47:113,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,85:211,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{45:V,79:z,81:Z,93:ee,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe,101:ce,109:[1,212]},e(q,[2,109],{104:213,105:[1,214]}),e(q,[2,117],{45:V,79:z,81:Z,93:ee,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe,101:ce}),e(q,[2,115],{45:V,79:z,81:Z,93:ee,94:te,95:se,96:re,97:ie,98:ae,99:ne,100:oe,101:ce}),e(ke,[2,140],{109:X,126:Y,127:J}),e(pe,[2,86]),e(pe,[2,88]),e(pe,[2,89]),{91:[1,215]},e(pe,[2,57]),e(ke,Ne,{122:33,106:35,92:36,80:37,63:38,65:40,78:41,75:46,54:48,55:49,58:50,61:51,64:52,46:173,47:175,49:176,67:216,16:d,30:Ie,35:m,45:Re,52:O,53:S,56:k,57:x,59:N,60:I,62:R,76:v,79:$,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,103:F,195:W}),e(ke,[2,63],{109:X,126:Y,127:J}),{45:[1,217],52:Oe},{77:[1,218]},{16:d,35:m,47:219,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:d,35:m,47:220,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{72:[1,221],109:X,126:Y,127:J},e(Ue,[2,28],{24:222,39:[1,223]}),e(Pe,[2,25]),{17:[1,224]},{17:[1,225]},{17:[1,226],43:Se},{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,106:227,195:W},e(q,[2,116]),{16:d,35:m,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:228,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,195:W},e(pe,[2,93]),e(ke,[2,58]),e(Be,[2,39]),e(pe,[2,75]),{72:[1,229],109:X,126:Y,127:J},{77:[2,74],109:X,126:Y,127:J},{16:d,35:m,47:230,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(De,[2,29],{25:231,40:[1,232],41:[1,233]}),e(Ue,[2,27]),e(q,[2,130]),e(q,[2,112]),e(q,[2,113]),e(q,[2,114]),e(q,[2,110]),{16:d,35:m,47:234,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(Fe,[2,71],{109:X,126:Y,127:J}),e(We,[2,33],{26:235,42:[1,236]}),e(De,[2,30]),e(De,[2,31]),e(Fe,[2,72],{109:X,126:Y,127:J}),{16:d,27:237,35:m,44:238,45:we,46:240,47:241,49:176,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(We,[2,32]),e(He,[2,170],{28:242,43:[1,243],157:[1,244]}),e(Be,[2,35]),e(Be,[2,36]),e(Be,[2,37]),e(Be,[2,40],{48:245,51:[1,246],52:[1,247],53:[1,248],109:X,126:Y,127:J}),e(He,[2,12]),{16:d,35:m,44:249,45:we,46:240,47:241,49:176,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:Me,49:256,52:Ee,88:Ge,158:250,160:251,161:252,172:255,174:254},e(Be,[2,38]),{52:[1,258],53:[1,259]},e(Be,[2,42]),e(Be,[2,44]),e(Be,[2,34]),e([6,8,14,17,129,135,138,144,146,150,152,154],je,{159:260,43:Qe,182:Xe}),e(Ye,[2,172]),e(Ye,[2,174],{163:263,166:265,36:Je,164:Ke,165:qe,167:Ve,168:ze,173:Ze,177:et}),{162:[1,271]},e(tt,[2,195]),e(tt,[2,196]),e([6,8,14,17,36,43,51,52,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],je,{159:272,50:fe,182:Xe}),{4:273,16:Me,18:s,49:256,52:Ee,88:Ge,158:274,160:251,161:252,172:255,174:254},e(Be,[2,41]),e(Be,[2,43]),e(st,[2,141],{128:275,129:[1,276]}),{16:Me,49:256,52:Ee,88:Ge,160:277,161:252,172:255,174:254},{16:[1,278]},{173:[1,279]},{16:Me,49:256,52:Ee,174:280},{169:281,170:rt,173:it},{166:284,167:Ve,168:ze,171:283,173:[2,183]},{173:[2,177]},{173:[2,178]},e(at,[2,179]),e(at,[2,180]),{16:Me,49:256,52:Ee,161:285,172:255,174:254},e(nt,ot,{183:286,49:288,51:ct,52:Ee}),{17:[1,289]},{17:[1,290],43:Qe},e(Ae,[2,143],{130:291,131:292,135:[1,293]}),{16:d,35:m,47:294,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(Ye,[2,173]),{49:296,52:Ee,181:295},{16:Me,49:256,52:Ee,174:297},{176:298,179:lt},{173:[1,300]},{173:[2,182]},{173:[1,301]},{169:302,170:rt,173:it},{36:Je,89:[1,303],163:263,164:Ke,165:qe,166:265,167:Ve,168:ze,173:Ze,177:et},e(tt,[2,212],{189:304,190:305,191:306,192:ht,193:ut,194:pt}),{49:310,52:Ee},e(nt,[2,203],{50:fe}),e(tt,ot,{49:288,183:311,51:ct,52:Ee}),e(tt,[2,221]),e(yt,[2,157],{143:312,144:[1,313]}),e(Ae,[2,144]),{16:d,35:m,47:32,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,136:314,139:31,195:W},e(st,[2,142],{109:X,126:Y,127:J}),{17:[1,315],43:[1,316]},e(ke,[2,197],{50:fe}),e([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,185],{175:317,176:318,179:lt,180:ft}),e(tt,[2,187]),{16:d,35:m,47:320,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},{16:Me,49:256,52:Ee,161:321,172:255,174:254},{16:Me,49:256,52:Ee,174:322},{173:[2,184]},e(Ye,[2,175]),e(tt,[2,219]),e(tt,[2,213]),e(tt,[2,214]),{184:324,185:bt,186:Et},{184:327,185:bt,186:Et},{184:328,185:bt,186:Et},e(nt,[2,202],{50:fe}),e(tt,[2,220]),e(g,u,{137:18,11:329,138:p}),{16:d,35:m,47:330,49:39,52:O,53:S,54:48,55:49,56:k,57:x,58:50,59:N,60:I,61:51,62:R,63:38,64:52,65:40,75:46,76:v,78:41,79:$,80:37,81:A,82:T,83:L,84:C,86:P,87:U,88:B,91:D,92:36,103:F,106:35,122:33,195:W},e(Ae,M,{132:331,43:G,133:j}),e([6,8,14,17,36,43,51,52,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,200]),{49:332,52:Ee},e(tt,[2,186]),e(tt,[2,193]),{16:[1,333]},e(tt,[2,192],{109:X,126:Y,127:J}),{36:Je,163:263,164:Ke,165:qe,166:265,167:Ve,168:ze,173:Ze,175:334,176:318,177:et,179:lt,180:ft},e(tt,[2,189]),{191:335,192:ht,193:ut,194:pt},{16:_t,152:gt,187:336},e(dt,[2,204]),e(dt,[2,205]),{16:_t,152:gt,187:338},{16:_t,152:gt,187:339},e(H,E,{145:28,12:340,146:_}),e(yt,[2,158],{109:X,126:Y,127:J}),e(Ae,[2,147]),e(ke,[2,198],{50:fe}),{49:342,52:Ee,68:341},e(tt,[2,188]),e(tt,[2,215]),{16:[1,343]},{135:[1,346],138:[1,345],173:[1,344]},{16:[1,347]},{16:[1,348]},e(mt,[2,164],{148:349,149:350,150:[1,351]}),{17:[1,352],43:Ot},e(ke,[2,67],{50:fe}),{17:[2,210],49:342,52:Ee,68:355,188:354},{16:[2,207]},{16:[2,208]},{16:[2,209]},{49:342,52:Ee,68:356},{49:342,52:Ee,68:357},e(He,[2,167],{151:358,152:[1,359],154:[1,360]}),e(mt,[2,165]),{52:[1,362],65:361},e(tt,[2,194]),{49:363,52:Ee},{17:[1,364]},{17:[2,211],43:Ot},{17:[1,365],43:Ot},{17:[1,366],43:Ot},e(He,[2,171]),{153:[1,367]},{107:[1,368]},e(mt,[2,166]),{16:ge},e(ke,[2,68],{50:fe}),e(tt,[2,216]),e(tt,[2,217]),e(tt,[2,218]),e(He,[2,168]),{155:[1,369]},{156:[1,370]},e(He,[2,169])],defaultActions:{11:[2,3],22:[2,1],24:[2,2],142:[2,125],143:[2,126],267:[2,177],268:[2,178],282:[2,182],302:[2,184],344:[2,207],345:[2,208],346:[2,209]},parseError:function(e,t){if(!t.recoverable){var s=new Error(e);throw s.hash=t,s}this.trace(e)},parse:function(e){var t=this,s=[0],r=[null],i=[],a=this.table,n="",o=0,c=0,l=0,h=i.slice.call(arguments,1),u=Object.create(this.lexer),p={yy:{}};for(var y in this.yy)Object.prototype.hasOwnProperty.call(this.yy,y)&&(p.yy[y]=this.yy[y]);u.setInput(e,p.yy),p.yy.lexer=u,p.yy.parser=this,void 0===u.yylloc&&(u.yylloc={});var f=u.yylloc;i.push(f);var b=u.options&&u.options.ranges;"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var E,_,g,d,m,O,S,k,x,N,I={};;){if(g=s[s.length-1],this.defaultActions[g]?d=this.defaultActions[g]:(null==E&&(N=void 0,"number"!=typeof(N=u.lex()||1)&&(N=t.symbols_[N]||N),E=N),d=a[g]&&a[g][E]),void 0===d||!d.length||!d[0]){var R="";for(O in x=[],a[g])this.terminals_[O]&&O>2&&x.push("'"+this.terminals_[O]+"'");R=u.showPosition?"Parse error on line "+(o+1)+":\n"+u.showPosition()+"\nExpecting "+x.join(", ")+", got '"+(this.terminals_[E]||E)+"'":"Parse error on line "+(o+1)+": Unexpected "+(1==E?"end of input":"'"+(this.terminals_[E]||E)+"'"),this.parseError(R,{text:u.match,token:this.terminals_[E]||E,line:u.yylineno,loc:f,expected:x})}if(d[0]instanceof Array&&d.length>1)throw new Error("Parse Error: multiple actions possible at state: "+g+", token: "+E);switch(d[0]){case 1:s.push(E),r.push(u.yytext),i.push(u.yylloc),s.push(d[1]),E=null,_?(E=_,_=null):(c=u.yyleng,n=u.yytext,o=u.yylineno,f=u.yylloc,l>0&&l--);break;case 2:if(S=this.productions_[d[1]][1],I.$=r[r.length-S],I._$={first_line:i[i.length-(S||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(S||1)].first_column,last_column:i[i.length-1].last_column},b&&(I._$.range=[i[i.length-(S||1)].range[0],i[i.length-1].range[1]]),void 0!==(m=this.performAction.apply(I,[n,c,o,p.yy,d[1],r,i].concat(h))))return m;S&&(s=s.slice(0,-1*S*2),r=r.slice(0,-1*S),i=i.slice(0,-1*S)),s.push(this.productions_[d[1]][0]),r.push(I.$),i.push(I._$),k=a[s[s.length-2]][s[s.length-1]],s.push(k);break;case 3:return!0}}return!0}},kt={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,s=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),s.length-1&&(this.yylineno-=s.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:s?(s.length===r.length?this.yylloc.first_column:0)+r[r.length-s.length].length-s[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var s,r,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(r=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],s=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),s)return s;if(this._backtrack){for(var a in i)this[a]=i[a];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,s,r;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var i=this._currentRules(),a=0;a<i.length;a++)if((s=this._input.match(this.rules[i[a]]))&&(!t||s[0].length>t[0].length)){if(t=s,r=a,this.options.backtrack_lexer){if(!1!==(e=this.test_match(s,i[a])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,i[r]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return e||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(e,t,s,r){switch(s){case 0:case 1:case 2:case 3:break;case 4:return 195;case 5:case 6:case 7:case 115:case 117:return 52;case 8:return 18;case 9:return 29;case 10:return 121;case 11:return 30;case 12:return 31;case 13:return 32;case 14:return 33;case 15:return 36;case 16:return 37;case 17:return 38;case 18:return 39;case 19:return 40;case 20:return 41;case 21:return 42;case 22:return 51;case 23:return 59;case 24:return 60;case 25:return 62;case 26:return"COLLATE";case 27:return 84;case 28:return 86;case 29:return 87;case 30:return 76;case 31:return 71;case 32:return 72;case 33:return 74;case 34:return 77;case 35:return 98;case 36:return 99;case 37:return 103;case 38:return 108;case 39:return 107;case 40:return 110;case 41:return 111;case 42:return 105;case 43:return 112;case 44:return 123;case 45:return 125;case 46:return 109;case 47:return 126;case 48:return 127;case 49:return 157;case 50:return 182;case 51:return 192;case 52:return 185;case 53:return 186;case 54:return 152;case 55:return 173;case 56:return 138;case 57:return 135;case 58:return 193;case 59:return 194;case 60:return 164;case 61:return 165;case 62:return 179;case 63:return 180;case 64:return 167;case 65:return 168;case 66:return 170;case 67:return 177;case 68:return 129;case 69:return 141;case 70:return 142;case 71:return 133;case 72:return 134;case 73:return 144;case 74:return 147;case 75:return 150;case 76:return 153;case 77:return 154;case 78:return 155;case 79:return 156;case 80:return 162;case 81:return 146;case 82:return 14;case 83:return 43;case 84:return 34;case 85:return 16;case 86:return 17;case 87:return 82;case 88:return 119;case 89:return 83;case 90:return 90;case 91:return 93;case 92:return 94;case 93:return 79;case 94:return 81;case 95:return 45;case 96:return 97;case 97:return 100;case 98:return 101;case 99:return 96;case 100:return 114;case 101:return 115;case 102:return 95;case 103:return"<=>";case 104:return 116;case 105:return 118;case 106:return 117;case 107:return 88;case 108:return 89;case 109:return 8;case 110:return 91;case 111:return 53;case 112:return 57;case 113:return 35;case 114:return 56;case 116:return 50;case 118:return 6;case 119:return"INVALID"}},rules:[/^(?:[/][*](.|\n)*?[*][/])/i,/^(?:[-][-]\s.*\n)/i,/^(?:[#]\s.*\n)/i,/^(?:\s+)/i,/^(?:[$][{](.*?)[}])/i,/^(?:([`][^`]+[`])+)/i,/^(?:(["][^"]+["])+)/i,/^(?:[\[]([^\]]|\]\])+[\]])/i,/^(?:SELECT\b)/i,/^(?:ALL\b)/i,/^(?:ANY\b)/i,/^(?:DISTINCT\b)/i,/^(?:DISTINCTROW\b)/i,/^(?:HIGH_PRIORITY\b)/i,/^(?:MAX_STATEMENT_TIME\b)/i,/^(?:STRAIGHT_JOIN\b)/i,/^(?:SQL_SMALL_RESULT\b)/i,/^(?:SQL_BIG_RESULT\b)/i,/^(?:SQL_BUFFER_RESULT\b)/i,/^(?:SQL_CACHE\b)/i,/^(?:SQL_NO_CACHE\b)/i,/^(?:SQL_CALC_FOUND_ROWS\b)/i,/^(?:AS\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:NULL\b)/i,/^(?:COLLATE\b)/i,/^(?:BINARY\b)/i,/^(?:ROW\b)/i,/^(?:EXISTS\b)/i,/^(?:CASE\b)/i,/^(?:WHEN\b)/i,/^(?:THEN\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:DIV\b)/i,/^(?:MOD\b)/i,/^(?:NOT\b)/i,/^(?:BETWEEN\b)/i,/^(?:IN\b)/i,/^(?:SOUNDS\b)/i,/^(?:LIKE\b)/i,/^(?:ESCAPE\b)/i,/^(?:REGEXP\b)/i,/^(?:IS\b)/i,/^(?:UNKNOWN\b)/i,/^(?:AND\b)/i,/^(?:OR\b)/i,/^(?:XOR\b)/i,/^(?:FROM\b)/i,/^(?:PARTITION\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:KEY\b)/i,/^(?:FOR\b)/i,/^(?:JOIN\b)/i,/^(?:ORDER\s+BY\b)/i,/^(?:GROUP\s+BY\b)/i,/^(?:IGNORE\b)/i,/^(?:FORCE\b)/i,/^(?:INNER\b)/i,/^(?:CROSS\b)/i,/^(?:ON\b)/i,/^(?:USING\b)/i,/^(?:LEFT\b)/i,/^(?:RIGHT\b)/i,/^(?:OUTER\b)/i,/^(?:NATURAL\b)/i,/^(?:WHERE\b)/i,/^(?:ASC\b)/i,/^(?:DESC\b)/i,/^(?:WITH\b)/i,/^(?:ROLLUP\b)/i,/^(?:HAVING\b)/i,/^(?:OFFSET\b)/i,/^(?:PROCEDURE\b)/i,/^(?:UPDATE\b)/i,/^(?:LOCK\b)/i,/^(?:SHARE\b)/i,/^(?:MODE\b)/i,/^(?:OJ\b)/i,/^(?:LIMIT\b)/i,/^(?:UNION\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\()/i,/^(?:\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\|\|)/i,/^(?:\|)/i,/^(?:&)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:;)/i,/^(?:['](%)+['])/i,/^(?:(['][^']*['])+)/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?[eE][-+]?[0-9]+(\.[0-9]+)?)/i,/^(?:[a-zA-Z_@#\uff3f\u4e00-\u9fa5][a-zA-Z0-9_$@#\uff3f\u4e00-\u9fa5]*)/i,/^(?:\.)/i,/^(?:([`])(?:(?=(\\?))\2.)*?\1)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],inclusive:!0}}};function xt(){this.yy={}}return St.lexer=kt,xt.prototype=St,St.Parser=xt,new xt}(),b=e=>"Prefix"===e?.type&&("+"===e.prefix||"-"===e.prefix)&&"Number"===e.value.type,E=e=>(e=>"String"===e?.type||"Number"===e?.type||"Boolean"===e?.type)(e)||b(e),_=e=>"Identifier"===e?.type,g=e=>{switch(typeof e){case"number":return`${e}`;case"boolean":return e?"TRUE":"FALSE";default:return`'${e}'`}},d=e=>{const t="string"==typeof e?e:e.value;return t.startsWith("`")&&t.endsWith("`")?t.replaceAll(/(^`|`$)/g,"").replaceAll("``","`"):t.startsWith('"')&&t.endsWith('"')?t.replaceAll(/(^"|"$)/g,"").replaceAll('""','"'):t.startsWith("[")&&t.endsWith("]")?t.replaceAll(/(^\[|\]$)/g,"").replaceAll("]]","]"):t},m=(e,t)=>{if(t){if("<"===e)return">";if("<="===e)return">=";if(">"===e)return"<";if(">="===e)return"<="}return"<>"===e?"!=":e},O=e=>{if("String"===e.type){const t=e.value;if(t.startsWith("'")&&t.endsWith("'")||t.startsWith('"')&&t.endsWith('"')){return t.substring(1,t.length-1).replaceAll(/''/gm,"'")}return t}return"Boolean"===e.type?"true"===e.value.toLowerCase():b(e)?parseFloat(`${e.prefix}${e.value.value}`):parseFloat(e.value)},S=e=>{const t=e.operator.replace("&&","and").replace("||","or").toLowerCase();return"AndExpression"===e.left.type||"OrExpression"===e.left.type||"XorExpression"===e.left.type?[...S(e.left),t,e.right]:[e.left,t,e.right]},k=e=>{const t=S(e);let s=0;const r={combinator:"or",expressions:[]};let i={combinator:"xor",expressions:[]},a={combinator:"and",expressions:[]};for(let o=0;o<t.length-2;o+=2){let e=0;if("and"===t[o+1]?e=2-s:"xor"===t[o+1]?e=1-s:"or"===t[o+1]&&(e=0-s),e>0)for(let r=0;r<e;r++)s+=1,1===s?(i={combinator:"xor",expressions:[]},1===e&&(i.expressions.push(t[o]),(o>=t.length-3||"xor"===t[o+3])&&i.expressions.push(t[o+2]))):2===s&&(a={combinator:"and",expressions:[]},a.expressions.push(t[o],t[o+2]));else if(e<0)for(let n=0;n>e;n--)s-=1,1===s?(i.expressions.push(a),-1===e&&i.expressions.push(t[o+2])):0===s&&(r.expressions.push(i),o>=t.length-3&&r.expressions.push(t[o+2]));else 0===s?((0===o||o>3&&"or"!==t[o-3])&&r.expressions.push(t[o]),(o>=t.length-3||"or"===t[o+3])&&r.expressions.push(t[o+2])):1===s?i.expressions.push(t[o+2]):2===s&&a.expressions.push(t[o+2])}if(2===s&&(i.expressions.push(a),s-=1),1===s&&(r.expressions.push(i),s-=1),1===r.expressions.length&&"combinator"in r.expressions[0])return 1===r.expressions[0].expressions.length&&"combinator"in r.expressions[0].expressions[0]?r.expressions[0].expressions[0]:r.expressions[0];const n={combinator:"or",expressions:[]};for(const o of r.expressions)"combinator"in o&&"combinator"in o.expressions[0]&&1===o.expressions.length?n.expressions.push(o.expressions[0]):n.expressions.push(o);return n};function x(e,t){void 0===t&&(t={});const{params:s,paramPrefix:r,independentCombinators:i,fields:a,getValueSources:n}=t;let c=/^[ \t\n\r\s]*SELECT\b/i.test(e)?e:/^[ \t\n\r\s]*WHERE\b/i.test(e)?`SELECT * FROM t ${e}`:`SELECT * FROM t WHERE ${e}`,h=!1;const p=y(a);if(h=!!i,s)if(Array.isArray(s)){let e=0;c=c.replace(/\?/g,(()=>{const t=g(s[e]);return e++,t}))}else{const e=Object.keys(s),t=r??":";e.forEach((e=>{c=c.replace(new RegExp(`\\${t}${e}\\b`,"ig"),g(s[e]))}))}const b=(e,t,s)=>function(e){let{fieldsFlat:t,fieldName:s,operator:r,subordinateFieldName:i,getValueSources:a}=e;if(0===t.length)return!0;let n=!1;const o=t.find((e=>e.name===s));o&&(n=!(!i&&"notNull"!==r&&"null"!==r&&!u(o,r,a).some((e=>"value"===e))),n&&i)&&(u(o,r,a).some((e=>"field"===e))&&s!==i&&l(o,t,r).find((e=>e.name===i))||(n=!1));return n}({fieldName:e,fieldsFlat:p,operator:t,subordinateFieldName:s,getValueSources:n}),x=e=>{if("NotExpression"===e.type){const t="SimpleExprParentheses"===e.value.type?e.value.value.value[0]:e.value,s=x(t);if(s)return o(s)?{...s,not:!0}:{rules:[s],not:!0,...!h&&{combinator:"and"}}}else{if("SimpleExprParentheses"===e.type){const t=e.value.value[0];if("AndExpression"===t.type||"OrExpression"===t.type||"XorExpression"===t.type)return x(t);const s=x(t);return s?{rules:[s],...h?{}:{combinator:"and"}}:null}if("AndExpression"===e.type||"OrExpression"===e.type||"XorExpression"===e.type){if(h){const t=S(e).map((e=>"string"==typeof e?e:x(e)));return t.includes(null)?null:{rules:t}}const t=k(e),{combinator:s}=t,r=t.expressions.map((e=>"combinator"in e?{combinator:e.combinator,rules:e.expressions.map((e=>"combinator"in e?{combinator:e.combinator,rules:e.expressions.map((e=>x(e))).filter(Boolean)}:x(e))).filter(Boolean)}:x(e))).filter(Boolean);if(r.length>0)return{combinator:s,rules:r}}else if("IsNullBooleanPrimary"===e.type){if(_(e.value)){const t=d(e.value),s=e.hasNot?"notNull":"null";if(b(t,s))return{field:t,operator:s,value:null}}}else if("ComparisonBooleanPrimary"===e.type){if(_(e.left)&&!_(e.right)||!_(e.left)&&_(e.right)){const t=_(e.left)?e.left.value:e.right.value,s=[e.left,e.right].find((e=>!_(e)));if(E(s)){const r=d(t),i=m(e.operator,_(e.right));if(b(r,i))return{field:r,operator:i,value:O(s)}}}else if(_(e.left)&&_(e.right)){const t=d(e.left),s=d(e.right),r=m(e.operator);if(b(t,r,s))return{field:t,operator:r,value:s,valueSource:"field"}}}else if("InExpressionListPredicate"===e.type){if(_(e.left)){const s=d(e.left),r=e.right.value.filter(E).map(O),i=e.hasNot?"notIn":"in",a=e.right.value.filter(_).filter((e=>b(s,i,e.value))).map(d);if(r.length>0){const s=t?.listsAsArrays?r:r.join(", ");return{field:d(e.left),operator:i,value:s}}if(a.length>0){const s=t?.listsAsArrays?a:a.join(", ");return{field:d(e.left),operator:i,value:s,valueSource:"field"}}}}else if("BetweenPredicate"===e.type){if(_(e.left)&&E(e.right.left)&&E(e.right.right)){const s=[e.right.left,e.right.right].map(O),r=t?.listsAsArrays?s:s.join(", "),i=e.hasNot?"notBetween":"between";return{field:d(e.left),operator:i,value:r}}if(_(e.left)&&_(e.right.left)&&_(e.right.right)){const s=d(e.left),r=[e.right.left,e.right.right].map(d),i=e.hasNot?"notBetween":"between";if(r.every((e=>b(s,i,e)))){const e=t?.listsAsArrays?r:r.join(", ");return{field:s,operator:i,value:e,valueSource:"field"}}}}else if("LikePredicate"===e.type)if(_(e.left)&&"String"===e.right.type){const t=O(e.right),s=t.replace(/(^%)|(%$)/g,"");let r="=";/^%.*%$/.test(t)||"%"===t?r=e.hasNot?"doesNotContain":"contains":/%$/.test(t)?r=e.hasNot?"doesNotBeginWith":"beginsWith":/^%/.test(t)&&(r=e.hasNot?"doesNotEndWith":"endsWith");const i=d(e.left);if(b(i,r))return{field:i,operator:r,value:s}}else if(!_(e.left)||"StartsWithExpr"!==e.right.type&&"EndsWithExpr"!==e.right.type&&"ContainsExpr"!==e.right.type){if(_(e.left)&&_(e.right)){const t=d(e.left),s=d(e.right),r="=";if(b(t,r,s))return{field:t,operator:r,value:s,valueSource:"field"}}}else{let t="",s="=";_(e.right.value)&&(t=d(e.right.value)),"EndsWithExpr"===e.right.type?s=e.hasNot?"doesNotEndWith":"endsWith":"StartsWithExpr"===e.right.type?s=e.hasNot?"doesNotBeginWith":"beginsWith":"ContainsExpr"===e.right.type&&(s=e.hasNot?"doesNotContain":"contains");const r=d(e.left);if("="!==s&&b(r,s,t))return{field:r,operator:s,value:t,valueSource:"field"}}}return null},{where:N}=f.parse(c).value;if(N){const e=x(N);if(e)return o(e)?e:{rules:[e],...h?{}:{combinator:"and"}}}return{rules:[],...h?{}:{combinator:"and"}}}}}]);