"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6515],{40696:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var o=n(24246),i=n(71670);const s={title:"ShiftActions",description:"Shift up/down buttons"},r=void 0,c={id:"components/shiftactions",title:"ShiftActions",description:"Shift up/down buttons",source:"@site/docs/components/shiftactions.mdx",sourceDirName:"components",slug:"/components/shiftactions",permalink:"/docs/next/components/shiftactions",draft:!1,unlisted:!1,editUrl:"https://github.com/react-querybuilder/react-querybuilder/edit/main/website/docs/components/shiftactions.mdx",tags:[],version:"current",frontMatter:{title:"ShiftActions",description:"Shift up/down buttons"}},a={},h=[];function d(t){const e=Object.assign({p:"p",code:"code",a:"a",admonition:"admonition"},(0,i.a)(),t.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:["Renders a ",(0,o.jsx)(e.code,{children:"<div>"})," with default styles ",(0,o.jsx)(e.code,{children:"display: flex; flex-direction: column;"})," containing two ",(0,o.jsx)(e.code,{children:"<button>"})," elements. When the ",(0,o.jsx)(e.a,{href:"./querybuilder#showshiftactions",children:(0,o.jsx)(e.code,{children:"showShiftActions"})})," prop is ",(0,o.jsx)(e.code,{children:"true"}),", these two buttons will appear at the front of each rule and group (except the root group). The first button will shift the rule/group one spot higher, while the second will shift it one spot lower."]}),"\n",(0,o.jsx)(e.admonition,{type:"note",children:(0,o.jsx)(e.p,{children:'"Higher" and "lower" are respective of the entire hierarchy, not just the sibling objects. For example, if a subgroup is immediately below a rule, shifting the rule down will make it the first element of that subgroup.'})})]})}const l=function(t={}){const{wrapper:e}=Object.assign({},(0,i.a)(),t.components);return e?(0,o.jsx)(e,Object.assign({},t,{children:(0,o.jsx)(d,t)})):d(t)}},71670:(t,e,n)=>{n.d(e,{a:()=>r});var o=n(27378);const i={},s=o.createContext(i);function r(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}}}]);