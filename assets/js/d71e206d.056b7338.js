"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22802],{49579:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});var i=s(62540),l=s(65404);const a={},t="FormatQueryOptions",n={id:"react-querybuilder/interfaces/FormatQueryOptions",title:"FormatQueryOptions",description:"Options object shape for formatQuery.",source:"@site/api/react-querybuilder/interfaces/FormatQueryOptions.md",sourceDirName:"react-querybuilder/interfaces",slug:"/react-querybuilder/interfaces/FormatQueryOptions",permalink:"/api/react-querybuilder/interfaces/FormatQueryOptions",draft:!1,unlisted:!1,editUrl:"https://github.com/react-querybuilder/react-querybuilder/edit/main/website/api/react-querybuilder/interfaces/FormatQueryOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"FieldSelectorProps\\<F\\>",permalink:"/api/react-querybuilder/interfaces/FieldSelectorProps"},next:{title:"FullCombinator\\<N\\>",permalink:"/api/react-querybuilder/interfaces/FullCombinator"}},c={},d=[{value:"Extended by",id:"extended-by",level:2},{value:"Properties",id:"properties",level:2},{value:"fallbackExpression?",id:"fallbackexpression",level:3},{value:"Source",id:"source",level:4},{value:"fields?",id:"fields",level:3},{value:"Source",id:"source-1",level:4},{value:"format?",id:"format",level:3},{value:"Source",id:"source-2",level:4},{value:"numberedParams?",id:"numberedparams",level:3},{value:"Default",id:"default",level:4},{value:"Source",id:"source-3",level:4},{value:"paramPrefix?",id:"paramprefix",level:3},{value:"Default",id:"default-1",level:4},{value:"Source",id:"source-4",level:4},{value:"paramsKeepPrefix?",id:"paramskeepprefix",level:3},{value:"Default",id:"default-2",level:4},{value:"Example",id:"example",level:4},{value:"Source",id:"source-5",level:4},{value:"parseNumbers?",id:"parsenumbers",level:3},{value:"Source",id:"source-6",level:4},{value:"placeholderFieldName?",id:"placeholderfieldname",level:3},{value:"Default",id:"default-3",level:4},{value:"Source",id:"source-7",level:4},{value:"placeholderOperatorName?",id:"placeholderoperatorname",level:3},{value:"Default",id:"default-4",level:4},{value:"Source",id:"source-8",level:4},{value:"quoteFieldNamesWith?",id:"quotefieldnameswith",level:3},{value:"Default",id:"default-5",level:4},{value:"Examples",id:"examples",level:4},{value:"Source",id:"source-9",level:4},{value:"quoteValuesWith?",id:"quotevalueswith",level:3},{value:"Default",id:"default-6",level:4},{value:"Source",id:"source-10",level:4},{value:"ruleProcessor?",id:"ruleprocessor",level:3},{value:"Source",id:"source-11",level:4},{value:"validator?",id:"validator",level:3},{value:"Source",id:"source-12",level:4},{value:"valueProcessor?",id:"valueprocessor",level:3},{value:"Source",id:"source-13",level:4}];function o(e){const r={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"formatqueryoptions",children:"FormatQueryOptions"}),"\n",(0,i.jsxs)(r.p,{children:["Options object shape for ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/functions/formatQuery",children:"formatQuery"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"extended-by",children:"Extended by"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"/api/react-querybuilder/interfaces/ValueProcessorOptions",children:(0,i.jsx)(r.code,{children:"ValueProcessorOptions"})})}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(r.h3,{id:"fallbackexpression",children:"fallbackExpression?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"fallbackExpression"}),": ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["This string will be inserted in place of invalid groups for non-JSON formats.\nDefaults to ",(0,i.jsx)(r.code,{children:"'(1 = 1)'"}),' for "sql"/"parameterized"/"parameterized_named" and\n',(0,i.jsx)(r.code,{children:"'$and:[{$expr:true}]'"}),' for "mongodb".']}),"\n",(0,i.jsx)(r.h4,{id:"source",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L85",children:"packages/react-querybuilder/src/types/importExport.ts:85"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"fields",children:"fields?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"fields"}),": ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/FlexibleOptionList",children:(0,i.jsx)(r.code,{children:"FlexibleOptionList"})})," <",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/interfaces/FullField",children:(0,i.jsx)(r.code,{children:"FullField"})}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/interfaces/Option",children:(0,i.jsx)(r.code,{children:"Option"})}),"<",(0,i.jsx)(r.code,{children:"string"}),">, ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/interfaces/Option",children:(0,i.jsx)(r.code,{children:"Option"})}),"<",(0,i.jsx)(r.code,{children:"string"}),">>>"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["This can be the same ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/interfaces/FullField",children:"FullField"})," array passed to ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/functions/QueryBuilder",children:"QueryBuilder"}),", but\nreally all you need to provide is the ",(0,i.jsx)(r.code,{children:"name"})," and ",(0,i.jsx)(r.code,{children:"validator"})," for each field."]}),"\n",(0,i.jsxs)(r.p,{children:["The full field object from this array, where the field's identifying property\nmatches the rule's ",(0,i.jsx)(r.code,{children:"field"}),", will be passed to the rule processor."]}),"\n",(0,i.jsx)(r.h4,{id:"source-1",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L79",children:"packages/react-querybuilder/src/types/importExport.ts:79"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"format",children:"format?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"format"}),": ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/ExportFormat",children:(0,i.jsx)(r.code,{children:"ExportFormat"})})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/ExportFormat",children:"ExportFormat"}),"."]}),"\n",(0,i.jsx)(r.h4,{id:"source-2",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L31",children:"packages/react-querybuilder/src/types/importExport.ts:31"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"numberedparams",children:"numberedParams?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"numberedParams"}),": ",(0,i.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Renders parameter placeholders as a series of sequential numbers\ninstead of '?' like the default. This option will respect the\n",(0,i.jsx)(r.code,{children:"paramPrefix"})," option like the 'parameterized_named' format."]}),"\n",(0,i.jsx)(r.h4,{id:"default",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"false\n"})}),"\n",(0,i.jsx)(r.h4,{id:"source-3",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L117",children:"packages/react-querybuilder/src/types/importExport.ts:117"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"paramprefix",children:"paramPrefix?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"paramPrefix"}),": ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:'This string will be placed in front of named parameters (aka bind variables)\nwhen using the "parameterized_named" export format.'}),"\n",(0,i.jsx)(r.h4,{id:"default-1",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'":"\n'})}),"\n",(0,i.jsx)(r.h4,{id:"source-4",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L92",children:"packages/react-querybuilder/src/types/importExport.ts:92"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"paramskeepprefix",children:"paramsKeepPrefix?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"paramsKeepPrefix"}),": ",(0,i.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Maintains the parameter prefix in the ",(0,i.jsx)(r.code,{children:"params"}),' object keys when using the\n"parameterized_named" export format. Recommended when using SQLite.']}),"\n",(0,i.jsx)(r.h4,{id:"default-2",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"false\n"})}),"\n",(0,i.jsx)(r.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'console.log(formatQuery(query, {\n  format: "parameterized_named",\n  paramPrefix: "$",\n  paramsKeepPrefix: true\n}).params)\n// { $firstName: "Stev" }\n// Default (`paramsKeepPrefix` is `false`):\n// { firstName: "Stev" }\n'})}),"\n",(0,i.jsx)(r.h4,{id:"source-5",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L109",children:"packages/react-querybuilder/src/types/importExport.ts:109"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"parsenumbers",children:"parseNumbers?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"parseNumbers"}),": ",(0,i.jsx)(r.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Renders values as either ",(0,i.jsx)(r.code,{children:"number"}),"-types or unquoted strings, as\nappropriate and when possible. Each ",(0,i.jsx)(r.code,{children:"string"}),"-type value is evaluated\nagainst ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/variables/numericRegex",children:"numericRegex"})," to determine if it can be represented as a\nplain numeric value. If so, ",(0,i.jsx)(r.code,{children:"parseFloat"})," is used to convert it to a number."]}),"\n",(0,i.jsx)(r.h4,{id:"source-6",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L124",children:"packages/react-querybuilder/src/types/importExport.ts:124"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"placeholderfieldname",children:"placeholderFieldName?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"placeholderFieldName"}),": ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Any rules where the field is equal to this value will be ignored."}),"\n",(0,i.jsx)(r.h4,{id:"default-3",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"'~'\n"})}),"\n",(0,i.jsx)(r.h4,{id:"source-7",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L130",children:"packages/react-querybuilder/src/types/importExport.ts:130"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"placeholderoperatorname",children:"placeholderOperatorName?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"placeholderOperatorName"}),": ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Any rules where the operator is equal to this value will be ignored."}),"\n",(0,i.jsx)(r.h4,{id:"default-4",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"'~'\n"})}),"\n",(0,i.jsx)(r.h4,{id:"source-8",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L136",children:"packages/react-querybuilder/src/types/importExport.ts:136"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"quotefieldnameswith",children:"quoteFieldNamesWith?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"quoteFieldNamesWith"}),": ",(0,i.jsx)(r.code,{children:"string"})," | [",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),"]"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:['In the "sql"/"parameterized"/"parameterized_named" export formats,\nfield names will be bracketed by this string. If an array of strings\nis passed, field names will be preceded by the first element and\nsucceeded by the second element. A common value for this option is\nthe backtick (',(0,i.jsx)(r.code,{children:"'`'"}),")."]}),"\n",(0,i.jsx)(r.h4,{id:"default-5",children:"Default"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"'' // the empty string\n"})}),"\n",(0,i.jsx)(r.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"formatQuery(query, { format: 'sql', quoteFieldNamesWith: '`' })\n// \"`First name` = 'Steve'\"\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"formatQuery(query, { format: 'sql', quoteFieldNamesWith: ['[', ']'] })\n// \"[First name] = 'Steve'\"\n"})}),"\n",(0,i.jsx)(r.h4,{id:"source-9",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L61",children:"packages/react-querybuilder/src/types/importExport.ts:61"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"quotevalueswith",children:"quoteValuesWith?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"quoteValuesWith"}),": ",(0,i.jsx)(r.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Character to use for quoting string values in the SQL format."}),"\n",(0,i.jsx)(r.h4,{id:"default-6",children:"Default"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"'"})}),"\n",(0,i.jsx)(r.h4,{id:"source-10",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L66",children:"packages/react-querybuilder/src/types/importExport.ts:66"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"ruleprocessor",children:"ruleProcessor?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"ruleProcessor"}),": ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/RuleProcessor",children:(0,i.jsx)(r.code,{children:"RuleProcessor"})})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["This function will be used to process each rule for query language\nformats. If not defined, the appropriate ",(0,i.jsx)(r.code,{children:"defaultRuleProcessor"}),"\nfor the format will be used."]}),"\n",(0,i.jsx)(r.h4,{id:"source-11",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L43",children:"packages/react-querybuilder/src/types/importExport.ts:43"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"validator",children:"validator?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"validator"}),": ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/QueryValidator",children:(0,i.jsx)(r.code,{children:"QueryValidator"})})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Validator function for the entire query. Can be the same function passed\nas ",(0,i.jsx)(r.code,{children:"validator"})," prop to ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/functions/QueryBuilder",children:"QueryBuilder"}),"."]}),"\n",(0,i.jsx)(r.h4,{id:"source-12",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L71",children:"packages/react-querybuilder/src/types/importExport.ts:71"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"valueprocessor",children:"valueProcessor?"}),"\n",(0,i.jsxs)(r.blockquote,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"optional"})," ",(0,i.jsx)(r.strong,{children:"valueProcessor"}),": ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/ValueProcessorLegacy",children:(0,i.jsx)(r.code,{children:"ValueProcessorLegacy"})})," | ",(0,i.jsx)(r.a,{href:"/api/react-querybuilder/type-aliases/ValueProcessorByRule",children:(0,i.jsx)(r.code,{children:"ValueProcessorByRule"})})]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["This function will be used to process the ",(0,i.jsx)(r.code,{children:"value"})," from each rule\nfor query language formats. If not defined, the appropriate\n",(0,i.jsx)(r.code,{children:"defaultValueProcessor"})," for the format will be used."]}),"\n",(0,i.jsx)(r.h4,{id:"source-13",children:"Source"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/2eceb6a2d61aa61d420c853330a5f3762e4abdd2/packages/react-querybuilder/src/types/importExport.ts#L37",children:"packages/react-querybuilder/src/types/importExport.ts:37"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.admonition,{type:"caution",children:(0,i.jsxs)(r.p,{children:["API documentation is generated from the latest commit on the ",(0,i.jsxs)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/tree/main",children:[(0,i.jsx)(r.code,{children:"main"})," branch"]}),". It may be somewhat inconsistent with official releases of React Query Builder."]})})]})}function u(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},65404:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>n});var i=s(63696);const l={},a=i.createContext(l);function t(e){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function n(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(a.Provider,{value:r},e.children)}}}]);