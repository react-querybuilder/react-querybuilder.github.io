"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1750],{70876:(e,n,r)=>{r.d(n,{Z:()=>j});var s=r(27378),o=r(37140),t=r(33441),i=r(90362),l=r(74229);const d={details:"details_IpIu",isBrowser:"isBrowser_QD4r",collapsibleContent:"collapsibleContent_Fd2D"};var a=r(24246);function c(e){return!!e&&("SUMMARY"===e.tagName||c(e.parentElement))}function u(e,n){return!!e&&(e===n||u(e.parentElement,n))}function h(e){let{summary:n,children:r,...o}=e;const h=(0,i.Z)(),p=(0,s.useRef)(null),{collapsed:x,setCollapsed:j}=(0,l.u)({initialState:!o.open}),[m,f]=(0,s.useState)(o.open),y=s.isValidElement(n)?n:(0,a.jsx)("summary",{children:n??"Details"});return(0,a.jsxs)("details",{...o,ref:p,open:m,"data-collapsed":x,className:(0,t.Z)(d.details,h&&d.isBrowser,o.className),onMouseDown:e=>{c(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const n=e.target;c(n)&&u(n,p.current)&&(e.preventDefault(),x?(j(!1),f(!0)):j(!0))},children:[y,(0,a.jsx)(l.z,{lazy:!1,collapsed:x,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{j(e),f(!e)},children:(0,a.jsx)("div",{className:d.collapsibleContent,children:r})})]})}const p={details:"details_jERq"},x="alert alert--info";function j(e){let{...n}=e;return(0,a.jsx)(h,{...n,className:(0,o.Z)(x,p.details,n.className)})}},7009:(e,n,r)=>{r.d(n,{L:()=>o});var s=r(24246);const o=e=>{let{option:n,disabled:r=!1,text:o}=e;return(0,s.jsx)("a",{href:`/demo#${n}=${!r}`,children:o||"Click here for demo"+(r?" with this feature disabled":"")})}},62031:(e,n,r)=>{r.d(n,{ZP:()=>i});var s=r(24246),o=r(71670);function t(e){const n={a:"a",admonition:"admonition",p:"p",...(0,o.a)(),...e.components};return(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Please refer to the ",(0,s.jsx)(n.a,{href:"../typescript",children:"TypeScript"})," page for information about the types and interfaces referenced below."]})})}function i(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},50610:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>x,frontMatter:()=>d,metadata:()=>c,toc:()=>h});var s=r(24246),o=r(71670),t=r(7009),i=r(70876),l=r(62031);const d={title:"Miscellaneous",hide_table_of_contents:!0,description:"Assorted utilities and other exports"},a=void 0,c={id:"api/misc",title:"Miscellaneous",description:"Assorted utilities and other exports",source:"@site/versioned_docs/version-5/api/misc.mdx",sourceDirName:"api",slug:"/api/misc",permalink:"/docs/5/api/misc",draft:!1,unlisted:!1,editUrl:"https://github.com/react-querybuilder/react-querybuilder/edit/main/website/versioned_docs/version-5/api/misc.mdx",tags:[],version:"5",frontMatter:{title:"Miscellaneous",hide_table_of_contents:!0,description:"Assorted utilities and other exports"},sidebar:"mySidebar",previous:{title:"Validation",permalink:"/docs/5/api/validation"},next:{title:"Tips & tricks",permalink:"/docs/5/category/tips--tricks"}},u={},h=[{value:"Utilities",id:"utilities",level:2},{value:"<code>transformQuery</code>",id:"transformquery",level:3},{value:"<code>defaultValidator</code>",id:"defaultvalidator",level:3},{value:"<code>findPath</code>",id:"findpath",level:3},{value:"<code>convertQuery</code>",id:"convertquery",level:3},{value:"Query tools",id:"query-tools",level:2},{value:"<code>add</code>",id:"add",level:3},{value:"<code>remove</code>",id:"remove",level:3},{value:"<code>update</code>",id:"update",level:3},{value:"<code>move</code>",id:"move",level:3},{value:"Defaults",id:"defaults",level:2}];function p(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.ZP,{}),"\n",(0,s.jsxs)(n.p,{children:["A non-comprehensive list of exports from ",(0,s.jsx)(n.code,{children:"react-querybuilder"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"utilities",children:"Utilities"}),"\n",(0,s.jsx)(n.h3,{id:"transformquery",children:(0,s.jsx)(n.code,{children:"transformQuery"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function transformQuery(query: RuleGroupTypeAny, options: QueryTransformerOptions): any;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This function recursively steps through a query object (",(0,s.jsx)(n.code,{children:"RuleGroupType"})," or ",(0,s.jsx)(n.code,{children:"RuleGroupTypeIC"}),"), passing each ",(0,s.jsx)(n.code,{children:"RuleType"})," object to a provided ",(0,s.jsx)(n.code,{children:"ruleProcessor"})," function. Available options include:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ruleProcessor"}),": Custom processing for each rule."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ruleGroupProcessor"}),": Custom processing for each rule group. (The ",(0,s.jsx)(n.code,{children:"rules"})," property will be retained.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"propertyMap"}),": Keys in the rule or group objects that match keys in this object will be renamed to the corresponding value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"combinatorMap"}),": Best explained with an example: ",(0,s.jsx)(n.code,{children:'{and: "&&", or: "||"}'}),' would translate "and"/"or" combinators to "&&"/"||", respectively.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"operatorMap"}),": Convert operators that match the keys in this object to the corresponding values, e.g. ",(0,s.jsx)(n.code,{children:'{"=": "=="}'}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"deleteRemappedProperties"}),": Defaults to ",(0,s.jsx)(n.code,{children:"true"}),"; pass ",(0,s.jsx)(n.code,{children:"false"})," to leave the remapped properties ",(0,s.jsx)(n.em,{children:"and"})," the original properties in the resulting object."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/main/packages/react-querybuilder/src/utils/transformQuery.test.ts",children:"test suite"})," for example usage."]}),"\n",(0,s.jsx)(n.h3,{id:"defaultvalidator",children:(0,s.jsx)(n.code,{children:"defaultValidator"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function defaultValidator(query: RuleGroupTypeAny): {\n  [id: string]: { valid: boolean; reasons?: string[] };\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Pass ",(0,s.jsx)(n.code,{children:"validator={defaultValidator}"})," to automatically validate groups (rules will be ignored). A group will be marked invalid if either 1) it has no child rules or groups (",(0,s.jsx)(n.code,{children:"query.rules.length === 0"}),"), or 2) it has a missing/invalid ",(0,s.jsx)(n.code,{children:"combinator"})," and more than one child rule or group (",(0,s.jsx)(n.code,{children:"rules.length >= 2"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["You can see an example of the default validator in action in the ",(0,s.jsx)(n.a,{href:"/demo",children:"demo"})," if you check the ",(0,s.jsx)(t.L,{option:"validateQuery",text:"'Use validation' option"}),'. Empty groups will have bold text on their "+Rule" button and a description of the situation where the rules normally appear.']}),"\n",(0,s.jsx)(n.h3,{id:"findpath",children:(0,s.jsx)(n.code,{children:"findPath"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function findPath(path: number[], query: RuleGroupTypeAny): RuleType | RuleGroupTypeAny;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"findPath"})," is a utility function for finding the rule or group within the query hierarchy that has a given ",(0,s.jsx)(n.code,{children:"path"}),". Useful in custom ",(0,s.jsx)(n.a,{href:"./querybuilder#onaddrule",children:(0,s.jsx)(n.code,{children:"onAddRule"})})," and ",(0,s.jsx)(n.a,{href:"./querybuilder#onaddgroup",children:(0,s.jsx)(n.code,{children:"onAddGroup"})})," functions."]}),"\n",(0,s.jsx)(n.h3,{id:"convertquery",children:(0,s.jsx)(n.code,{children:"convertQuery"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function convertQuery(query: RuleGroupType): RuleGroupTypeIC;\n// OR\nfunction convertQuery(query: RuleGroupTypeIC): RuleGroupType;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"convertQuery"})," toggles a query between the conventional ",(0,s.jsx)(n.code,{children:"RuleGroupType"}),' structure (with combinators at the group level) and the "independent combinators" structure (',(0,s.jsx)(n.code,{children:"RuleGroupTypeIC"}),", used with the ",(0,s.jsxs)(n.a,{href:"./querybuilder#independentcombinators",children:[(0,s.jsx)(n.code,{children:"independentCombinators"})," prop"]}),")."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"convertToIC"})," and ",(0,s.jsx)(n.code,{children:"convertFromIC"})," do the same thing as ",(0,s.jsx)(n.code,{children:"convertQuery"}),", but only in the directions indicated by their respective names."]}),"\n",(0,s.jsx)(n.h2,{id:"query-tools",children:"Query tools"}),"\n",(0,s.jsxs)(n.p,{children:["Several methods are available to assist with programmatic manipulation of query objects. These methods are used by the ",(0,s.jsx)(n.code,{children:"<QueryBuilder />"})," component itself, so they are guaranteed to achieve the same result as a corresponding UI-based update. Each of these methods returns the modified query."]}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"../tips/external-controls",children:'"External controls" Tips & Tricks page'})," to see these methods used outside the context of the ",(0,s.jsx)(n.code,{children:"<QueryBuilder />"})," component."]}),"\n",(0,s.jsx)(n.h3,{id:"add",children:(0,s.jsx)(n.code,{children:"add"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"(query: RuleGroupTypeAny, ruleOrGroup: RuleGroupTypeAny | RuleType, path: number[], options: AddOptions) => RuleGroupTypeAny"})}),"\n",(0,s.jsx)(n.p,{children:"Adds a rule or group (and an independent combinator if necessary, to keep the query valid)."}),"\n",(0,s.jsx)(i.Z,{summary:"AddOptions",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface AddOptions {\n  /** Only applicable for `RuleGroupTypeIC`. Default is `defaultCombinators`. */\n  combinators?: OptionList;\n}\n"})})}),"\n",(0,s.jsx)(n.h3,{id:"remove",children:(0,s.jsx)(n.code,{children:"remove"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"(query: RuleGroupTypeAny, path: number[]) => RuleGroupTypeAny"})}),"\n",(0,s.jsx)(n.p,{children:"Removes a rule or group (and the preceding independent combinator, if one exists)."}),"\n",(0,s.jsx)(n.h3,{id:"update",children:(0,s.jsx)(n.code,{children:"update"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"(query: RuleGroupTypeAny, prop: string, value: any, path: number[], options: UpdateOptions) => RuleGroupTypeAny"})}),"\n",(0,s.jsx)(n.p,{children:"Updates a property of a rule or group, or updates an independent combinator."}),"\n",(0,s.jsx)(i.Z,{summary:"UpdateOptions",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface UpdateOptions {\n  /** Resets `operator` and `value` when `field` changes. Default is `true`. */\n  resetOnFieldChange?: boolean;\n  /** Resets `value` when `operator` changes. Default is `false`. */\n  resetOnOperatorChange?: boolean;\n  /** Determines the default operator name for a given field. */\n  getRuleDefaultOperator?: (field: string) => string;\n  /** Determines the valid value sources for a given field and operator. */\n  getValueSources?: (field: string, operator: string) => ValueSources;\n  /** Used when the `value` property is reset (see `resetOn*Change` options). */\n  getRuleDefaultValue?: (rule: RuleType) => any;\n}\n"})})}),"\n",(0,s.jsx)(n.h3,{id:"move",children:(0,s.jsx)(n.code,{children:"move"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"(query: RuleGroupTypeAny, oldPath: number[], newPath: number[], options: MoveOptions) => RuleGroupTypeAny"})}),"\n",(0,s.jsxs)(n.p,{children:["Moves (or clones, with a new ",(0,s.jsx)(n.code,{children:"id"}),") a rule or group to a new location in the query tree."]}),"\n",(0,s.jsx)(i.Z,{summary:"MoveOptions",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface MoveOptions {\n  /** Copy the source rule/group instead of move. Default is `false`. */\n  clone?: boolean;\n  /** Only applicable for `RuleGroupTypeIC`. Default is `defaultCombinators`. */\n  combinators?: OptionList;\n}\n"})})}),"\n",(0,s.jsx)(n.h2,{id:"defaults",children:"Defaults"}),"\n",(0,s.jsx)(n.p,{children:"The following default configuration objects are exported for convenience."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultCombinators"})," (see ",(0,s.jsxs)(n.a,{href:"./querybuilder#combinators",children:[(0,s.jsx)(n.code,{children:"combinators"})," prop"]}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultOperators"})," (see ",(0,s.jsxs)(n.a,{href:"./querybuilder#operators",children:[(0,s.jsx)(n.code,{children:"operators"})," prop"]}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultTranslations"})," (see ",(0,s.jsxs)(n.a,{href:"./querybuilder#translations",children:[(0,s.jsx)(n.code,{children:"translations"})," prop"]}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultValueProcessor"})," and variants for non-SQL formats (see ",(0,s.jsx)(n.a,{href:"./export",children:"Export"})," > ",(0,s.jsx)(n.a,{href:"./export#value-processor",children:"Value processor"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"defaultFields"})," (see ",(0,s.jsxs)(n.a,{href:"./querybuilder#fields",children:[(0,s.jsx)(n.code,{children:"fields"})," prop"]}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"standardClassnames"})," (see ",(0,s.jsx)(n.a,{href:"./classnames",children:"CSS classes"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The default components are also exported:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ActionElement"})," - used for action buttons (to add rules, remove groups, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DragHandle"})," - used for the drag handle on rules and group headers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"InlineCombinator"})," - used when either ",(0,s.jsx)(n.code,{children:"showCombinatorsBetweenRules"})," or ",(0,s.jsx)(n.code,{children:"independentCombinators"})," are ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NotToggle"}),' - used for the "Invert this group" toggle switch']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Rule"})," - the default rule component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RuleGroup"})," - the default rule group component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ValueEditor"})," - the default ",(0,s.jsx)(n.code,{children:"valueEditor"})," component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ValueSelector"})," - used for drop-down lists (combinator, field, and operator selectors)"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},71670:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var s=r(27378);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);