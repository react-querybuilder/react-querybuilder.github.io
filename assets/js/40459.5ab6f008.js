"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40459],{90488:e=>{var t,r=Object.defineProperty,s=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,n=Object.prototype.hasOwnProperty,a={};((e,t)=>{for(var s in t)r(e,s,{get:t[s],enumerable:!0})})(a,{Immer:()=>K,applyPatches:()=>ae,castDraft:()=>ce,castImmutable:()=>ue,createDraft:()=>oe,current:()=>Y,enableMapSet:()=>ee,enablePatches:()=>Z,finishDraft:()=>le,freeze:()=>N,immerable:()=>l,isDraft:()=>p,isDraftable:()=>f,nothing:()=>o,original:()=>d,produce:()=>re,produceWithPatches:()=>se,setAutoFreeze:()=>ie,setUseStrictShallowCopy:()=>ne}),e.exports=(t=a,((e,t,a,o)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of i(t))!n.call(e,l)&&l!==a&&r(e,l,{get:()=>t[l],enumerable:!(o=s(t,l))||o.enumerable});return e})(r({},"__esModule",{value:!0}),t));var o=Symbol.for("immer-nothing"),l=Symbol.for("immer-draftable"),c=Symbol.for("immer-state");function u(e,...t){throw new Error(`[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`)}var h=Object.getPrototypeOf;function p(e){return!!e&&!!e[c]}function f(e){return!!e&&(b(e)||Array.isArray(e)||!!e[l]||!!e.constructor?.[l]||O(e)||I(e))}var y=Object.prototype.constructor.toString();function b(e){if(!e||"object"!=typeof e)return!1;let t=h(e);if(null===t)return!0;let r=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===y}function d(e){return p(e)||u(15),e[c].t}function g(e,t){0===m(e)?Reflect.ownKeys(e).forEach((r=>{t(r,e[r],e)})):e.forEach(((r,s)=>t(s,r,e)))}function m(e){let t=e[c];return t?t.o:Array.isArray(e)?1:O(e)?2:I(e)?3:0}function E(e,t){return 2===m(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function _(e,t){return 2===m(e)?e.get(t):e[t]}function v(e,t,r){let s=m(e);2===s?e.set(t,r):3===s?e.add(r):e[t]=r}function O(e){return e instanceof Map}function I(e){return e instanceof Set}function S(e){return e.e||e.t}function x(e,t){if(O(e))return new Map(e);if(I(e))return new Set(e);if(Array.isArray(e))return Array.prototype.slice.call(e);let r=b(e);if(!0===t||"class_only"===t&&!r){let t=Object.getOwnPropertyDescriptors(e);delete t[c];let r=Reflect.ownKeys(t);for(let s=0;s<r.length;s++){let i=r[s],n=t[i];!1===n.writable&&(n.writable=!0,n.configurable=!0),(n.get||n.set)&&(t[i]={configurable:!0,writable:!0,enumerable:n.enumerable,value:e[i]})}return Object.create(h(e),t)}{let t=h(e);if(null!==t&&r)return{...e};let s=Object.create(t);return Object.assign(s,e)}}function N(e,t=!1){return A(e)||p(e)||!f(e)||(m(e)>1&&(e.set=e.add=e.clear=e.delete=k),Object.freeze(e),t&&Object.entries(e).forEach((([e,t])=>N(t,!0)))),e}function k(){u(2)}function A(e){return Object.isFrozen(e)}var R,$={};function T(e){let t=$[e];return t||u(0),t}function L(e,t){$[e]||($[e]=t)}function C(){return R}function P(e,t){t&&(T("Patches"),e.f=[],e.h=[],e.b=t)}function w(e){D(e),e.a.forEach(U),e.a=null}function D(e){e===R&&(R=e.i)}function M(e){return R=function(e,t){return{a:[],i:e,p:t,P:!0,d:0}}(R,e)}function U(e){let t=e[c];0===t.o||1===t.o?t.x():t.m=!0}function j(e,t){t.d=t.a.length;let r=t.a[0];return void 0!==e&&e!==r?(r[c].s&&(w(t),u(4)),f(e)&&(e=F(t,e),t.i||W(t,e)),t.f&&T("Patches").T(r[c].t,e,t.f,t.h)):e=F(t,r,[]),w(t),t.f&&t.b(t.f,t.h),e!==o?e:void 0}function F(e,t,r){if(A(t))return t;let s=t[c];if(!s)return g(t,((i,n)=>B(e,s,t,i,n,r))),t;if(s.n!==e)return t;if(!s.s)return W(e,s.t,!0),s.t;if(!s.c){s.c=!0,s.n.d--;let t=s.e,i=t,n=!1;3===s.o&&(i=new Set(t),t.clear(),n=!0),g(i,((i,a)=>B(e,s,t,i,a,r,n))),W(e,t,!1),r&&e.f&&T("Patches").g(s,r,e.f,e.h)}return s.e}function B(e,t,r,s,i,n,a){if(p(i)){let a=F(e,i,n&&t&&3!==t.o&&!E(t.r,s)?n.concat(s):void 0);if(v(r,s,a),!p(a))return;e.P=!1}else a&&r.add(i);if(f(i)&&!A(i)){if(!e.p.y&&e.d<1)return;F(e,i),(!t||!t.n.i)&&"symbol"!=typeof s&&Object.prototype.propertyIsEnumerable.call(r,s)&&W(e,i)}}function W(e,t,r=!1){!e.i&&e.p.y&&e.P&&N(t,r)}var X={get(e,t){if(t===c)return e;let r=S(e);if(!E(r,t))return function(e,t,r){let s=V(t,r);return s?"value"in s?s.value:s.get?.call(e.u):void 0}(e,r,t);let s=r[t];return e.c||!f(s)?s:s===G(e.t,t)?(z(e),e.e[t]=J(s,e)):s},has:(e,t)=>t in S(e),ownKeys:e=>Reflect.ownKeys(S(e)),set(e,t,r){let s=V(S(e),t);if(s?.set)return s.set.call(e.u,r),!0;if(!e.s){let s=G(S(e),t),i=s?.[c];if(i&&i.t===r)return e.e[t]=r,e.r[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(r,s)&&(void 0!==r||E(e.t,t)))return!0;z(e),Q(e)}return e.e[t]===r&&(void 0!==r||t in e.e)||Number.isNaN(r)&&Number.isNaN(e.e[t])||(e.e[t]=r,e.r[t]=!0),!0},deleteProperty:(e,t)=>(void 0!==G(e.t,t)||t in e.t?(e.r[t]=!1,z(e),Q(e)):delete e.r[t],e.e&&delete e.e[t],!0),getOwnPropertyDescriptor(e,t){let r=S(e),s=Reflect.getOwnPropertyDescriptor(r,t);return s&&{writable:!0,configurable:1!==e.o||"length"!==t,enumerable:s.enumerable,value:r[t]}},defineProperty(){u(11)},getPrototypeOf:e=>h(e.t),setPrototypeOf(){u(12)}},H={};function G(e,t){let r=e[c];return(r?S(r):e)[t]}function V(e,t){if(!(t in e))return;let r=h(e);for(;r;){let e=Object.getOwnPropertyDescriptor(r,t);if(e)return e;r=h(r)}}function Q(e){e.s||(e.s=!0,e.i&&Q(e.i))}function z(e){e.e||(e.e=x(e.t,e.n.p.S))}g(X,((e,t)=>{H[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),H.deleteProperty=function(e,t){return H.set.call(this,e,t,void 0)},H.set=function(e,t,r){return X.set.call(this,e[0],t,r,e[0])};var K=class{constructor(e){this.y=!0,this.S=!1,this.produce=(e,t,r)=>{if("function"==typeof e&&"function"!=typeof t){let r=t;t=e;let s=this;return function(e=r,...i){return s.produce(e,(e=>t.call(this,e,...i)))}}let s;if("function"!=typeof t&&u(6),void 0!==r&&"function"!=typeof r&&u(7),f(e)){let i=M(this),n=J(e,void 0),a=!0;try{s=t(n),a=!1}finally{a?w(i):D(i)}return P(i,r),j(s,i)}if(!e||"object"!=typeof e){if(s=t(e),void 0===s&&(s=e),s===o&&(s=void 0),this.y&&N(s,!0),r){let t=[],i=[];T("Patches").T(e,s,t,i),r(t,i)}return s}u(1)},this.produceWithPatches=(e,t)=>{if("function"==typeof e)return(t,...r)=>this.produceWithPatches(t,(t=>e(t,...r)));let r,s;return[this.produce(e,t,((e,t)=>{r=e,s=t})),r,s]},"boolean"==typeof e?.autoFreeze&&this.setAutoFreeze(e.autoFreeze),"boolean"==typeof e?.useStrictShallowCopy&&this.setUseStrictShallowCopy(e.useStrictShallowCopy)}createDraft(e){f(e)||u(8),p(e)&&(e=Y(e));let t=M(this),r=J(e,void 0);return r[c].l=!0,D(t),r}finishDraft(e,t){let r=e&&e[c];(!r||!r.l)&&u(9);let{n:s}=r;return P(s,t),j(void 0,s)}setAutoFreeze(e){this.y=e}setUseStrictShallowCopy(e){this.S=e}applyPatches(e,t){let r;for(r=t.length-1;r>=0;r--){let s=t[r];if(0===s.path.length&&"replace"===s.op){e=s.value;break}}r>-1&&(t=t.slice(r+1));let s=T("Patches").A;return p(e)?s(e,t):this.produce(e,(e=>s(e,t)))}};function J(e,t){let r=O(e)?T("MapSet").I(e,t):I(e)?T("MapSet").D(e,t):function(e,t){let r=Array.isArray(e),s={o:r?1:0,n:t?t.n:C(),s:!1,c:!1,r:{},i:t,t:e,u:null,e:null,x:null,l:!1},i=s,n=X;r&&(i=[s],n=H);let{revoke:a,proxy:o}=Proxy.revocable(i,n);return s.u=o,s.x=a,o}(e,t);return(t?t.n:C()).a.push(r),r}function Y(e){return p(e)||u(10),q(e)}function q(e){if(!f(e)||A(e))return e;let t,r=e[c];if(r){if(!r.s)return r.t;r.c=!0,t=x(e,r.n.p.S)}else t=x(e,!0);return g(t,((e,r)=>{v(t,e,q(r))})),r&&(r.c=!1),t}function Z(){let e="replace",t="add",r="remove";function s(e){if(!f(e))return e;if(Array.isArray(e))return e.map(s);if(O(e))return new Map(Array.from(e.entries()).map((([e,t])=>[e,s(t)])));if(I(e))return new Set(Array.from(e).map(s));let t=Object.create(h(e));for(let r in e)t[r]=s(e[r]);return E(e,l)&&(t[l]=e[l]),t}function i(e){return p(e)?s(e):e}L("Patches",{A:function(i,n){return n.forEach((n=>{let{path:a,op:o}=n,l=i;for(let e=0;e<a.length-1;e++){let t=m(l),r=a[e];"string"!=typeof r&&"number"!=typeof r&&(r=""+r),(0===t||1===t)&&("__proto__"===r||"constructor"===r)&&u(19),"function"==typeof l&&"prototype"===r&&u(19),l=_(l,r),"object"!=typeof l&&u(18,a.join("/"))}let c=m(l),h=s(n.value),p=a[a.length-1];switch(o){case e:switch(c){case 2:return l.set(p,h);case 3:u(16);default:return l[p]=h}case t:switch(c){case 1:return"-"===p?l.push(h):l.splice(p,0,h);case 2:return l.set(p,h);case 3:return l.add(h);default:return l[p]=h}case r:switch(c){case 1:return l.splice(p,1);case 2:return l.delete(p);case 3:return l.delete(n.value);default:return delete l[p]}default:u(17)}})),i},g:function(s,n,a,o){switch(s.o){case 0:case 2:return function(s,n,a,o){let{t:l,e:c}=s;g(s.r,((s,u)=>{let h=_(l,s),p=_(c,s),f=u?E(l,s)?e:t:r;if(h===p&&f===e)return;let y=n.concat(s);a.push(f===r?{op:f,path:y}:{op:f,path:y,value:p}),o.push(f===t?{op:r,path:y}:f===r?{op:t,path:y,value:i(h)}:{op:e,path:y,value:i(h)})}))}(s,n,a,o);case 1:return function(s,n,a,o){let{t:l,r:c}=s,u=s.e;u.length<l.length&&([l,u]=[u,l],[a,o]=[o,a]);for(let t=0;t<l.length;t++)if(c[t]&&u[t]!==l[t]){let r=n.concat([t]);a.push({op:e,path:r,value:i(u[t])}),o.push({op:e,path:r,value:i(l[t])})}for(let e=l.length;e<u.length;e++){let r=n.concat([e]);a.push({op:t,path:r,value:i(u[e])})}for(let e=u.length-1;l.length<=e;--e){let t=n.concat([e]);o.push({op:r,path:t})}}(s,n,a,o);case 3:return function(e,s,i,n){let{t:a,e:o}=e,l=0;a.forEach((e=>{if(!o.has(e)){let a=s.concat([l]);i.push({op:r,path:a,value:e}),n.unshift({op:t,path:a,value:e})}l++})),l=0,o.forEach((e=>{if(!a.has(e)){let a=s.concat([l]);i.push({op:t,path:a,value:e}),n.unshift({op:r,path:a,value:e})}l++}))}(s,n,a,o)}},T:function(t,r,s,i){s.push({op:e,path:[],value:r===o?void 0:r}),i.push({op:e,path:[],value:t})}})}function ee(){class e extends Map{constructor(e,t){super(),this[c]={o:2,i:t,n:t?t.n:C(),s:!1,c:!1,e:void 0,r:void 0,t:e,u:this,l:!1,m:!1}}get size(){return S(this[c]).size}has(e){return S(this[c]).has(e)}set(e,r){let s=this[c];return i(s),(!S(s).has(e)||S(s).get(e)!==r)&&(t(s),Q(s),s.r.set(e,!0),s.e.set(e,r),s.r.set(e,!0)),this}delete(e){if(!this.has(e))return!1;let r=this[c];return i(r),t(r),Q(r),r.t.has(e)?r.r.set(e,!1):r.r.delete(e),r.e.delete(e),!0}clear(){let e=this[c];i(e),S(e).size&&(t(e),Q(e),e.r=new Map,g(e.t,(t=>{e.r.set(t,!1)})),e.e.clear())}forEach(e,t){S(this[c]).forEach(((r,s,i)=>{e.call(t,this.get(s),s,this)}))}get(e){let r=this[c];i(r);let s=S(r).get(e);if(r.c||!f(s)||s!==r.t.get(e))return s;let n=J(s,r);return t(r),r.e.set(e,n),n}keys(){return S(this[c]).keys()}values(){let e=this.keys();return{[Symbol.iterator]:()=>this.values(),next:()=>{let t=e.next();return t.done?t:{done:!1,value:this.get(t.value)}}}}entries(){let e=this.keys();return{[Symbol.iterator]:()=>this.entries(),next:()=>{let t=e.next();if(t.done)return t;let r=this.get(t.value);return{done:!1,value:[t.value,r]}}}}[Symbol.iterator](){return this.entries()}}function t(e){e.e||(e.r=new Map,e.e=new Map(e.t))}class r extends Set{constructor(e,t){super(),this[c]={o:3,i:t,n:t?t.n:C(),s:!1,c:!1,e:void 0,t:e,u:this,a:new Map,m:!1,l:!1}}get size(){return S(this[c]).size}has(e){let t=this[c];return i(t),t.e?!!(t.e.has(e)||t.a.has(e)&&t.e.has(t.a.get(e))):t.t.has(e)}add(e){let t=this[c];return i(t),this.has(e)||(s(t),Q(t),t.e.add(e)),this}delete(e){if(!this.has(e))return!1;let t=this[c];return i(t),s(t),Q(t),t.e.delete(e)||!!t.a.has(e)&&t.e.delete(t.a.get(e))}clear(){let e=this[c];i(e),S(e).size&&(s(e),Q(e),e.e.clear())}values(){let e=this[c];return i(e),s(e),e.e.values()}entries(){let e=this[c];return i(e),s(e),e.e.entries()}keys(){return this.values()}[Symbol.iterator](){return this.values()}forEach(e,t){let r=this.values(),s=r.next();for(;!s.done;)e.call(t,s.value,s.value,this),s=r.next()}}function s(e){e.e||(e.e=new Set,e.t.forEach((t=>{if(f(t)){let r=J(t,e);e.a.set(t,r),e.e.add(r)}else e.e.add(t)})))}function i(e){e.m&&u(3,JSON.stringify(S(e)))}L("MapSet",{I:function(t,r){return new e(t,r)},D:function(e,t){return new r(e,t)}})}var te=new K,re=te.produce,se=te.produceWithPatches.bind(te),ie=te.setAutoFreeze.bind(te),ne=te.setUseStrictShallowCopy.bind(te),ae=te.applyPatches.bind(te),oe=te.createDraft.bind(te),le=te.finishDraft.bind(te);function ce(e){return e}function ue(e){return e}},67267:(e,t,r)=>{e.exports=r(90488)},34362:(e,t,r)=>{e.exports=r(31062)},31062:e=>{var t,r=Object.defineProperty,s=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,n=Object.prototype.hasOwnProperty,a={};((e,t)=>{for(var s in t)r(e,s,{get:t[s],enumerable:!0})})(a,{defaultOptions:()=>b,numericQuantity:()=>m,numericRegex:()=>l,numericRegexWithTrailingInvalid:()=>c,parseRomanNumerals:()=>d,romanNumeralRegex:()=>y,romanNumeralUnicodeRegex:()=>f,romanNumeralUnicodeToAsciiMap:()=>p,romanNumeralValues:()=>h,vulgarFractionToAsciiMap:()=>o,vulgarFractionsRegex:()=>u}),e.exports=(t=a,((e,t,a,o)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let l of i(t))!n.call(e,l)&&l!==a&&r(e,l,{get:()=>t[l],enumerable:!(o=s(t,l))||o.enumerable});return e})(r({},"__esModule",{value:!0}),t));var o={"\xbc":"1/4","\xbd":"1/2","\xbe":"3/4","\u2150":"1/7","\u2151":"1/9","\u2152":"1/10","\u2153":"1/3","\u2154":"2/3","\u2155":"1/5","\u2156":"2/5","\u2157":"3/5","\u2158":"4/5","\u2159":"1/6","\u215a":"5/6","\u215b":"1/8","\u215c":"3/8","\u215d":"5/8","\u215e":"7/8","\u215f":"1/"},l=/^(?=-?\s*\.\d|-?\s*\d)(-)?\s*((?:\d(?:[\d,_]*\d)?)*)(([eE][+-]?\d(?:[\d,_]*\d)?)?|\.\d(?:[\d,_]*\d)?([eE][+-]?\d(?:[\d,_]*\d)?)?|(\s+\d(?:[\d,_]*\d)?\s*)?\s*\/\s*\d(?:[\d,_]*\d)?)?$/,c=new RegExp(l.source.replace(/\$$/,"(?:\\s*[^\\.\\d\\/].*)?")),u=new RegExp(`(${Object.keys(o).join("|")})`),h={MMM:3e3,MM:2e3,M:1e3,CM:900,DCCC:800,DCC:700,DC:600,D:500,CD:400,CCC:300,CC:200,C:100,XC:90,LXXX:80,LXX:70,LX:60,L:50,XL:40,XXX:30,XX:20,XII:12,XI:11,X:10,IX:9,VIII:8,VII:7,VI:6,V:5,IV:4,III:3,II:2,I:1},p={"\u2160":"I","\u2161":"II","\u2162":"III","\u2163":"IV","\u2164":"V","\u2165":"VI","\u2166":"VII","\u2167":"VIII","\u2168":"IX","\u2169":"X","\u216a":"XI","\u216b":"XII","\u216c":"L","\u216d":"C","\u216e":"D","\u216f":"M","\u2170":"I","\u2171":"II","\u2172":"III","\u2173":"IV","\u2174":"V","\u2175":"VI","\u2176":"VII","\u2177":"VIII","\u2178":"IX","\u2179":"X","\u217a":"XI","\u217b":"XII","\u217c":"L","\u217d":"C","\u217e":"D","\u217f":"M"},f=new RegExp(`(${Object.keys(p).join("|")})`,"gi"),y=/^(?=[MDCLXVI])(M{0,3})(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$/i,b={round:3,allowTrailingInvalid:!1,romanNumerals:!1},d=e=>{let t=`${e}`.replace(f,((e,t)=>p[t])).toUpperCase(),r=y.exec(t);if(!r)return NaN;let[,s,i,n,a]=r;return(h[s]??0)+(h[i]??0)+(h[n]??0)+(h[a]??0)},g=/^\s*\//,m=(e,t=b)=>{if("number"==typeof e||"bigint"==typeof e)return e;let r=NaN,s=`${e}`.replace(u,((e,t)=>` ${o[t]}`)).replace("\u2044","/").trim();if(0===s.length)return NaN;let i={...b,...t},n=(i.allowTrailingInvalid?c:l).exec(s);if(!n)return i.romanNumerals?d(s):NaN;let[,a,h,p]=n,f=h.replace(/[,_]/g,""),y=null==p?void 0:p.replace(/[,_]/g,"");if(r=!f&&y&&y.startsWith(".")?0:parseInt(f),!y)return a?-1*r:r;let m=!1===i.round?NaN:parseFloat(`1e${Math.floor(Math.max(0,i.round))}`);if(y.startsWith(".")||y.startsWith("e")||y.startsWith("E")){let e=parseFloat(`${r}${y}`);r=isNaN(m)?e:Math.round(e*m)/m}else if(g.test(y)){let e=parseInt(f),t=parseInt(y.replace("/",""));r=isNaN(m)?e/t:Math.round(e*m/t)/m}else{let e=y.split("/"),[t,s]=e.map((e=>parseInt(e)));r+=isNaN(m)?t/s:Math.round(t*m/s)/m}return a?-1*r:r}},62840:(e,t,r)=>{function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},i=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),i.forEach((function(t){s(e,t,r[t])}))}return e}function n(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}var a,o=Object.defineProperty,l=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,u=Object.prototype.hasOwnProperty,h={};((e,t)=>{for(var r in t)o(e,r,{get:t[r],enumerable:!0})})(h,{parseSQL:()=>F}),e.exports=(a=h,((e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let i of c(t))u.call(e,i)||i===r||o(e,i,{get:()=>t[i],enumerable:!(s=l(t,i))||s.enumerable});return e})(o({},"__esModule",{value:!0}),a));var p=(e,t=",")=>e.map((e=>`${null!=e?e:""}`.replaceAll(t[0],`\\${t[0]}`))).join(t),f=r(34362),y=(new RegExp(f.numericRegex.source.replace(/^\^/,"^\\s*").replace(/\$$/,"\\s*$")),e=>null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype),b=e=>y(e)&&Array.isArray(e.rules),d=r(67267),g=e=>y(e)&&"name"in e&&"string"==typeof e.name,m=e=>y(e)&&"value"in e&&"string"==typeof e.value;function E(e,t){return(0,d.produce)((e=>{const r={};let s=!!t;if(g(e)&&!m(e)?(r.value=e.name,s=!0):!g(e)&&m(e)&&(r.name=e.value,s=!0),s)return Object.assign({},t,e,r)}))(e)}var _=e=>{if(Array.isArray(e))for(const t of e)if(y(t)&&"options"in t)for(const e of t.options)return!(!y(e)||!("name"in e)&&!("value"in e));return!1},v=e=>(e=>{const t=new Set,r=[];return e.forEach((e=>{var s,i;t.has(null!==(s=e.value)&&void 0!==s?s:e.name)||(t.add(null!==(i=e.value)&&void 0!==i?i:e.name),r.push(e))})),e.length===r.length?e:r})((e=>Array.isArray(e)&&e.length>0&&y(e[0])&&"options"in e[0]&&Array.isArray(e[0].options))(e)?e.flatMap((e=>e.options)):e),O=(e,t,r)=>{var s;const i=E(e),n=E(r);return i.value!==n.value&&("string"==typeof i.comparator?i[i.comparator]===n[i.comparator]:null!==(a=null===(s=i.comparator)||void 0===s?void 0:s.call(i,n,t))&&void 0!==a&&a);var a},I=(e,t,r)=>{if(!e.comparator){const r=t=>{var r,s;return(null!==(r=t.value)&&void 0!==r?r:t.name)!==(null!==(s=e.value)&&void 0!==s?s:e.name)};return _(t)?t.map((e=>n(i({},e),{options:e.options.filter(r)}))):t.filter(r)}return _(t)?t.map((t=>n(i({},t),{options:t.options.filter((t=>O(e,r,t)))}))).filter((e=>e.options.length>0)):t.filter((t=>O(e,r,t)))},S=["value"],x={name:"name",value:"name",valueSources:null,label:"label"},N=(e,t,r)=>{const s=e?E(e):x;if(s.valueSources)return"function"==typeof s.valueSources?s.valueSources(t):s.valueSources;if(r){const e=r(s.value,t,{fieldData:E(s)});if(e)return e}return S},k=e=>{const t=e?Array.isArray(e)?e:Object.keys(e).map((t=>n(i({},e[t]),{name:t}))).sort(((e,t)=>e.label.localeCompare(t.label))):[];return v(t)};var A=function(){var e=function(e,t,r,s){for(r=r||{},s=e.length;s--;r[e[s]]=t);return r},t=[1,8],r=[1,4],s=[2,4],i=[1,11],n=[1,10],a=[2,16],o=[1,14],l=[1,15],c=[1,16],u=[6,8],h=[2,148],p=[1,19],f=[1,20],y=[16,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],b=[16,18,32,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],d=[2,162],g=[1,29],m=[6,8,14,17,146,150,152,154],E=[1,42],_=[1,61],v=[1,53],O=[1,60],I=[1,62],S=[1,63],x=[1,64],N=[1,65],k=[1,66],A=[1,59],R=[1,54],$=[1,55],T=[1,56],L=[1,57],C=[1,58],P=[1,43],w=[1,44],D=[1,45],M=[1,47],U=[1,34],j=[1,67],F=[16,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],B=[6,8,14,17,150,152,154],W=[2,145],X=[1,76],H=[1,77],G=[6,8,14,17,43,133,138,144,146,150,152,154],V=[1,80],Q=[1,79],z=[1,81],K=[6,8,14,17,36,43,51,52,53,71,72,74,77,89,109,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],J=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,109,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Y=[1,102],q=[1,100],Z=[1,101],ee=[1,96],te=[1,97],re=[1,98],se=[1,99],ie=[1,103],ne=[1,104],ae=[1,105],oe=[1,106],le=[1,107],ce=[1,108],ue=[2,107],he=[6,8,14,17,34,36,43,45,51,52,53,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],pe=[6,8,14,17,34,36,43,45,51,52,53,71,72,74,77,79,81,89,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],fe=[2,82],ye=[1,110],be=[1,109],de=[1,117],ge=[2,65],me=[1,119],Ee=[16,35,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],_e=[16,29,35,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,121,195],ve=[1,162],Oe=[1,164],Ie=[17,43],Se=[6,8,14,16,17,34,35,36,43,45,50,51,52,53,56,57,59,60,62,71,72,74,76,77,79,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],xe=[2,60],Ne=[1,174],ke=[1,172],Ae=[6,8,138,146],Re=[16,35,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],$e=[6,8,14,17,138,144,146,150,152,154],Te=[6,8,14,17,36,43,51,52,53,71,72,74,77,89,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Le=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Ce=[6,8,14,17,34,36,43,51,52,53,71,72,74,77,79,81,89,93,94,95,96,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],Pe=[16,35,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],we=[16,35,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],De=[6,8,14,17,43,157],Me=[16,35,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Ue=[71,74,77],je=[16,35,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],Fe=[1,239],Be=[6,8,14,17],We=[1,257],Xe=[1,253],He=[2,199],Ge=[1,261],Ve=[1,262],Qe=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],ze=[1,264],Ke=[1,267],Je=[1,268],Ye=[1,269],qe=[1,270],Ze=[2,176],et=[1,266],tt=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],rt=[6,8,14,17,135,138,144,146,150,152,154],st=[1,282],it=[2,181],nt=[170,173],at=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],ot=[2,201],lt=[1,287],ct=[1,299],ut=[1,307],ht=[1,308],pt=[1,309],ft=[6,8,14,17,138,146,150,152,154],yt=[1,319],bt=[1,325],dt=[1,326],gt=[2,206],mt=[1,337],Et=[16,152],_t=[6,8,14,17,152,154],vt=[1,353],Ot={trace:function(){},yy:{},symbols_:{error:2,main:3,selectClause:4,semicolonOpt:5,EOF:6,unionClause:7,";":8,unionClauseNotParenthesized:9,unionClauseParenthesized:10,order_by_opt:11,limit_opt:12,selectClauseParenthesized:13,UNION:14,distinctOpt:15,"(":16,")":17,SELECT:18,highPriorityOpt:19,maxStateMentTimeOpt:20,straightJoinOpt:21,sqlSmallResultOpt:22,sqlBigResultOpt:23,sqlBufferResultOpt:24,sqlCacheOpt:25,sqlCalcFoundRowsOpt:26,selectExprList:27,selectDataSetOpt:28,ALL:29,DISTINCT:30,DISTINCTROW:31,HIGH_PRIORITY:32,MAX_STATEMENT_TIME:33,"=":34,NUMERIC:35,STRAIGHT_JOIN:36,SQL_SMALL_RESULT:37,SQL_BIG_RESULT:38,SQL_BUFFER_RESULT:39,SQL_CACHE:40,SQL_NO_CACHE:41,SQL_CALC_FOUND_ROWS:42,",":43,selectExpr:44,"*":45,selectExprStar:46,expr:47,selectExprAliasOpt:48,identifier:49,DOT:50,AS:51,IDENTIFIER:52,STRING:53,string:54,number:55,EXPONENT_NUMERIC:56,HEX_NUMERIC:57,boolean:58,TRUE:59,FALSE:60,null:61,NULL:62,literal:63,place_holder:64,function_call:65,function_call_param_list:66,function_call_param:67,identifier_list:68,case_expr_opt:69,when_then_list:70,WHEN:71,THEN:72,case_when_else:73,ELSE:74,case_when:75,CASE:76,END:77,simple_expr_prefix:78,"+":79,simple_expr:80,"-":81,"~":82,"!":83,BINARY:84,expr_list:85,ROW:86,EXISTS:87,"{":88,"}":89,"||":90,WILDCARD:91,bit_expr:92,"|":93,"&":94,"<<":95,">>":96,"/":97,DIV:98,MOD:99,"%":100,"^":101,not_opt:102,NOT:103,escape_opt:104,ESCAPE:105,predicate:106,IN:107,BETWEEN:108,AND:109,SOUNDS:110,LIKE:111,REGEXP:112,comparison_operator:113,">=":114,">":115,"<=":116,"<":117,"<>":118,"!=":119,sub_query_data_set_opt:120,ANY:121,boolean_primary:122,IS:123,boolean_extra:124,UNKNOWN:125,OR:126,XOR:127,where_opt:128,WHERE:129,group_by_opt:130,group_by:131,roll_up_opt:132,WITH:133,ROLLUP:134,GROUP_BY:135,group_by_order_by_item_list:136,order_by:137,ORDER_BY:138,group_by_order_by_item:139,sort_opt:140,ASC:141,DESC:142,having_opt:143,HAVING:144,limit:145,LIMIT:146,OFFSET:147,procedure_opt:148,procedure:149,PROCEDURE:150,for_update_lock_in_share_mode_opt:151,FOR:152,UPDATE:153,LOCK:154,SHARE:155,MODE:156,FROM:157,table_references:158,partitionOpt:159,escaped_table_reference:160,table_reference:161,OJ:162,join_inner_cross:163,INNER:164,CROSS:165,left_right:166,LEFT:167,RIGHT:168,out_opt:169,OUTER:170,left_right_out_opt:171,join_table:172,JOIN:173,table_factor:174,join_condition:175,on_join_condition:176,NATURAL:177,join_condition_opt:178,ON:179,USING:180,partition_names:181,PARTITION:182,aliasOpt:183,index_or_key:184,INDEX:185,KEY:186,for_opt:187,identifier_list_opt:188,index_hint_list_opt:189,index_hint_list:190,index_hint:191,USE:192,IGNORE:193,FORCE:194,PLACE_HOLDER:195,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",8:";",14:"UNION",16:"(",17:")",18:"SELECT",29:"ALL",30:"DISTINCT",31:"DISTINCTROW",32:"HIGH_PRIORITY",33:"MAX_STATEMENT_TIME",34:"=",35:"NUMERIC",36:"STRAIGHT_JOIN",37:"SQL_SMALL_RESULT",38:"SQL_BIG_RESULT",39:"SQL_BUFFER_RESULT",40:"SQL_CACHE",41:"SQL_NO_CACHE",42:"SQL_CALC_FOUND_ROWS",43:",",45:"*",50:"DOT",51:"AS",52:"IDENTIFIER",53:"STRING",56:"EXPONENT_NUMERIC",57:"HEX_NUMERIC",59:"TRUE",60:"FALSE",62:"NULL",71:"WHEN",72:"THEN",74:"ELSE",76:"CASE",77:"END",79:"+",81:"-",82:"~",83:"!",84:"BINARY",86:"ROW",87:"EXISTS",88:"{",89:"}",90:"||",91:"WILDCARD",93:"|",94:"&",95:"<<",96:">>",97:"/",98:"DIV",99:"MOD",100:"%",101:"^",103:"NOT",105:"ESCAPE",107:"IN",108:"BETWEEN",109:"AND",110:"SOUNDS",111:"LIKE",112:"REGEXP",114:">=",115:">",116:"<=",117:"<",118:"<>",119:"!=",121:"ANY",123:"IS",125:"UNKNOWN",126:"OR",127:"XOR",129:"WHERE",133:"WITH",134:"ROLLUP",135:"GROUP_BY",138:"ORDER_BY",141:"ASC",142:"DESC",144:"HAVING",146:"LIMIT",147:"OFFSET",150:"PROCEDURE",152:"FOR",153:"UPDATE",154:"LOCK",155:"SHARE",156:"MODE",157:"FROM",162:"OJ",164:"INNER",165:"CROSS",167:"LEFT",168:"RIGHT",170:"OUTER",173:"JOIN",177:"NATURAL",179:"ON",180:"USING",182:"PARTITION",185:"INDEX",186:"KEY",192:"USE",193:"IGNORE",194:"FORCE",195:"PLACE_HOLDER"},productions_:[0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[46,3],[48,0],[48,2],[48,1],[48,2],[48,1],[54,1],[55,1],[55,1],[55,1],[58,1],[58,1],[61,1],[63,1],[63,1],[63,1],[63,1],[63,1],[65,4],[66,3],[66,1],[67,0],[67,1],[67,1],[67,2],[67,1],[49,1],[49,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[80,3],[80,3],[80,5],[92,1],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[92,3],[102,0],[102,1],[104,0],[104,2],[106,1],[106,6],[106,6],[106,6],[106,4],[106,5],[106,4],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[113,1],[120,1],[120,1],[122,1],[122,4],[122,3],[122,6],[124,1],[124,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[64,1]],performAction:function(e,t,r,s,i,n,a){var o=n.length-1;switch(i){case 1:case 2:return{nodeType:"Main",value:n[o-2],hasSemicolon:n[o-1]};case 3:case 146:this.$=!0;break;case 4:this.$=!1;break;case 5:case 13:case 14:case 15:case 17:case 19:case 21:case 23:case 25:case 27:case 30:case 31:case 32:case 37:case 52:case 53:case 54:case 55:case 56:case 61:case 62:case 64:case 70:case 74:case 81:case 82:case 83:case 84:case 90:case 94:case 108:case 110:case 111:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 125:case 126:case 127:case 131:case 133:case 142:case 144:case 149:case 155:case 156:case 158:case 163:case 165:case 166:case 177:case 178:case 179:case 180:case 182:case 191:case 193:case 195:case 196:case 204:case 205:case 211:case 213:this.$=n[o];break;case 6:this.$=n[o-2],this.$.orderBy=n[o-1],this.$.limit=n[o];break;case 7:case 8:case 10:case 11:this.$={type:"Union",left:n[o-3],distinctOpt:n[o-1],right:n[o]};break;case 9:this.$={type:"SelectParenthesized",value:n[o-1]};break;case 12:this.$={type:"Select",distinctOpt:n[o-10],highPriorityOpt:n[o-9],maxStateMentTimeOpt:n[o-8],straightJoinOpt:n[o-7],sqlSmallResultOpt:n[o-6],sqlBigResultOpt:n[o-5],sqlBufferResultOpt:n[o-4],sqlCacheOpt:n[o-3],sqlCalcFoundRowsOpt:n[o-2],selectItems:n[o-1],from:n[o].from,partition:n[o].partition,where:n[o].where,groupBy:n[o].groupBy,having:n[o].having,orderBy:n[o].orderBy,limit:n[o].limit,procedure:n[o].procedure,updateLockMode:n[o].updateLockMode};break;case 16:case 18:case 20:case 22:case 24:case 26:case 28:case 29:case 33:case 60:case 69:case 73:case 107:case 109:case 141:case 143:case 145:case 148:case 154:case 157:case 162:case 164:case 167:case 176:case 181:case 190:case 199:case 206:case 210:case 212:this.$=null;break;case 34:n[o-2].value.push(n[o]);break;case 35:this.$={type:"SelectExpr",value:[n[o]]};break;case 36:case 65:this.$={type:"Identifier",value:n[o]};break;case 38:this.$=n[o-1],this.$.alias=n[o].alias,this.$.hasAs=n[o].hasAs;break;case 39:case 66:this.$=n[o-2],n[o-2].value+="."+n[o];break;case 40:case 201:this.$={alias:null,hasAs:null};break;case 41:case 43:this.$={alias:n[o],hasAs:!0};break;case 42:this.$={alias:n[o],hasAs:!1};break;case 44:this.$={alias:n[$01],hasAs:!1};break;case 45:this.$={type:"String",value:n[o]};break;case 46:case 47:case 48:this.$={type:"Number",value:n[o]};break;case 49:this.$={type:"Boolean",value:"TRUE"};break;case 50:this.$={type:"Boolean",value:"FALSE"};break;case 51:this.$={type:"Null",value:"null"};break;case 57:this.$={type:"FunctionCall",name:n[o-3],params:n[o-1]};break;case 58:n[o-2].push(n[o]),this.$=n[o-2];break;case 59:case 151:case 197:this.$=[n[o]];break;case 63:this.$={type:"FunctionCallParam",distinctOpt:n[o-1],value:n[o]};break;case 67:this.$={type:"IdentifierList",value:[n[o]]};break;case 68:case 173:this.$=n[o-2],n[o-2].value.push(n[o]);break;case 71:this.$={type:"WhenThenList",value:[{when:n[o-2],then:n[o]}]};break;case 72:this.$=n[o-4],this.$.value.push({when:n[o-2],then:n[o]});break;case 75:this.$={type:"CaseWhen",caseExprOpt:n[o-3],whenThenList:n[o-2],else:n[o-1]};break;case 76:case 77:case 78:case 79:case 80:this.$={type:"Prefix",prefix:n[o-1],value:n[o]};break;case 85:this.$={type:"SimpleExprParentheses",value:n[o-1]};break;case 86:this.$={type:"SimpleExprParentheses",value:n[o-2],hasRow:!0};break;case 87:this.$={type:"SubQuery",value:n[o-1]};break;case 88:this.$={type:"SubQuery",value:n[o-1],hasExists:!0};break;case 89:this.$={type:"IdentifierExpr",identifier:n[o-2],value:n[o-1]};break;case 91:this.$={type:"StartsWithExpr",value:n[o-2]};break;case 92:this.$={type:"EndsWithExpr",value:n[o]};break;case 93:this.$={type:"ContainsExpr",value:n[o-2]};break;case 95:this.$={type:"BitExpression",operator:"|",left:n[o-2],right:n[o]};break;case 96:this.$={type:"BitExpression",operator:"&",left:n[o-2],right:n[o]};break;case 97:this.$={type:"BitExpression",operator:"<<",left:n[o-2],right:n[o]};break;case 98:this.$={type:"BitExpression",operator:">>",left:n[o-2],right:n[o]};break;case 99:this.$={type:"BitExpression",operator:"+",left:n[o-2],right:n[o]};break;case 100:this.$={type:"BitExpression",operator:"-",left:n[o-2],right:n[o]};break;case 101:this.$={type:"BitExpression",operator:"*",left:n[o-2],right:n[o]};break;case 102:this.$={type:"BitExpression",operator:"/",left:n[o-2],right:n[o]};break;case 103:this.$={type:"BitExpression",operator:"DIV",left:n[o-2],right:n[o]};break;case 104:this.$={type:"BitExpression",operator:"MOD",left:n[o-2],right:n[o]};break;case 105:this.$={type:"BitExpression",operator:"%",left:n[o-2],right:n[o]};break;case 106:this.$={type:"BitExpression",operator:"^",left:n[o-2],right:n[o]};break;case 112:this.$={type:"InSubQueryPredicate",hasNot:n[o-4],left:n[o-5],right:n[o-1]};break;case 113:this.$={type:"InExpressionListPredicate",hasNot:n[o-4],left:n[o-5],right:n[o-1]};break;case 114:this.$={type:"BetweenPredicate",hasNot:n[o-4],left:n[o-5],right:{left:n[o-2],right:n[o]}};break;case 115:this.$={type:"SoundsLikePredicate",hasNot:!1,left:n[o-3],right:n[o]};break;case 116:this.$={type:"LikePredicate",hasNot:n[o-3],left:n[o-4],right:n[o-1],escape:n[o]};break;case 117:this.$={type:"RegexpPredicate",hasNot:n[o-2],left:n[o-3],right:n[o]};break;case 128:this.$={type:"IsNullBooleanPrimary",hasNot:n[o-1],value:n[o-3]};break;case 129:this.$={type:"ComparisonBooleanPrimary",left:n[o-2],operator:n[o-1],right:n[o]};break;case 130:this.$={type:"ComparisonSubQueryBooleanPrimary",operator:n[o-4],subQueryOpt:n[o-3],left:n[o-5],right:n[o-1]};break;case 132:this.$={type:"BooleanExtra",value:n[o]};break;case 134:this.$={type:"IsExpression",hasNot:n[o-1],left:n[o-3],right:n[o]};break;case 135:this.$={type:"NotExpression",value:n[o]};break;case 136:this.$={type:"OrExpression",operator:n[o-1],left:n[o-2],right:n[o]};break;case 137:this.$={type:"AndExpression",operator:n[o-1],left:n[o-2],right:n[o]};break;case 138:this.$={type:"XorExpression",operator:n[o-1],left:n[o-2],right:n[o]};break;case 139:this.$={type:"ExpressionList",value:[n[o]]};break;case 140:case 215:this.$=n[o-2],this.$.value.push(n[o]);break;case 147:this.$={type:"GroupBy",value:n[o-1],rollUp:n[o]};break;case 150:this.$={type:"OrderBy",value:n[o-1],rollUp:n[o]};break;case 152:case 198:this.$=n[o-2],n[o-2].push(n[o]);break;case 153:this.$={type:"GroupByOrderByItem",value:n[o-1],sortOpt:n[o]};break;case 159:this.$={type:"Limit",value:[n[o]]};break;case 160:this.$={type:"Limit",value:[n[o-2],n[o]]};break;case 161:this.$={type:"Limit",value:[n[o],n[o-2]],offsetMode:!0};break;case 168:this.$=n[o-1]+" "+n[o];break;case 169:this.$=n[o-3]+" "+n[o-2]+" "+n[o-1]+" "+n[o];break;case 170:this.$={};break;case 171:this.$={from:n[o-8],partition:n[o-7],where:n[o-6],groupBy:n[o-5],having:n[o-4],orderBy:n[o-3],limit:n[o-2],procedure:n[o-1],updateLockMode:n[o]};break;case 172:this.$={type:"TableReferences",value:[n[o]]};break;case 174:this.$={type:"TableReference",value:n[o]};break;case 175:this.$={type:"TableReference",hasOj:!0,value:n[o-1]};break;case 183:this.$={leftRight:null,outOpt:null};break;case 184:this.$={leftRight:n[o-1],outOpt:n[o]};break;case 185:this.$={type:"InnerCrossJoinTable",innerCrossOpt:n[o-2],left:n[o-3],right:n[o],condition:null};break;case 186:this.$={type:"InnerCrossJoinTable",innerCrossOpt:n[o-3],left:n[o-4],right:n[o-1],condition:n[o]};break;case 187:this.$={type:"StraightJoinTable",left:n[o-3],right:n[o-1],condition:n[o]};break;case 188:this.$={type:"LeftRightJoinTable",leftRight:n[o-4],outOpt:n[o-3],left:n[o-5],right:n[o-1],condition:n[o]};break;case 189:this.$={type:"NaturalJoinTable",leftRight:n[o-2].leftRight,outOpt:n[o-2].outOpt,left:n[o-4],right:n[o]};break;case 192:this.$={type:"OnJoinCondition",value:n[o]};break;case 194:this.$={type:"UsingJoinCondition",value:n[o-1]};break;case 200:this.$={type:"Partitions",value:n[o-1]};break;case 202:this.$={hasAs:!0,alias:n[o]};break;case 203:this.$={hasAs:!1,alias:n[o]};break;case 207:case 208:case 209:this.$={type:"ForOptIndexHint",value:n[o]};break;case 214:this.$={type:"IndexHintList",value:[n[o]]};break;case 216:this.$={type:"UseIndexHint",value:n[o-1],forOpt:n[o-3],indexOrKey:n[o-4]};break;case 217:this.$={type:"IgnoreIndexHint",value:n[o-1],forOpt:n[o-3],indexOrKey:n[o-4]};break;case 218:this.$={type:"ForceIndexHint",value:n[o-1],forOpt:n[o-3],indexOrKey:n[o-4]};break;case 219:this.$={type:"TableFactor",value:n[o-3],partition:n[o-2],alias:n[o-1].alias,hasAs:n[o-1].hasAs,indexHintOpt:n[o]};break;case 220:this.$={type:"TableFactor",value:{type:"SubQuery",value:n[o-2]},alias:n[o].alias,hasAs:n[o].hasAs};break;case 221:this.$=n[o-1],this.$.hasParentheses=!0;break;case 222:this.$={type:"PlaceHolder",value:n[o],param:n[o].slice(2,-1)}}},table:[{3:1,4:2,7:3,9:5,10:6,13:7,16:t,18:r},{1:[3]},{5:9,6:s,8:i,14:n},{5:12,6:s,8:i},e([16,32,33,35,36,37,38,39,40,41,42,45,52,53,56,57,59,60,62,76,79,81,82,83,84,86,87,88,91,103,195],a,{15:13,29:o,30:l,31:c}),e(u,[2,5]),e([6,8,146],h,{11:17,137:18,138:p}),{14:f},{4:21,18:r},{6:[1,22]},{15:23,18:a,29:o,30:l,31:c},{6:[2,3]},{6:[1,24]},e(y,[2,18],{19:25,32:[1,26]}),e(b,[2,13]),e(b,[2,14]),e(b,[2,15]),e(u,d,{12:27,145:28,146:g}),e(m,[2,149]),{16:E,35:_,47:32,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,136:30,139:31,195:j},{15:68,16:a,29:o,30:l,31:c},{17:[1,69]},{1:[2,1]},{4:70,9:71,18:r},{1:[2,2]},e(F,[2,20],{20:72,33:[1,73]}),e(y,[2,17]),e(u,[2,6]),e(B,[2,163]),{35:[1,74]},e(m,W,{132:75,43:X,133:H}),e(G,[2,151]),e(G,[2,154],{140:78,109:V,126:Q,127:z,141:[1,82],142:[1,83]}),e(K,[2,133],{113:85,34:[1,86],114:[1,87],115:[1,88],116:[1,89],117:[1,90],118:[1,91],119:[1,92],123:[1,84]}),{16:E,35:_,47:93,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(J,[2,127]),e(J,[2,111],{102:94,45:Y,79:q,81:Z,93:ee,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe,101:le,103:ce,107:ue,108:ue,111:ue,112:ue,110:[1,95]}),e(he,[2,94]),e(pe,[2,81]),e(pe,fe,{50:ye,90:be}),e(pe,[2,83]),e(pe,[2,84]),{4:112,16:E,18:r,35:_,47:113,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,85:111,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:[1,114]},{16:[1,115]},{49:116,52:de},e(pe,[2,90]),{90:[1,118]},e(pe,[2,52]),e(pe,[2,53]),e(pe,[2,54]),e(pe,[2,55]),e(pe,[2,56]),e([6,8,14,17,34,36,43,45,50,51,52,53,71,72,74,77,79,81,89,90,93,94,95,96,97,98,99,100,101,103,105,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],ge,{16:me}),{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:120,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:121,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:122,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:123,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:124,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,47:126,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,69:125,71:[2,69],75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(pe,[2,45]),e(pe,[2,46]),e(pe,[2,47]),e(pe,[2,48]),e(pe,[2,49]),e(pe,[2,50]),e(pe,[2,51]),e(pe,[2,222]),{10:128,13:127,16:t},e([6,8,14,138,146],[2,9]),e(u,[2,10],{14:n}),e(u,[2,11]),e(Ee,[2,22],{21:129,36:[1,130]}),{34:[1,131]},e(B,[2,159],{43:[1,132],147:[1,133]}),e(m,[2,150]),{16:E,35:_,47:32,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,139:134,195:j},{134:[1,135]},e(G,[2,153]),{16:E,35:_,47:136,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:E,35:_,47:137,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:E,35:_,47:138,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(G,[2,155]),e(G,[2,156]),e([59,60,62,125],ue,{102:139,103:ce}),{16:E,29:[1,142],35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,106:140,120:141,121:[1,143],195:j},e(_e,[2,118]),e(_e,[2,119]),e(_e,[2,120]),e(_e,[2,121]),e(_e,[2,122]),e(_e,[2,123]),e(_e,[2,124]),e(K,[2,135]),{107:[1,144],108:[1,145],111:[1,146],112:[1,147]},{111:[1,148]},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:149,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:150,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:151,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:152,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:153,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:154,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:155,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:156,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:157,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:158,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:159,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:160,195:j},e([59,60,62,107,108,111,112,125],[2,108]),{91:[1,161]},{52:ve},{17:[1,163],43:Oe},{17:[1,165]},e(Ie,[2,139],{109:V,126:Q,127:z}),{16:E,35:_,47:113,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,85:166,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{4:167,18:r},{16:E,35:_,47:168,49:39,50:ye,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Se,ge),{49:169,52:de},e(Ie,xe,{122:33,106:35,92:36,80:37,63:38,65:40,78:41,75:46,54:48,55:49,58:50,61:51,64:52,66:170,67:171,46:173,47:175,49:176,16:E,30:Ne,35:_,45:ke,52:v,53:O,56:I,57:S,59:x,60:N,62:k,76:A,79:R,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,103:U,195:j}),e(pe,[2,76]),e(pe,[2,77]),e(pe,[2,78]),e(pe,[2,79]),e(pe,[2,80]),{70:177,71:[1,178]},{71:[2,70],109:V,126:Q,127:z},e(Ae,[2,7],{14:f}),e(Ae,[2,8]),e(Re,[2,24],{22:179,37:[1,180]}),e(Ee,[2,21]),{35:[1,181]},{35:[1,182]},{35:[1,183]},e(G,[2,152]),e($e,[2,146]),e(Te,[2,136],{109:V}),e(K,[2,137]),e(Te,[2,138],{109:V}),{58:186,59:x,60:N,62:[1,185],124:184,125:[1,187]},e(J,[2,129]),{16:[1,188]},{16:[2,125]},{16:[2,126]},{16:[1,189]},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:190,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:191,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:192,195:j},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:193,195:j},e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,95],{45:Y,79:q,81:Z,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe,101:le}),e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,94,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,96],{45:Y,79:q,81:Z,95:re,96:se,97:ie,98:ne,99:ae,100:oe}),e(Le,[2,97],{45:Y,79:q,81:Z,97:ie,98:ne,99:ae,100:oe}),e(Le,[2,98],{45:Y,79:q,81:Z,97:ie,98:ne,99:ae,100:oe}),e(Ce,[2,99],{45:Y,97:ie,98:ne,99:ae,100:oe}),e(Ce,[2,100],{45:Y,97:ie,98:ne,99:ae,100:oe}),e(he,[2,101]),e(he,[2,102]),e(he,[2,103]),e(he,[2,104]),e(he,[2,105]),e([6,8,14,17,34,36,43,51,52,53,71,72,74,77,89,93,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,106],{45:Y,79:q,81:Z,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe}),e(pe,[2,91]),e(Se,[2,66]),e(pe,[2,85]),{16:E,35:_,47:194,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(pe,[2,87]),{17:[1,195],43:Oe},{17:[1,196]},{89:[1,197],109:V,126:Q,127:z},e(pe,[2,92],{50:ye,90:[1,198]}),{17:[1,199],43:[1,200]},e(Ie,[2,59]),e(Ie,[2,61]),e(Ie,[2,62]),{16:E,35:_,47:201,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Ie,[2,64],{109:V,126:Q,127:z}),e([6,8,14,17,34,43,45,51,52,53,79,81,93,94,95,96,97,98,99,100,101,103,107,108,109,110,111,112,114,115,116,117,118,119,123,126,127,157],fe,{50:[1,202],90:be}),{71:[1,204],73:203,74:[1,205],77:[2,73]},{16:E,35:_,47:206,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Pe,[2,26],{23:207,38:[1,208]}),e(Re,[2,23]),e(F,[2,19]),e(B,[2,160]),e(B,[2,161]),e(K,[2,134]),e(J,[2,128]),e(K,[2,131]),e(K,[2,132]),{4:209,18:r},{4:210,16:E,18:r,35:_,47:113,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,85:211,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{45:Y,79:q,81:Z,93:ee,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe,101:le,109:[1,212]},e(J,[2,109],{104:213,105:[1,214]}),e(J,[2,117],{45:Y,79:q,81:Z,93:ee,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe,101:le}),e(J,[2,115],{45:Y,79:q,81:Z,93:ee,94:te,95:re,96:se,97:ie,98:ne,99:ae,100:oe,101:le}),e(Ie,[2,140],{109:V,126:Q,127:z}),e(pe,[2,86]),e(pe,[2,88]),e(pe,[2,89]),{91:[1,215]},e(pe,[2,57]),e(Ie,xe,{122:33,106:35,92:36,80:37,63:38,65:40,78:41,75:46,54:48,55:49,58:50,61:51,64:52,46:173,47:175,49:176,67:216,16:E,30:Ne,35:_,45:ke,52:v,53:O,56:I,57:S,59:x,60:N,62:k,76:A,79:R,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,103:U,195:j}),e(Ie,[2,63],{109:V,126:Q,127:z}),{45:[1,217],52:ve},{77:[1,218]},{16:E,35:_,47:219,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:E,35:_,47:220,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{72:[1,221],109:V,126:Q,127:z},e(we,[2,28],{24:222,39:[1,223]}),e(Pe,[2,25]),{17:[1,224]},{17:[1,225]},{17:[1,226],43:Oe},{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,106:227,195:j},e(J,[2,116]),{16:E,35:_,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:228,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,195:j},e(pe,[2,93]),e(Ie,[2,58]),e(De,[2,39]),e(pe,[2,75]),{72:[1,229],109:V,126:Q,127:z},{77:[2,74],109:V,126:Q,127:z},{16:E,35:_,47:230,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Me,[2,29],{25:231,40:[1,232],41:[1,233]}),e(we,[2,27]),e(J,[2,130]),e(J,[2,112]),e(J,[2,113]),e(J,[2,114]),e(J,[2,110]),{16:E,35:_,47:234,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Ue,[2,71],{109:V,126:Q,127:z}),e(je,[2,33],{26:235,42:[1,236]}),e(Me,[2,30]),e(Me,[2,31]),e(Ue,[2,72],{109:V,126:Q,127:z}),{16:E,27:237,35:_,44:238,45:Fe,46:240,47:241,49:176,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(je,[2,32]),e(Be,[2,170],{28:242,43:[1,243],157:[1,244]}),e(De,[2,35]),e(De,[2,36]),e(De,[2,37]),e(De,[2,40],{48:245,51:[1,246],52:[1,247],53:[1,248],109:V,126:Q,127:z}),e(Be,[2,12]),{16:E,35:_,44:249,45:Fe,46:240,47:241,49:176,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:We,49:256,52:de,88:Xe,158:250,160:251,161:252,172:255,174:254},e(De,[2,38]),{52:[1,258],53:[1,259]},e(De,[2,42]),e(De,[2,44]),e(De,[2,34]),e([6,8,14,17,129,135,138,144,146,150,152,154],He,{159:260,43:Ge,182:Ve}),e(Qe,[2,172]),e(Qe,[2,174],{163:263,166:265,36:ze,164:Ke,165:Je,167:Ye,168:qe,173:Ze,177:et}),{162:[1,271]},e(tt,[2,195]),e(tt,[2,196]),e([6,8,14,17,36,43,51,52,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],He,{159:272,50:ye,182:Ve}),{4:273,16:We,18:r,49:256,52:de,88:Xe,158:274,160:251,161:252,172:255,174:254},e(De,[2,41]),e(De,[2,43]),e(rt,[2,141],{128:275,129:[1,276]}),{16:We,49:256,52:de,88:Xe,160:277,161:252,172:255,174:254},{16:[1,278]},{173:[1,279]},{16:We,49:256,52:de,174:280},{169:281,170:st,173:it},{166:284,167:Ye,168:qe,171:283,173:[2,183]},{173:[2,177]},{173:[2,178]},e(nt,[2,179]),e(nt,[2,180]),{16:We,49:256,52:de,161:285,172:255,174:254},e(at,ot,{183:286,49:288,51:lt,52:de}),{17:[1,289]},{17:[1,290],43:Ge},e($e,[2,143],{130:291,131:292,135:[1,293]}),{16:E,35:_,47:294,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e(Qe,[2,173]),{49:296,52:de,181:295},{16:We,49:256,52:de,174:297},{176:298,179:ct},{173:[1,300]},{173:[2,182]},{173:[1,301]},{169:302,170:st,173:it},{36:ze,89:[1,303],163:263,164:Ke,165:Je,166:265,167:Ye,168:qe,173:Ze,177:et},e(tt,[2,212],{189:304,190:305,191:306,192:ut,193:ht,194:pt}),{49:310,52:de},e(at,[2,203],{50:ye}),e(tt,ot,{49:288,183:311,51:lt,52:de}),e(tt,[2,221]),e(ft,[2,157],{143:312,144:[1,313]}),e($e,[2,144]),{16:E,35:_,47:32,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,136:314,139:31,195:j},e(rt,[2,142],{109:V,126:Q,127:z}),{17:[1,315],43:[1,316]},e(Ie,[2,197],{50:ye}),e([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,185],{175:317,176:318,179:ct,180:yt}),e(tt,[2,187]),{16:E,35:_,47:320,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},{16:We,49:256,52:de,161:321,172:255,174:254},{16:We,49:256,52:de,174:322},{173:[2,184]},e(Qe,[2,175]),e(tt,[2,219]),e(tt,[2,213]),e(tt,[2,214]),{184:324,185:bt,186:dt},{184:327,185:bt,186:dt},{184:328,185:bt,186:dt},e(at,[2,202],{50:ye}),e(tt,[2,220]),e(m,h,{137:18,11:329,138:p}),{16:E,35:_,47:330,49:39,52:v,53:O,54:48,55:49,56:I,57:S,58:50,59:x,60:N,61:51,62:k,63:38,64:52,65:40,75:46,76:A,78:41,79:R,80:37,81:$,82:T,83:L,84:C,86:P,87:w,88:D,91:M,92:36,103:U,106:35,122:33,195:j},e($e,W,{132:331,43:X,133:H}),e([6,8,14,17,36,43,51,52,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,200]),{49:332,52:de},e(tt,[2,186]),e(tt,[2,193]),{16:[1,333]},e(tt,[2,192],{109:V,126:Q,127:z}),{36:ze,163:263,164:Ke,165:Je,166:265,167:Ye,168:qe,173:Ze,175:334,176:318,177:et,179:ct,180:yt},e(tt,[2,189]),{191:335,192:ut,193:ht,194:pt},{16:gt,152:mt,187:336},e(Et,[2,204]),e(Et,[2,205]),{16:gt,152:mt,187:338},{16:gt,152:mt,187:339},e(B,d,{145:28,12:340,146:g}),e(ft,[2,158],{109:V,126:Q,127:z}),e($e,[2,147]),e(Ie,[2,198],{50:ye}),{49:342,52:de,68:341},e(tt,[2,188]),e(tt,[2,215]),{16:[1,343]},{135:[1,346],138:[1,345],173:[1,344]},{16:[1,347]},{16:[1,348]},e(_t,[2,164],{148:349,149:350,150:[1,351]}),{17:[1,352],43:vt},e(Ie,[2,67],{50:ye}),{17:[2,210],49:342,52:de,68:355,188:354},{16:[2,207]},{16:[2,208]},{16:[2,209]},{49:342,52:de,68:356},{49:342,52:de,68:357},e(Be,[2,167],{151:358,152:[1,359],154:[1,360]}),e(_t,[2,165]),{52:[1,362],65:361},e(tt,[2,194]),{49:363,52:de},{17:[1,364]},{17:[2,211],43:vt},{17:[1,365],43:vt},{17:[1,366],43:vt},e(Be,[2,171]),{153:[1,367]},{107:[1,368]},e(_t,[2,166]),{16:me},e(Ie,[2,68],{50:ye}),e(tt,[2,216]),e(tt,[2,217]),e(tt,[2,218]),e(Be,[2,168]),{155:[1,369]},{156:[1,370]},e(Be,[2,169])],defaultActions:{11:[2,3],22:[2,1],24:[2,2],142:[2,125],143:[2,126],267:[2,177],268:[2,178],282:[2,182],302:[2,184],344:[2,207],345:[2,208],346:[2,209]},parseError:function(e,t){if(!t.recoverable){var r=new Error(e);throw r.hash=t,r}this.trace(e)},parse:function(e){var t=this,r=[0],s=[null],i=[],n=this.table,a="",o=0,l=0,c=0,u=i.slice.call(arguments,1),h=Object.create(this.lexer),p={yy:{}};for(var f in this.yy)Object.prototype.hasOwnProperty.call(this.yy,f)&&(p.yy[f]=this.yy[f]);h.setInput(e,p.yy),p.yy.lexer=h,p.yy.parser=this,void 0===h.yylloc&&(h.yylloc={});var y=h.yylloc;i.push(y);var b=h.options&&h.options.ranges;"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var d,g,m,E,_,v,O,I,S,x,N={};;){if(m=r[r.length-1],this.defaultActions[m]?E=this.defaultActions[m]:(null==d&&(x=void 0,"number"!=typeof(x=h.lex()||1)&&(x=t.symbols_[x]||x),d=x),E=n[m]&&n[m][d]),void 0===E||!E.length||!E[0]){var k="";for(v in S=[],n[m])this.terminals_[v]&&v>2&&S.push("'"+this.terminals_[v]+"'");k=h.showPosition?"Parse error on line "+(o+1)+":\n"+h.showPosition()+"\nExpecting "+S.join(", ")+", got '"+(this.terminals_[d]||d)+"'":"Parse error on line "+(o+1)+": Unexpected "+(1==d?"end of input":"'"+(this.terminals_[d]||d)+"'"),this.parseError(k,{text:h.match,token:this.terminals_[d]||d,line:h.yylineno,loc:y,expected:S})}if(E[0]instanceof Array&&E.length>1)throw new Error("Parse Error: multiple actions possible at state: "+m+", token: "+d);switch(E[0]){case 1:r.push(d),s.push(h.yytext),i.push(h.yylloc),r.push(E[1]),d=null,g?(d=g,g=null):(l=h.yyleng,a=h.yytext,o=h.yylineno,y=h.yylloc,c>0&&c--);break;case 2:if(O=this.productions_[E[1]][1],N.$=s[s.length-O],N._$={first_line:i[i.length-(O||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(O||1)].first_column,last_column:i[i.length-1].last_column},b&&(N._$.range=[i[i.length-(O||1)].range[0],i[i.length-1].range[1]]),void 0!==(_=this.performAction.apply(N,[a,l,o,p.yy,E[1],s,i].concat(u))))return _;O&&(r=r.slice(0,-1*O*2),s=s.slice(0,-1*O),i=i.slice(0,-1*O)),r.push(this.productions_[E[1]][0]),s.push(N.$),i.push(N._$),I=n[r[r.length-2]][r[r.length-1]],r.push(I);break;case 3:return!0}}return!0}},It=function(){return{EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e,t){return this.yy=t||this.yy||{},this._input=e,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];return this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e,e.match(/(?:\r\n?|\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,r=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t),this.offset-=t;var s=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),r.length-1&&(this.yylineno-=r.length-1);var i=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:r?(r.length===s.length?this.yylloc.first_column:0)+s[s.length-r.length].length-r[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[i[0],i[0]+this.yyleng-t]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError("Lexical error on line "+(this.yylineno+1)+". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},test_match:function(e,t){var r,s,i;if(this.options.backtrack_lexer&&(i={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(i.yylloc.range=this.yylloc.range.slice(0))),(s=e[0].match(/(?:\r\n?|\n).*/g))&&(this.yylineno+=s.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:s?s[s.length-1].length-s[s.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],r=this.performAction.call(this,this.yy,this,t,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),r)return r;if(this._backtrack){for(var n in i)this[n]=i[n];return!1}return!1},next:function(){if(this.done)return this.EOF;var e,t,r,s;this._input||(this.done=!0),this._more||(this.yytext="",this.match="");for(var i=this._currentRules(),n=0;n<i.length;n++)if((r=this._input.match(this.rules[i[n]]))&&(!t||r[0].length>t[0].length)){if(t=r,s=n,this.options.backtrack_lexer){if(!1!==(e=this.test_match(r,i[n])))return e;if(this._backtrack){t=!1;continue}return!1}if(!this.options.flex)break}return t?!1!==(e=this.test_match(t,i[s]))&&e:""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return e||this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(e){return(e=this.conditionStack.length-1-Math.abs(e||0))>=0?this.conditionStack[e]:"INITIAL"},pushState:function(e){this.begin(e)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(e,t,r,s){switch(r){case 0:case 1:case 2:case 3:break;case 4:return 195;case 5:case 6:case 7:case 115:case 117:return 52;case 8:return 18;case 9:return 29;case 10:return 121;case 11:return 30;case 12:return 31;case 13:return 32;case 14:return 33;case 15:return 36;case 16:return 37;case 17:return 38;case 18:return 39;case 19:return 40;case 20:return 41;case 21:return 42;case 22:return 51;case 23:return 59;case 24:return 60;case 25:return 62;case 26:return"COLLATE";case 27:return 84;case 28:return 86;case 29:return 87;case 30:return 76;case 31:return 71;case 32:return 72;case 33:return 74;case 34:return 77;case 35:return 98;case 36:return 99;case 37:return 103;case 38:return 108;case 39:return 107;case 40:return 110;case 41:return 111;case 42:return 105;case 43:return 112;case 44:return 123;case 45:return 125;case 46:return 109;case 47:return 126;case 48:return 127;case 49:return 157;case 50:return 182;case 51:return 192;case 52:return 185;case 53:return 186;case 54:return 152;case 55:return 173;case 56:return 138;case 57:return 135;case 58:return 193;case 59:return 194;case 60:return 164;case 61:return 165;case 62:return 179;case 63:return 180;case 64:return 167;case 65:return 168;case 66:return 170;case 67:return 177;case 68:return 129;case 69:return 141;case 70:return 142;case 71:return 133;case 72:return 134;case 73:return 144;case 74:return 147;case 75:return 150;case 76:return 153;case 77:return 154;case 78:return 155;case 79:return 156;case 80:return 162;case 81:return 146;case 82:return 14;case 83:return 43;case 84:return 34;case 85:return 16;case 86:return 17;case 87:return 82;case 88:return 119;case 89:return 83;case 90:return 90;case 91:return 93;case 92:return 94;case 93:return 79;case 94:return 81;case 95:return 45;case 96:return 97;case 97:return 100;case 98:return 101;case 99:return 96;case 100:return 114;case 101:return 115;case 102:return 95;case 103:return"<=>";case 104:return 116;case 105:return 118;case 106:return 117;case 107:return 88;case 108:return 89;case 109:return 8;case 110:return 91;case 111:return 53;case 112:return 57;case 113:return 35;case 114:return 56;case 116:return 50;case 118:return 6;case 119:return"INVALID"}},rules:[/^(?:[/][*](.|\n)*?[*][/])/i,/^(?:[-][-]\s.*\n)/i,/^(?:[#]\s.*\n)/i,/^(?:\s+)/i,/^(?:[$][{](.*?)[}])/i,/^(?:([`][^`]+[`])+)/i,/^(?:(["][^"]+["])+)/i,/^(?:[\[]([^\]]|\]\])+[\]])/i,/^(?:SELECT\b)/i,/^(?:ALL\b)/i,/^(?:ANY\b)/i,/^(?:DISTINCT\b)/i,/^(?:DISTINCTROW\b)/i,/^(?:HIGH_PRIORITY\b)/i,/^(?:MAX_STATEMENT_TIME\b)/i,/^(?:STRAIGHT_JOIN\b)/i,/^(?:SQL_SMALL_RESULT\b)/i,/^(?:SQL_BIG_RESULT\b)/i,/^(?:SQL_BUFFER_RESULT\b)/i,/^(?:SQL_CACHE\b)/i,/^(?:SQL_NO_CACHE\b)/i,/^(?:SQL_CALC_FOUND_ROWS\b)/i,/^(?:AS\b)/i,/^(?:TRUE\b)/i,/^(?:FALSE\b)/i,/^(?:NULL\b)/i,/^(?:COLLATE\b)/i,/^(?:BINARY\b)/i,/^(?:ROW\b)/i,/^(?:EXISTS\b)/i,/^(?:CASE\b)/i,/^(?:WHEN\b)/i,/^(?:THEN\b)/i,/^(?:ELSE\b)/i,/^(?:END\b)/i,/^(?:DIV\b)/i,/^(?:MOD\b)/i,/^(?:NOT\b)/i,/^(?:BETWEEN\b)/i,/^(?:IN\b)/i,/^(?:SOUNDS\b)/i,/^(?:LIKE\b)/i,/^(?:ESCAPE\b)/i,/^(?:REGEXP\b)/i,/^(?:IS\b)/i,/^(?:UNKNOWN\b)/i,/^(?:AND\b)/i,/^(?:OR\b)/i,/^(?:XOR\b)/i,/^(?:FROM\b)/i,/^(?:PARTITION\b)/i,/^(?:USE\b)/i,/^(?:INDEX\b)/i,/^(?:KEY\b)/i,/^(?:FOR\b)/i,/^(?:JOIN\b)/i,/^(?:ORDER\s+BY\b)/i,/^(?:GROUP\s+BY\b)/i,/^(?:IGNORE\b)/i,/^(?:FORCE\b)/i,/^(?:INNER\b)/i,/^(?:CROSS\b)/i,/^(?:ON\b)/i,/^(?:USING\b)/i,/^(?:LEFT\b)/i,/^(?:RIGHT\b)/i,/^(?:OUTER\b)/i,/^(?:NATURAL\b)/i,/^(?:WHERE\b)/i,/^(?:ASC\b)/i,/^(?:DESC\b)/i,/^(?:WITH\b)/i,/^(?:ROLLUP\b)/i,/^(?:HAVING\b)/i,/^(?:OFFSET\b)/i,/^(?:PROCEDURE\b)/i,/^(?:UPDATE\b)/i,/^(?:LOCK\b)/i,/^(?:SHARE\b)/i,/^(?:MODE\b)/i,/^(?:OJ\b)/i,/^(?:LIMIT\b)/i,/^(?:UNION\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\()/i,/^(?:\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\|\|)/i,/^(?:\|)/i,/^(?:&)/i,/^(?:\+)/i,/^(?:-)/i,/^(?:\*)/i,/^(?:\/)/i,/^(?:%)/i,/^(?:\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:;)/i,/^(?:['](%)+['])/i,/^(?:(['][^']*['])+)/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\.[0-9]+)?[eE][-+]?[0-9]+(\.[0-9]+)?)/i,/^(?:[a-zA-Z_@#\uff3f\u4e00-\u9fa5][a-zA-Z0-9_$@#\uff3f\u4e00-\u9fa5]*)/i,/^(?:\.)/i,/^(?:([`])(?:(?=(\\?))\2.)*?\1)/i,/^(?:$)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],inclusive:!0}}}}();function St(){this.yy={}}return Ot.lexer=It,St.prototype=Ot,Ot.Parser=St,new St}(),R=r(34362),$=(e,{parseNumbers:t}={})=>{if(!t||"bigint"==typeof e||"number"==typeof e)return e;if("native"===t)return parseFloat(e);const r=(0,R.numericQuantity)(e,{allowTrailingInvalid:"enhanced"===t,romanNumerals:!1,round:!1});return isNaN(r)?e:r},T=e=>"Prefix"===(null==e?void 0:e.type)&&("+"===e.prefix||"-"===e.prefix)&&"Number"===e.value.type,L=e=>(e=>"String"===(null==e?void 0:e.type)||"Number"===(null==e?void 0:e.type)||"Boolean"===(null==e?void 0:e.type))(e)||T(e),C=e=>"Identifier"===(null==e?void 0:e.type),P=e=>{switch(typeof e){case"number":return`${e}`;case"boolean":return e?"TRUE":"FALSE";default:return`'${e}'`}},w=e=>{const t="string"==typeof e?e:e.value;return t.startsWith("`")&&t.endsWith("`")?t.replaceAll(/(^`|`$)/g,"").replaceAll("``","`"):t.startsWith('"')&&t.endsWith('"')?t.replaceAll(/(^"|"$)/g,"").replaceAll('""','"'):t.startsWith("[")&&t.endsWith("]")?t.replaceAll(/(^\[|\]$)/g,"").replaceAll("]]","]"):t},D=(e,t)=>{if(t){if("<"===e)return">";if("<="===e)return">=";if(">"===e)return"<";if(">="===e)return"<="}return"<>"===e?"!=":e},M=e=>{if("String"===e.type){const t=e.value;if(t.startsWith("'")&&t.endsWith("'")||t.startsWith('"')&&t.endsWith('"')){return t.substring(1,t.length-1).replaceAll(/''/gm,"'")}return t}return"Boolean"===e.type?"true"===e.value.toLowerCase():T(e)?$(`${e.prefix}${e.value.value}`,{parseNumbers:!0}):$(e.value,{parseNumbers:!0})},U=e=>{const t=e.operator.replace("&&","and").replace("||","or").toLowerCase();return"AndExpression"===e.left.type||"OrExpression"===e.left.type||"XorExpression"===e.left.type?[...U(e.left),t,e.right]:[e.left,t,e.right]},j=e=>{const t=U(e);let r=0;const s={combinator:"or",expressions:[]};let i={combinator:"xor",expressions:[]},n={combinator:"and",expressions:[]};for(let o=0;o<t.length-2;o+=2){let e=0;if("and"===t[o+1]?e=2-r:"xor"===t[o+1]?e=1-r:"or"===t[o+1]&&(e=0-r),e>0)for(let s=0;s<e;s++)r+=1,1===r?(i={combinator:"xor",expressions:[]},1===e&&(i.expressions.push(t[o]),(o>=t.length-3||"xor"===t[o+3])&&i.expressions.push(t[o+2]))):2===r&&(n={combinator:"and",expressions:[]},n.expressions.push(t[o],t[o+2]));else if(e<0)for(let a=0;a>e;a--)r-=1,1===r?(i.expressions.push(n),-1===e&&i.expressions.push(t[o+2])):0===r&&(s.expressions.push(i),o>=t.length-3&&s.expressions.push(t[o+2]));else 0===r?((0===o||o>3&&"or"!==t[o-3])&&s.expressions.push(t[o]),(o>=t.length-3||"or"===t[o+3])&&s.expressions.push(t[o+2])):1===r?i.expressions.push(t[o+2]):2===r&&n.expressions.push(t[o+2])}if(2===r&&(i.expressions.push(n),r-=1),1===r&&(s.expressions.push(i),r-=1),1===s.expressions.length&&"combinator"in s.expressions[0])return 1===s.expressions[0].expressions.length&&"combinator"in s.expressions[0].expressions[0]?s.expressions[0].expressions[0]:s.expressions[0];const a={combinator:"or",expressions:[]};for(const o of s.expressions)"combinator"in o&&"combinator"in o.expressions[0]&&1===o.expressions.length?a.expressions.push(o.expressions[0]):a.expressions.push(o);return a};function F(e,t={}){const{params:r,paramPrefix:s,independentCombinators:a,fields:o,getValueSources:l}=t;let c=/^[ \t\n\r\s]*SELECT\b/i.test(e)?e:/^[ \t\n\r\s]*WHERE\b/i.test(e)?`SELECT * FROM t ${e}`:`SELECT * FROM t WHERE ${e}`,u=!1;const h=k(o);if(u=!!a,r)if(Array.isArray(r)){let e=0;c=c.replace(/\?/g,(()=>{const t=P(r[e]);return e++,t}))}else{const e=Object.keys(r),t=null!=s?s:":";e.forEach((e=>{c=c.replace(new RegExp(`\\${t}${e}\\b`,"ig"),P(r[e]))}))}const f=(e,t,r)=>function(e){const{fieldsFlat:t,fieldName:r,operator:s,subordinateFieldName:i,getValueSources:n}=e;if(0===t.length)return!0;let a=!1;const o=E(t.find((e=>e.name===r)));o&&(a=!(!i&&"notNull"!==s&&"null"!==s&&!N(o,s,n).some((e=>"value"===e))),a&&i)&&(N(o,s,n).some((e=>"field"===e))&&r!==i&&I(o,t,s).find((e=>e.name===i))||(a=!1));return a}({fieldName:e,fieldsFlat:h,operator:t,subordinateFieldName:r,getValueSources:l}),y=e=>{if("NotExpression"===e.type){const t="SimpleExprParentheses"===e.value.type?e.value.value.value[0]:e.value,r=y(t);if(r)return b(r)?n(i({},r),{not:!0}):i({rules:[r],not:!0},!u&&{combinator:"and"})}else{if("SimpleExprParentheses"===e.type){const t=e.value.value[0];if("AndExpression"===t.type||"OrExpression"===t.type||"XorExpression"===t.type)return y(t);const r=y(t);return r?i({rules:[r]},u?{}:{combinator:"and"}):null}if("AndExpression"===e.type||"OrExpression"===e.type||"XorExpression"===e.type){if(u){const t=U(e).map((e=>"string"==typeof e?e:y(e)));return t.includes(null)?null:{rules:t}}const t=j(e),{combinator:r}=t,s=t.expressions.map((e=>"combinator"in e?{combinator:e.combinator,rules:e.expressions.map((e=>"combinator"in e?{combinator:e.combinator,rules:e.expressions.map((e=>y(e))).filter(Boolean)}:y(e))).filter(Boolean)}:y(e))).filter(Boolean);if(s.length>0)return{combinator:r,rules:s}}else if("IsNullBooleanPrimary"===e.type){if(C(e.value)){const t=w(e.value),r=e.hasNot?"notNull":"null";if(f(t,r))return{field:t,operator:r,value:null}}}else if("ComparisonBooleanPrimary"===e.type){if(C(e.left)&&!C(e.right)||!C(e.left)&&C(e.right)){const t=C(e.left)?e.left.value:e.right.value,r=[e.left,e.right].find((e=>!C(e)));if(L(r)){const s=w(t),i=D(e.operator,C(e.right));if(f(s,i))return{field:s,operator:i,value:M(r)}}}else if(C(e.left)&&C(e.right)){const t=w(e.left),r=w(e.right),s=D(e.operator);if(f(t,s,r))return{field:t,operator:s,value:r,valueSource:"field"}}}else if("InExpressionListPredicate"===e.type){if(C(e.left)){const r=w(e.left),s=e.right.value.filter(L).map(M),i=e.hasNot?"notIn":"in",n=e.right.value.filter(C).filter((e=>f(r,i,e.value))).map(w);if(s.length>0){const r=(null==t?void 0:t.listsAsArrays)?s:p(s,", ");return{field:w(e.left),operator:i,value:r}}if(n.length>0){const r=(null==t?void 0:t.listsAsArrays)?n:p(n,", ");return{field:w(e.left),operator:i,value:r,valueSource:"field"}}}}else if("BetweenPredicate"===e.type){if(C(e.left)&&L(e.right.left)&&L(e.right.right)){const r=[e.right.left,e.right.right].map(M),s=(null==t?void 0:t.listsAsArrays)?r:p(r,", "),i=e.hasNot?"notBetween":"between";return{field:w(e.left),operator:i,value:s}}if(C(e.left)&&C(e.right.left)&&C(e.right.right)){const r=w(e.left),s=[e.right.left,e.right.right].map(w),i=e.hasNot?"notBetween":"between";if(s.every((e=>f(r,i,e)))){const e=(null==t?void 0:t.listsAsArrays)?s:p(s,", ");return{field:r,operator:i,value:e,valueSource:"field"}}}}else if("LikePredicate"===e.type)if(C(e.left)&&"String"===e.right.type){const t=M(e.right),r=t.replace(/(^%)|(%$)/g,"");let s="=";/^%.*%$/.test(t)||"%"===t?s=e.hasNot?"doesNotContain":"contains":/%$/.test(t)?s=e.hasNot?"doesNotBeginWith":"beginsWith":/^%/.test(t)&&(s=e.hasNot?"doesNotEndWith":"endsWith");const i=w(e.left);if(f(i,s))return{field:i,operator:s,value:r}}else if(!C(e.left)||"StartsWithExpr"!==e.right.type&&"EndsWithExpr"!==e.right.type&&"ContainsExpr"!==e.right.type){if(C(e.left)&&C(e.right)){const t=w(e.left),r=w(e.right),s="=";if(f(t,s,r))return{field:t,operator:s,value:r,valueSource:"field"}}}else{let t="",r="=";C(e.right.value)&&(t=w(e.right.value)),"EndsWithExpr"===e.right.type?r=e.hasNot?"doesNotEndWith":"endsWith":"StartsWithExpr"===e.right.type?r=e.hasNot?"doesNotBeginWith":"beginsWith":"ContainsExpr"===e.right.type&&(r=e.hasNot?"doesNotContain":"contains");const s=w(e.left);if("="!==r&&f(s,r,t))return{field:s,operator:r,value:t,valueSource:"field"}}}return null},{where:d}=A.parse(c).value;if(d){const e=y(d);if(e)return b(e)?e:i({rules:[e]},u?{}:{combinator:"and"})}return i({rules:[]},u?{}:{combinator:"and"})}}}]);