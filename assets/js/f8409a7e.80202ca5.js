"use strict";(self.webpackChunkreact_querybuilder_github_io=self.webpackChunkreact_querybuilder_github_io||[]).push([[206],{3475:function(e,t,r){r.d(t,{c:function(){return l}});var n=r(7219),a=r(9548),i=r(7294),l=function(e){var t,r,l=e.children,o=e.customSetup,s=e.options,u=(0,a.If)().isDarkTheme,d=i.Children.toArray(l),c=u?"#343a46":"#ffffff",p=!0,m=d.reduce((function(e,t){if("pre"!==t.props.mdxType)return e;var r,n=t.props.children.props,a=!1,i=!1;if(n.metastring){var l=n.metastring.split(" "),o=l[0],s=l.slice(1);r="/"+o,s.includes("hidden")&&(a=!0),s.includes("active")&&(i=!0)}else if("language-tsx"===n.className)r="/App.tsx";else if("language-js"===n.className)r="/App.js";else{if("language-css"!==n.className)throw new Error("Code block is missing a filename: "+n.children);r="/styles.css"}if(e[r])throw new Error("File "+r+" was defined multiple times. Each file snippet should have a unique path name.");return"/styles.css"!==r||a||(p=!1),e[r]={code:n.children,hidden:a,active:i},e}),{}),h=RegExp("^import +'react-querybuilder/dist/query-builder\\.s?css';?$").test(m["/App.tsx"].code)?"":"@import 'react-querybuilder/dist/query-builder.css';",f="body { background-color: "+c+"; }";m["/styles.css"]={code:[h,f,null!=(t=null==(r=m["/styles.css"])?void 0:r.code)?t:""].join("\n\n"),hidden:p};var y=Object.assign({},o,{dependencies:Object.assign({},null==o?void 0:o.dependencies,{"react-querybuilder":"latest"})});return i.createElement("div",{className:"sandpackrqb"},i.createElement(n.xR,{files:m,theme:u?"monokai-pro":void 0,template:"react-ts",customSetup:y,options:s}))}},9568:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=r(3475),o=["components"],s={title:"Getting Started",hide_table_of_contents:!0},u=void 0,d={unversionedId:"intro",id:"intro",title:"Getting Started",description:"To install react-querybuilder, use npm or Yarn.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/react-querybuilder/react-querybuilder.github.io/edit/main/docs/intro.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started",hide_table_of_contents:!0},sidebar:"mySidebar",next:{title:"API",permalink:"/docs/category/api"}},c=[{value:"Basics",id:"basics",children:[],level:2},{value:"Onward and upward!",id:"onward-and-upward",children:[],level:2},{value:"Training",id:"training",children:[],level:2}],p={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To install ",(0,i.kt)("inlineCode",{parentName:"p"},"react-querybuilder"),", use ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/react-querybuilder"},"npm")," or ",(0,i.kt)("a",{parentName:"p",href:"https://yarnpkg.com/package/react-querybuilder"},"Yarn"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm i react-querybuilder\n# OR\nyarn add react-querybuilder\n")),(0,i.kt)("h2",{id:"basics"},"Basics"),(0,i.kt)("p",null,"The simplest way to create a query builder is to render the ",(0,i.kt)("inlineCode",{parentName:"p"},"QueryBuilder")," component with no props. (Be sure to import the official stylesheet, which is available in ",(0,i.kt)("inlineCode",{parentName:"p"},".css")," and ",(0,i.kt)("inlineCode",{parentName:"p"},".scss")," flavors.)"),(0,i.kt)(l.c,{options:{editorHeight:160},mdxType:"SandpackRQB"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import QueryBuilder from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.scss';\n\nexport default () => <QueryBuilder />;\n"))),(0,i.kt)("p",null,"Functional, but not very useful. To really get value out of the query builder, we'll first need to define a set of fields for the user to choose from. We can pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"fields")," array into the query builder through the ",(0,i.kt)("inlineCode",{parentName:"p"},"fields")," prop."),(0,i.kt)("p",null,'In the query builder below, click the "+Rule" button and then the fields selector to see the field choices.'),(0,i.kt)(l.c,{options:{editorHeight:240},mdxType:"SandpackRQB"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import QueryBuilder from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.scss';\n\nconst fields: Field[] = [\n  { name: 'firstName', label: 'First Name' },\n  { name: 'lastName', label: 'Last Name' },\n];\n\nexport default () => <QueryBuilder fields={fields} />;\n"))),(0,i.kt)("p",null,"Much more useful, but you probably want to monitor and control what users do with the query builder. Let's set up a state variable using the React Hook ",(0,i.kt)("inlineCode",{parentName:"p"},"useState"),". This will store our query object and allow us to pass it on to other components, event handlers, etc."),(0,i.kt)("p",null,"The state variable ",(0,i.kt)("inlineCode",{parentName:"p"},"query")," will be passed to the ",(0,i.kt)("inlineCode",{parentName:"p"},"query")," prop, and the setter method ",(0,i.kt)("inlineCode",{parentName:"p"},"setQuery")," will be used in the ",(0,i.kt)("inlineCode",{parentName:"p"},"onQueryChange")," callback. Let's also seed the query object with a couple of rules, making sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"field")," property of each rule matches the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," property of one of our fields."),(0,i.kt)(l.c,{options:{editorHeight:480},mdxType:"SandpackRQB"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useState } from 'react';\nimport QueryBuilder, { Field, RuleGroupType } from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.scss';\n\nconst fields: Field[] = [\n  { name: 'firstName', label: 'First Name' },\n  { name: 'lastName', label: 'Last Name' },\n];\n\nexport default () => {\n  const [query, setQuery] = useState<RuleGroupType>({\n    combinator: 'and',\n    rules: [\n      { field: 'firstName', operator: '=', value: 'Steve' },\n      { field: 'lastName', operator: '=', value: 'Vai' },\n    ],\n  });\n\n  return <QueryBuilder fields={fields} query={query} onQueryChange={q => setQuery(q)} />;\n};\n"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Plain JavaScript version"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useState } from 'react';\nimport QueryBuilder from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.scss';\n\nconst fields = [\n  { name: 'firstName', label: 'First Name' },\n  { name: 'lastName', label: 'Last Name' },\n];\n\nexport default () => {\n  const [query, setQuery] = useState({\n    combinator: 'and',\n    rules: [\n      { field: 'firstName', operator: '=', value: 'Steve' },\n      { field: 'lastName', operator: '=', value: 'Vai' },\n    ],\n  });\n\n  return <QueryBuilder fields={fields} query={query} onQueryChange={q => setQuery(q)} />;\n};\n"))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This documentation primarily demonstrates use of the ESM and CommonJS builds of ",(0,i.kt)("inlineCode",{parentName:"p"},"react-querybuilder"),", but a ",(0,i.kt)("a",{parentName:"p",href:"./umd"},"UMD build is also available"),"."))),(0,i.kt)("h2",{id:"onward-and-upward"},"Onward and upward!"),(0,i.kt)("p",null,"To discover all the options of React Query Builder, check out the ",(0,i.kt)("a",{parentName:"p",href:"./api/querybuilder"},"API documentation"),". To play around with various configurations, check out the ",(0,i.kt)("a",{parentName:"p",href:"https://react-querybuilder.github.io/react-querybuilder/"},'"kitchen sink" demo'),"."),(0,i.kt)("h2",{id:"training"},"Training"),(0,i.kt)("p",null,"For an extended tutorial on configuration and customization of ",(0,i.kt)("inlineCode",{parentName:"p"},"react-querybuilder"),", including information about integrating it with a backend API and advanced reporting components (grids, maps, charts, etc.), check out the course ",(0,i.kt)("a",{parentName:"p",href:"https://www.newline.co/courses/building-advanced-admin-reporting-in-react"},"Building Advanced Admin Reporting in React"),", which is taught by one of this library's maintainers, over at ",(0,i.kt)("a",{parentName:"p",href:"https://www.newline.co/"},"newline"),"."))}m.isMDXComponent=!0}}]);