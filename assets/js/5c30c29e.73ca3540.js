"use strict";(self.webpackChunkreact_querybuilder_github_io=self.webpackChunkreact_querybuilder_github_io||[]).push([[258],{6723:function(e,t,i){i.r(t),i.d(t,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var a=i(7462),n=i(3366),l=(i(7294),i(3905)),r=i(9769),o=["components"],u={title:"Miscellaneous",sidebar_position:8},d=void 0,p={unversionedId:"api/misc",id:"api/misc",isDocsHomePage:!1,title:"Miscellaneous",description:"Utilities",source:"@site/docs/api/misc.md",sourceDirName:"api",slug:"/api/misc",permalink:"/docs/api/misc",editUrl:"https://github.com/react-querybuilder/react-querybuilder.github.io/blob/main/docs/docs/api/misc.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Miscellaneous",sidebar_position:8},sidebar:"mySidebar",previous:{title:"Validation",permalink:"/docs/api/validation"},next:{title:"TypeScript",permalink:"/docs/typescript"}},s=[{value:"Utilities",id:"utilities",children:[{value:"<code>defaultValidator</code>",id:"defaultvalidator",children:[],level:3},{value:"<code>findPath</code>",id:"findpath",children:[],level:3},{value:"Defaults",id:"defaults",children:[],level:3}],level:2}],c={toc:s};function m(e){var t=e.components,i=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(r.ZP,{mdxType:"TypeScriptAdmonition"}),(0,l.kt)("h2",{id:"utilities"},"Utilities"),(0,l.kt)("h3",{id:"defaultvalidator"},(0,l.kt)("inlineCode",{parentName:"h3"},"defaultValidator")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function defaultValidator(query: RuleGroupType): {\n  [id: string]: { valid: boolean; reasons?: string[] };\n};\n")),(0,l.kt)("p",null,"Pass ",(0,l.kt)("inlineCode",{parentName:"p"},"validator={defaultValidator}")," to automatically validate groups (rules will be ignored). A group will be marked invalid if either 1) it has no child rules or groups (",(0,l.kt)("inlineCode",{parentName:"p"},"query.rules.length === 0"),"), or 2) it has a missing/invalid ",(0,l.kt)("inlineCode",{parentName:"p"},"combinator")," and more than one child rule or group (",(0,l.kt)("inlineCode",{parentName:"p"},"rules.length >= 2"),")."),(0,l.kt)("p",null,"You can see an example of the default validator in action in the ",(0,l.kt)("a",{parentName:"p",href:"https://react-querybuilder.github.io/react-querybuilder/"},"demo"),' if you check the "Use validation" option. Empty groups will have bold text on their "+Rule" button and a description of the situation where the rules normally appear.'),(0,l.kt)("h3",{id:"findpath"},(0,l.kt)("inlineCode",{parentName:"h3"},"findPath")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"function findPath(path: number[], query: RuleGroupType): RuleType | RuleGroupType;\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"findPath")," is a utility function for finding the rule or group within the query hierarchy that has a given ",(0,l.kt)("inlineCode",{parentName:"p"},"path"),". Useful in custom ",(0,l.kt)("a",{parentName:"p",href:"./querybuilder#onaddrule"},(0,l.kt)("inlineCode",{parentName:"a"},"onAddRule"))," and ",(0,l.kt)("a",{parentName:"p",href:"./querybuilder#onaddgroup"},(0,l.kt)("inlineCode",{parentName:"a"},"onAddGroup"))," functions."),(0,l.kt)("h3",{id:"defaults"},"Defaults"),(0,l.kt)("p",null,"The following default configuration objects are exported for convenience."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defaultCombinators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defaultOperators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defaultTranslations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"defaultValueProcessor"))),(0,l.kt)("p",null,"The following components are also exported:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ActionElement")," - used for action buttons (to add rules, remove groups, etc.)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"NotToggle"),' - used for the "Invert this group" toggle switch'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ValueEditor")," - the default ",(0,l.kt)("inlineCode",{parentName:"li"},"valueEditor")," component"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ValueSelector")," - used for drop-down lists (combinator, field, and operator selectors)")))}m.isMDXComponent=!0}}]);