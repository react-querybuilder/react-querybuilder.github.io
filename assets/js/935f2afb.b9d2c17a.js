"use strict";(self.webpackChunkreact_querybuilder_github_io=self.webpackChunkreact_querybuilder_github_io||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mySidebar":[{"type":"link","label":"Getting Started","href":"/docs/intro","docId":"intro"},{"type":"category","collapsed":true,"collapsible":true,"label":"API","items":[{"type":"link","label":"<QueryBuilder />","href":"/docs/api/querybuilder","docId":"api/querybuilder"},{"type":"link","label":"Export","href":"/docs/api/export","docId":"api/export"},{"type":"link","label":"Import","href":"/docs/api/import","docId":"api/import"},{"type":"link","label":"Validation","href":"/docs/api/validation","docId":"api/validation"},{"type":"link","label":"Miscellaneous","href":"/docs/api/misc","docId":"api/misc"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Tips & Tricks","items":[{"type":"link","label":"Limit rule groups","href":"/docs/tips/limit-groups","docId":"tips/limit-groups"},{"type":"link","label":"Custom components with fallbacks","href":"/docs/tips/custom-with-fallback","docId":"tips/custom-with-fallback"},{"type":"link","label":"Custom bind variables","href":"/docs/tips/custom-bind-variables","docId":"tips/custom-bind-variables"},{"type":"link","label":"Adding and removing query properties","href":"/docs/tips/adding-removing-query-properties","docId":"tips/adding-removing-query-properties"},{"type":"link","label":"Common mistakes","href":"/docs/tips/common-mistakes","docId":"tips/common-mistakes"}]},{"type":"link","label":"TypeScript","href":"/docs/typescript","docId":"typescript"}]},"docs":{"api/export":{"id":"api/export","title":"Export","description":"Use the formatQuery function to export queries in various formats. The function signature is:","sidebar":"mySidebar"},"api/import":{"id":"api/import","title":"Import","description":"Use the parseSQL function to convert SQL SELECT statements into a format suitable for the ` component\'s query` prop. The function signature is:","sidebar":"mySidebar"},"api/misc":{"id":"api/misc","title":"Miscellaneous","description":"Utilities","sidebar":"mySidebar"},"api/querybuilder":{"id":"api/querybuilder","title":"<QueryBuilder />","description":"The default export of react-querybuilder is the `` React component.","sidebar":"mySidebar"},"api/validation":{"id":"api/validation","title":"Validation","description":"Two methods are provided by react-querybuilder for validating queries: query-level validation and field-based validation.","sidebar":"mySidebar"},"intro":{"id":"intro","title":"Getting Started","description":"To install react-querybuilder, use npm or Yarn.","sidebar":"mySidebar"},"tips/adding-removing-query-properties":{"id":"tips/adding-removing-query-properties","title":"Adding and removing query properties","description":"Removing properties","sidebar":"mySidebar"},"tips/common-mistakes":{"id":"tips/common-mistakes","title":"Common mistakes","description":"Custom component as closure","sidebar":"mySidebar"},"tips/custom-bind-variables":{"id":"tips/custom-bind-variables","title":"Custom bind variables","description":"Different SQL flavors have different requirements for bind variable placeholders. Some use a simple ? character (which is what formatQuery(query, \'parameterized\') produces by default), and others require a bind variable placeholder to start with $ and be followed by a unique string.","sidebar":"mySidebar"},"tips/custom-with-fallback":{"id":"tips/custom-with-fallback","title":"Custom components with fallbacks","description":"Field,","sidebar":"mySidebar"},"tips/limit-groups":{"id":"tips/limit-groups","title":"Limit rule groups","description":"Some query builder implementations are required to maintain a flat, rule-only hierarchy, or perhaps allow group creation only under certain conditions like one level deep. There are several ways to meet these requirements.","sidebar":"mySidebar"},"typescript":{"id":"typescript","title":"TypeScript","description":"These are some of the TypeScript types and interfaces you\'ll see throughout the documentation. Even if you are not using TypeScript (you really should! \ud83d\ude0a), you can use the information below to understand the required shape of the props and function parameters. To see the full type definitions for the react-querybuilder library, click here.","sidebar":"mySidebar"}}}')}}]);