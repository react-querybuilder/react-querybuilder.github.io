"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9684],{31592:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});var i=n(71948),s=n(63460);const l={id:"react_querybuilder.TransformQueryOptions",title:"Interface: TransformQueryOptions<RG>",sidebar_label:"TransformQueryOptions",custom_edit_url:null},d=void 0,t={id:"interfaces/react_querybuilder.TransformQueryOptions",title:"Interface: TransformQueryOptions<RG>",description:"react-querybuilder.TransformQueryOptions",source:"@site/api/interfaces/react_querybuilder.TransformQueryOptions.md",sourceDirName:"interfaces",slug:"/interfaces/react_querybuilder.TransformQueryOptions",permalink:"/api/interfaces/react_querybuilder.TransformQueryOptions",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"react_querybuilder.TransformQueryOptions",title:"Interface: TransformQueryOptions<RG>",sidebar_label:"TransformQueryOptions",custom_edit_url:null},sidebar:"sidebar",previous:{title:"ShiftActionsProps",permalink:"/api/interfaces/react_querybuilder.ShiftActionsProps"},next:{title:"Translation",permalink:"/api/interfaces/react_querybuilder.Translation"}},c={},o=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"combinatorMap",id:"combinatormap",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"deleteRemappedProperties",id:"deleteremappedproperties",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"omitPath",id:"omitpath",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"operatorMap",id:"operatormap",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"propertyMap",id:"propertymap",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"ruleGroupProcessor",id:"rulegroupprocessor",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-5",level:4},{value:"ruleProcessor",id:"ruleprocessor",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-6",level:4}];function a(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"../modules/react_querybuilder",children:"react-querybuilder"}),".TransformQueryOptions"]}),"\n",(0,i.jsxs)(r.p,{children:["Options object for ",(0,i.jsx)(r.a,{href:"../modules/react_querybuilder#transformquery",children:"transformQuery"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{style:{textAlign:"left"},children:(0,i.jsx)(r.code,{children:"RG"})}),(0,i.jsxs)(r.td,{style:{textAlign:"left"},children:["extends ",(0,i.jsx)(r.a,{href:"../modules/react_querybuilder#rulegrouptypeany",children:(0,i.jsx)(r.code,{children:"RuleGroupTypeAny"})})," = ",(0,i.jsx)(r.a,{href:"react_querybuilder.RuleGroupType",children:(0,i.jsx)(r.code,{children:"RuleGroupType"})})]})]})})]}),"\n",(0,i.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(r.h3,{id:"combinatormap",children:"combinatorMap"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"combinatorMap"}),": ",(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),">"]}),"\n",(0,i.jsx)(r.p,{children:"Any combinator values (including independent combinators) will be translated\nfrom the key in this object to the value."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"{}"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Example"})})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"  transformQuery(\n    { combinator: 'and', rules: [] },\n    { combinatorMap: { and: '&&', or: '||' } }\n  )\n  // Returns: { combinator: '&&', rules: [] }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L83",children:"packages/react-querybuilder/src/utils/transformQuery.ts:83"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"deleteremappedproperties",children:"deleteRemappedProperties"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"deleteRemappedProperties"}),": ",(0,i.jsx)(r.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(r.p,{children:["Original properties remapped according to the ",(0,i.jsx)(r.code,{children:"propertyMap"})," option will be removed."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"true"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Example"})})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"  transformQuery(\n    { combinator: 'and', rules: [] },\n    { propertyMap: { combinator: 'AndOr' }, deleteRemappedProperties: false }\n  )\n  // Returns: { combinator: 'and', AndOr: 'and', rules: [] }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L124",children:"packages/react-querybuilder/src/utils/transformQuery.ts:124"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"omitpath",children:"omitPath"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"omitPath"}),": ",(0,i.jsx)(r.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(r.p,{children:["Prevents the ",(0,i.jsx)(r.code,{children:"path"})," property (see ",(0,i.jsx)(r.a,{href:"../modules/react_querybuilder#path",children:"Path"}),") from being added to each\nrule and group in the hierarchy."]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"false"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L109",children:"packages/react-querybuilder/src/utils/transformQuery.ts:109"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"operatormap",children:"operatorMap"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"operatorMap"}),": ",(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),">"]}),"\n",(0,i.jsx)(r.p,{children:"Any operator values will be translated from the key in this object to the value."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"{}"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Example"})})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"  transformQuery(\n    { combinator: 'and', rules: [{ field: 'name', operator: '=', value: 'Steve Vai' }] },\n    { operatorMap: { '=': 'is' } }\n  )\n  // Returns:\n  // {\n  //   combinator: 'and',\n  //   rules: [{ field: 'name', operator: 'is', value: 'Steve Vai' }]\n  // }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L102",children:"packages/react-querybuilder/src/utils/transformQuery.ts:102"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"propertymap",children:"propertyMap"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"propertyMap"}),": ",(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"})," | ",(0,i.jsx)(r.code,{children:"false"}),">"]}),"\n",(0,i.jsxs)(r.p,{children:["For each rule and group in the query, any properties matching a key\nin this object will be renamed to the corresponding value. To retain both\nthe new ",(0,i.jsx)(r.em,{children:"and"})," the original properties, set ",(0,i.jsx)(r.code,{children:"deleteRemappedProperties"}),"\nto ",(0,i.jsx)(r.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["If a key has a value of ",(0,i.jsx)(r.code,{children:"false"}),", the corresponding property will be removed\nwithout being copied to a new property name. (Warning: ",(0,i.jsx)(r.code,{children:"{ rules: false }"}),"\nwill prevent recursion and only return the processed root group.)"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"{}"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Example"})})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"  transformQuery(\n    { combinator: 'and', not: true, rules: [] },\n    { propertyMap: { combinator: 'AndOr', not: false } }\n  )\n  // Returns: { AndOr: 'and', rules: [] }\n"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L67",children:"packages/react-querybuilder/src/utils/transformQuery.ts:67"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"rulegroupprocessor",children:"ruleGroupProcessor"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"ruleGroupProcessor"}),": (",(0,i.jsx)(r.code,{children:"ruleGroup"}),": ",(0,i.jsx)(r.code,{children:"RG"}),") => ",(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any"}),">"]}),"\n",(0,i.jsx)(r.p,{children:"When a group is encountered in the hierarchy (including the root group, the\nquery itself), it will be replaced with the result of this function."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"rg => rg"})}),"\n",(0,i.jsx)(r.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsxs)(r.p,{children:["(",(0,i.jsx)(r.code,{children:"ruleGroup"}),"): ",(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any"}),">"]}),"\n",(0,i.jsx)(r.p,{children:"When a group is encountered in the hierarchy (including the root group, the\nquery itself), it will be replaced with the result of this function."}),"\n",(0,i.jsx)(r.h5,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{style:{textAlign:"left"},children:(0,i.jsx)(r.code,{children:"ruleGroup"})}),(0,i.jsx)(r.td,{style:{textAlign:"left"},children:(0,i.jsx)(r.code,{children:"RG"})})]})})]}),"\n",(0,i.jsx)(r.h5,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Record"}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any"}),">"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"rg => rg"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L45",children:"packages/react-querybuilder/src/utils/transformQuery.ts:45"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"ruleprocessor",children:"ruleProcessor"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.code,{children:"Optional"})," ",(0,i.jsx)(r.strong,{children:"ruleProcessor"}),": (",(0,i.jsx)(r.code,{children:"rule"}),": ",(0,i.jsx)(r.a,{href:"react_querybuilder.RuleType",children:(0,i.jsx)(r.code,{children:"RuleType"})}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any"}),", ",(0,i.jsx)(r.code,{children:"string"}),">) => ",(0,i.jsx)(r.code,{children:"any"})]}),"\n",(0,i.jsx)(r.p,{children:"When a rule is encountered in the hierarchy, it will be replaced\nwith the result of this function."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"r => r"})}),"\n",(0,i.jsx)(r.h4,{id:"type-declaration-1",children:"Type declaration"}),"\n",(0,i.jsxs)(r.p,{children:["(",(0,i.jsx)(r.code,{children:"rule"}),"): ",(0,i.jsx)(r.code,{children:"any"})]}),"\n",(0,i.jsx)(r.p,{children:"When a rule is encountered in the hierarchy, it will be replaced\nwith the result of this function."}),"\n",(0,i.jsx)(r.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(r.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{style:{textAlign:"left"},children:(0,i.jsx)(r.code,{children:"rule"})}),(0,i.jsxs)(r.td,{style:{textAlign:"left"},children:[(0,i.jsx)(r.a,{href:"react_querybuilder.RuleType",children:(0,i.jsx)(r.code,{children:"RuleType"})}),"<",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"any"}),", ",(0,i.jsx)(r.code,{children:"string"}),">"]})]})})]}),"\n",(0,i.jsx)(r.h5,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"any"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:(0,i.jsx)(r.code,{children:"Default Value"})})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"r => r"})}),"\n",(0,i.jsx)(r.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/1c32186/packages/react-querybuilder/src/utils/transformQuery.ts#L38",children:"packages/react-querybuilder/src/utils/transformQuery.ts:38"})})]})}function h(e={}){const{wrapper:r}={...(0,s.M)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},63460:(e,r,n)=>{n.d(r,{I:()=>t,M:()=>d});var i=n(96952);const s={},l=i.createContext(s);function d(e){const r=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(l.Provider,{value:r},e.children)}}}]);