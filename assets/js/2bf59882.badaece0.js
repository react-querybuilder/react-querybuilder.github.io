"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3117],{93222:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var d=n(24246),s=n(71670);const i={title:"Migrating to v7"},c=void 0,l={id:"migrate",title:"Migrating to v7",description:"Version 7 shouldn't require many, if any, code changes when migrating from v6. However, some of the defaults have changed, and taking advantage of the performance improvements and other conveniences may require some minor refactoring. A summary of the important changes is below.",source:"@site/docs/migrate.md",sourceDirName:".",slug:"/migrate",permalink:"/docs/next/migrate",draft:!1,unlisted:!1,editUrl:"https://github.com/react-querybuilder/react-querybuilder/edit/main/website/docs/migrate.md",tags:[],version:"current",frontMatter:{title:"Migrating to v7"},sidebar:"mySidebar",previous:{title:"Buildless",permalink:"/docs/next/buildless"}},t={},o=[{value:"Breaking changes",id:"breaking-changes",level:2},{value:"<code>QueryBuilder</code> prop types",id:"querybuilder-prop-types",level:3},{value:"Parser functions removed from main bundle",id:"parser-functions-removed-from-main-bundle",level:3},{value:"New features",id:"new-features",level:2},{value:"Performance improvements",id:"performance-improvements",level:3},{value:"Optional <code>name</code>, <code>value</code> prioritized",id:"optional-name-value-prioritized",level:3},{value:"Query selector, getter, and dispatcher",id:"query-selector-getter-and-dispatcher",level:3},{value:"Field data passed to <code>get*</code> callbacks",id:"field-data-passed-to-get-callbacks",level:3},{value:"Field data passed to <code>formatQuery</code> rule processors",id:"field-data-passed-to-formatquery-rule-processors",level:3},{value:"Shift actions",id:"shift-actions",level:3},{value:"Accessibility",id:"accessibility",level:3},{value:"Drag-and-drop <code>canDrop</code> callback",id:"drag-and-drop-candrop-callback",level:3},{value:"Enhanced <code>parseNumber</code> behavior",id:"enhanced-parsenumber-behavior",level:3},{value:"Updated default labels",id:"updated-default-labels",level:2},{value:"Main package",id:"main-package",level:3},{value:"Compatibility packages",id:"compatibility-packages",level:3},{value:"<code>@react-querybuilder/antd</code>",id:"react-querybuilderantd",level:4},{value:"<code>@react-querybuilder/bootstrap</code>",id:"react-querybuilderbootstrap",level:4},{value:"<code>@react-querybuilder/chakra</code>",id:"react-querybuilderchakra",level:4},{value:"<code>@react-querybuilder/fluent</code>",id:"react-querybuilderfluent",level:4},{value:"<code>@react-querybuilder/material</code>",id:"react-querybuildermaterial",level:4},{value:"Hooks",id:"hooks",level:2},{value:"Other changes",id:"other-changes",level:2}];function a(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.p,{children:"Version 7 shouldn't require many, if any, code changes when migrating from v6. However, some of the defaults have changed, and taking advantage of the performance improvements and other conveniences may require some minor refactoring. A summary of the important changes is below."}),"\n",(0,d.jsx)(r.h2,{id:"breaking-changes",children:"Breaking changes"}),"\n",(0,d.jsxs)(r.h3,{id:"querybuilder-prop-types",children:[(0,d.jsx)(r.code,{children:"QueryBuilder"})," prop types"]}),"\n",(0,d.jsx)(r.p,{children:"The props themselves for the main component haven't changed much from version 6, but the TypeScript interface has been overhauled. Notable changes:"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["The query type, extending either ",(0,d.jsx)(r.code,{children:"RuleGroupType"})," or ",(0,d.jsx)(r.code,{children:"RuleGroupTypeIC"}),", will be automatically inferred instead of relying on the now-deprecated (and ignored) ",(0,d.jsx)(r.code,{children:"independentCombinators"})," prop. See ",(0,d.jsx)(r.a,{href:"./components/querybuilder#independent-combinators",children:"independent combinators"}),"."]}),"\n",(0,d.jsxs)(r.li,{children:["The ",(0,d.jsx)(r.code,{children:"QueryBuilderProps"})," type now requires four generic arguments.","\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["This shouldn't affect JSX declarations to render a ",(0,d.jsx)(r.code,{children:"<QueryBuilder />"})," component since the generic types can almost alwasy be inferred from the props."]}),"\n",(0,d.jsxs)(r.li,{children:["While all props are technically still optional, TypeScript may have problems with inference if ",(0,d.jsx)(r.code,{children:"fields"})," and at least one of ",(0,d.jsx)(r.code,{children:"query"})," and ",(0,d.jsx)(r.code,{children:"defaultQuery"})," are not provided."]}),"\n",(0,d.jsxs)(r.li,{children:["When manually creating an object of type ",(0,d.jsx)(r.code,{children:"QueryBuilderProps"}),", all four generics must be provided. In order, they represent the query type (extending ",(0,d.jsx)(r.code,{children:"RuleGroupType"})," or ",(0,d.jsx)(r.code,{children:"RuleGroupTypeIC"}),"), the field type (extending ",(0,d.jsx)(r.code,{children:"Field"}),"), the operator type (extending ",(0,d.jsx)(r.code,{children:"Operator"}),"), and the combinator type (extending ",(0,d.jsx)(r.code,{children:"Combinator"}),")."]}),"\n"]}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-tsx",children:'// Valid in version 6:\nconst qbp6: QueryBuilderProps = {};\n// Version 7 with the defaults (equivalent to the "version 6" line above):\nconst qbp7: QueryBuilderProps<RuleGroupType, Field, Operator, Combinator> = {};\n// Also valid in version 7:\nconst qbp7a: QueryBuilderProps<RuleGroupType, Option, Option, Option> = {};\n'})}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(r.h3,{id:"parser-functions-removed-from-main-bundle",children:"Parser functions removed from main bundle"}),"\n",(0,d.jsxs)(r.p,{children:["Since the parser functions are infrequently used and generally not used together, they have been removed from the main exports. They have been available as separate exports for some time now (along with ",(0,d.jsx)(r.a,{href:"./utils/export",children:(0,d.jsx)(r.code,{children:"formatQuery"})})," and ",(0,d.jsx)(r.a,{href:"./utils/misc#transformquery",children:(0,d.jsx)(r.code,{children:"transformQuery"})}),"), but before version 7 they could still be imported from ",(0,d.jsx)(r.code,{children:'"react-querybuilder"'}),". They are now available ",(0,d.jsx)(r.em,{children:"only"})," as separate exports. (This reduces the main bundle size by roughly 50%.)"]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Function"}),(0,d.jsxs)(r.th,{children:["New ",(0,d.jsx)(r.code,{children:"import"})," requirement"]})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"parseCEL"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'import { parseCEL } from "react-querybuilder/parseCEL"'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"parseJsonLogic"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'import { parseJsonLogic } from "react-querybuilder/parseJsonLogic"'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"parseMongoDB"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'import { parseMongoDB } from "react-querybuilder/parseMongoDB"'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"parseSQL"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'import { parseSQL } from "react-querybuilder/parseSQL"'})})]})]})]}),"\n",(0,d.jsx)(r.h2,{id:"new-features",children:"New features"}),"\n",(0,d.jsx)(r.h3,{id:"performance-improvements",children:"Performance improvements"}),"\n",(0,d.jsxs)(r.p,{children:["Props, components, and derived values are aggressively memoized using ",(0,d.jsx)(r.code,{children:"React.memo"}),", ",(0,d.jsx)(r.code,{children:"useMemo"}),", and ",(0,d.jsx)(r.code,{children:"useCallback"})," in version 7. This can noticeably improve rendering performance for large queries, especially with certain style libraries. To take advantage of this change, ",(0,d.jsx)(r.em,{children:"every"})," prop passed to ",(0,d.jsx)(r.code,{children:"<QueryBuilder />"})," must be memoized itself or have a stable reference."]}),"\n",(0,d.jsxs)(r.p,{children:["The most common violation of that requirement is probably inline arrow functions in the ",(0,d.jsx)(r.code,{children:"onQueryChange"})," prop (something like ",(0,d.jsx)(r.code,{children:"<QueryBuilder onQueryChange={q => setQuery(q)} />"}),"). This can usually be addressed by memoizing the change handler function with ",(0,d.jsx)(r.code,{children:"useCallback"}),", or, if possible, by moving the change handler definition outside the component rendering function."]}),"\n",(0,d.jsxs)(r.h3,{id:"optional-name-value-prioritized",children:["Optional ",(0,d.jsx)(r.code,{children:"name"}),", ",(0,d.jsx)(r.code,{children:"value"})," prioritized"]}),"\n",(0,d.jsxs)(r.p,{children:["Previously, props and properties that accepted an ",(0,d.jsx)(r.code,{children:"OptionList"})," type or extension thereof (",(0,d.jsx)(r.code,{children:"fields"}),", ",(0,d.jsx)(r.code,{children:"compbinators"}),", etc.) required a ",(0,d.jsx)(r.code,{children:"name"})," property as a unique identifier for each member within the list. In version 7, list members may specify a ",(0,d.jsx)(r.code,{children:"value"})," property as their identifier instead of ",(0,d.jsx)(r.code,{children:"name"}),", which is now optional. If both ",(0,d.jsx)(r.code,{children:"name"})," and ",(0,d.jsx)(r.code,{children:"value"})," properties are present for a given item, ",(0,d.jsx)(r.code,{children:"value"})," will be used."]}),"\n",(0,d.jsx)(r.h3,{id:"query-selector-getter-and-dispatcher",children:"Query selector, getter, and dispatcher"}),"\n",(0,d.jsxs)(r.p,{children:["Three new methods are available that should make it easier to manage arbitrary query updates from custom components. The first two are available from the ",(0,d.jsx)(r.code,{children:"schema"})," prop passed to every component, and should only be used in event handlers. The third is a React Hook and should follow the appropriate rules."]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"getQuery()"}),": returns the current root query object."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"dispatchQuery(query)"}),": updates the internal state and calls the ",(0,d.jsx)(r.code,{children:"onQueryChange"})," callback with the provided query. Previously, updates that couldn't be performed with the ",(0,d.jsx)(r.code,{children:"handleOnChange"})," or ",(0,d.jsx)(r.code,{children:"handleOnClick"})," callbacks had to use external state management in conjunction with the ",(0,d.jsx)(r.a,{href:"./utils/misc#add",children:(0,d.jsx)(r.code,{children:"add"})}),"/",(0,d.jsx)(r.a,{href:"./utils/misc#update",children:(0,d.jsx)(r.code,{children:"update"})}),"/",(0,d.jsx)(r.a,{href:"./utils/misc#remove",children:(0,d.jsx)(r.code,{children:"remove"})})," utilities."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"useQueryBuilderSelector(selector)"}),": generate the selector with ",(0,d.jsx)(r.code,{children:"getQuerySelectorById(props.schema.qbId)"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:"Notes:"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["These functions use a custom ",(0,d.jsx)(r.a,{href:"https://redux.js.org/",children:"Redux"})," context behind the scenes."]}),"\n",(0,d.jsxs)(r.li,{children:["Previously we recommended adding the query object as a property of the ",(0,d.jsx)(r.code,{children:"context"})," prop. That workaround is no longer necessary."]}),"\n"]}),"\n",(0,d.jsxs)(r.h3,{id:"field-data-passed-to-get-callbacks",children:["Field data passed to ",(0,d.jsx)(r.code,{children:"get*"})," callbacks"]}),"\n",(0,d.jsxs)(r.p,{children:["Most of the ",(0,d.jsx)(r.code,{children:"get*"})," callback props now receive an additional parameter with a ",(0,d.jsx)(r.code,{children:"fieldData"})," property. ",(0,d.jsx)(r.code,{children:"fieldData"})," is the full ",(0,d.jsx)(r.code,{children:"Field"})," object from the ",(0,d.jsx)(r.code,{children:"fields"})," array for the given ",(0,d.jsx)(r.code,{children:"field"})," name, including any custom properties (a common one is ",(0,d.jsx)(r.code,{children:"datatype"}),"). This eliminates the need to find the field object based solely on the field's ",(0,d.jsx)(r.code,{children:"name"})," within the ",(0,d.jsx)(r.code,{children:"get*"})," functions themselves. Instead of something like ",(0,d.jsx)(r.code,{children:"fields.find(f => f.name === field)"}),", you can retrieve ",(0,d.jsx)(r.code,{children:"fieldData"})," from the last parameter."]}),"\n",(0,d.jsxs)(r.p,{children:["The following callback props are affected by this change: ",(0,d.jsx)(r.code,{children:"getDefaultOperator"}),", ",(0,d.jsx)(r.code,{children:"getDefaultValue"}),", ",(0,d.jsx)(r.code,{children:"getInputType"}),", ",(0,d.jsx)(r.code,{children:"getOperators"}),", ",(0,d.jsx)(r.code,{children:"getRuleClassname"}),", ",(0,d.jsx)(r.code,{children:"getValueEditorSeparator"}),", ",(0,d.jsx)(r.code,{children:"getValueEditorType"}),", ",(0,d.jsx)(r.code,{children:"getValues"}),", and ",(0,d.jsx)(r.code,{children:"getValueSources"}),"."]}),"\n",(0,d.jsxs)(r.h3,{id:"field-data-passed-to-formatquery-rule-processors",children:["Field data passed to ",(0,d.jsx)(r.code,{children:"formatQuery"})," rule processors"]}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["Custom rule processors for ",(0,d.jsx)(r.code,{children:"formatQuery"})," now receive the full ",(0,d.jsx)(r.code,{children:"Field"})," object in the options parameter, as long as a ",(0,d.jsx)(r.code,{children:"fields"})," array is provided alongside ",(0,d.jsx)(r.code,{children:"ruleProcessor"}),". In TypeScript, the member type of the ",(0,d.jsx)(r.code,{children:"fields"})," array now requires a ",(0,d.jsx)(r.code,{children:"label: string"})," property. Previously, only ",(0,d.jsx)(r.code,{children:"name"})," was required."]}),"\n"]}),"\n",(0,d.jsx)(r.h3,{id:"shift-actions",children:"Shift actions"}),"\n",(0,d.jsxs)(r.p,{children:["A new ",(0,d.jsx)(r.code,{children:"showShiftActions"})," prop provides first class support for rearranging rules within a query without enabling drag-and-drop. When ",(0,d.jsx)(r.code,{children:"showShiftActions"})," is ",(0,d.jsx)(r.code,{children:"true"}),", two buttons will appear at the front of each rule and group (except the root group), the first of which will shift the rule/group one spot higher, while the second will shift it one spot lower."]}),"\n",(0,d.jsx)(r.p,{children:"Related additions:"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"ShiftActions"}),' component (with corresponding components in each compatibility package) that renders "shift up" and "shift down" action buttons. The default styles remove the border and background from these buttons, leaving only the ',(0,d.jsx)(r.code,{children:"shiftActionUp.label"}),"/",(0,d.jsx)(r.code,{children:"shiftActionDown.label"})," translation properties visible."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"useShiftActions"})," hook, called by the ",(0,d.jsx)(r.code,{children:"ShiftActions"})," component, returns ",(0,d.jsx)(r.code,{children:"shiftUp"}),"/",(0,d.jsx)(r.code,{children:"shiftDown"}),' methods and determines whether either button should be disabled. (Within the root group, "shift up" is disabled for the very first rule or group and "shift down" is disabled for the very last rule or group).']}),"\n",(0,d.jsxs)(r.li,{children:["New properties on the ",(0,d.jsx)(r.code,{children:"translations"})," prop: ",(0,d.jsx)(r.code,{children:"shiftActionUp"})," and ",(0,d.jsx)(r.code,{children:"shiftActionDown"}),"."]}),"\n"]}),"\n",(0,d.jsx)(r.h3,{id:"accessibility",children:"Accessibility"}),"\n",(0,d.jsxs)(r.p,{children:["Accessibility is improved with the addition of a ",(0,d.jsx)(r.code,{children:"title"})," attribute to the outermost ",(0,d.jsx)(r.code,{children:"<div>"})," of each rule group. The text of this attribute can be customized with the ",(0,d.jsx)(r.code,{children:"accessibleDescriptionGenerator"})," function prop. The default implementation is exported as ",(0,d.jsx)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/main/packages/react-querybuilder/src/utils/generateAccessibleDescription.ts",children:"generateAccessibleDescription"}),"."]}),"\n",(0,d.jsxs)(r.h3,{id:"drag-and-drop-candrop-callback",children:["Drag-and-drop ",(0,d.jsx)(r.code,{children:"canDrop"})," callback"]}),"\n",(0,d.jsxs)(r.p,{children:[(0,d.jsx)(r.code,{children:"<QueryBuilderDnD />"})," and ",(0,d.jsx)(r.code,{children:"<QueryBuilderDndWithoutProvider />"})," from ",(0,d.jsx)(r.code,{children:"@react-querybuilder/dnd"})," now accept a ",(0,d.jsx)(r.code,{children:"canDrop"})," function prop. If provided, the function will be called when dragging a rule or group. The only parameter will be an object containing the dragged ",(0,d.jsx)(r.code,{children:"item"})," (type ",(0,d.jsx)(r.code,{children:"{ path: Path }"}),") and the ",(0,d.jsx)(r.code,{children:"path"})," of the rule/group over which the dragged item is hovering. If ",(0,d.jsx)(r.code,{children:"canDrop"})," returns ",(0,d.jsx)(r.code,{children:"false"}),", dropping the item at its current position will have no effect on the query. If ",(0,d.jsx)(r.code,{children:"canDrop"})," returns ",(0,d.jsx)(r.code,{children:"true"}),", the default rules will apply."]}),"\n",(0,d.jsxs)(r.h3,{id:"enhanced-parsenumber-behavior",children:["Enhanced ",(0,d.jsx)(r.code,{children:"parseNumber"})," behavior"]}),"\n",(0,d.jsxs)(r.p,{children:["The ",(0,d.jsx)(r.code,{children:"parseNumber"})," function now delegates parsing to ",(0,d.jsx)(r.a,{href:"https://www.npmjs.com/package/numeric-quantity",children:(0,d.jsx)(r.code,{children:"numeric-quantity"})})," (essentially an enhanced version of ",(0,d.jsx)(r.code,{children:"parseFloat"}),'). The default behavior has not changed, but a new "enhanced" option will ignore trailing invalid characters (e.g., the "abc" in "123abc"). This matches the bahavior of the "native" option, which uses ',(0,d.jsx)(r.code,{children:"parseFloat"})," directly, except it returns the original string when parsing fails instead of ",(0,d.jsx)(r.code,{children:"NaN"}),"."]}),"\n",(0,d.jsx)(r.h2,{id:"updated-default-labels",children:"Updated default labels"}),"\n",(0,d.jsx)(r.h3,{id:"main-package",children:"Main package"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Old"}),(0,d.jsx)(r.th,{children:"New"}),(0,d.jsx)(r.th,{children:"Notes"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.addRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"+Rule"'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"+ Rule"'})}),(0,d.jsx)(r.td,{children:'Space added between "+" and "Rule"'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.addGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"+Group"'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"+ Group"'})}),(0,d.jsx)(r.td,{children:'Space added between "+" and "Group"'})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"x"'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"\u2a2f"'})}),(0,d.jsxs)(r.td,{children:["HTML entity ",(0,d.jsx)(r.code,{children:"&cross;"})," / ",(0,d.jsx)(r.code,{children:"&#x2A2F;"})]})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"x"'})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'"\u2a2f"'})}),(0,d.jsxs)(r.td,{children:["HTML entity ",(0,d.jsx)(r.code,{children:"&cross;"})," / ",(0,d.jsx)(r.code,{children:"&#x2A2F;"})]})]})]})]}),"\n",(0,d.jsx)(r.h3,{id:"compatibility-packages",children:"Compatibility packages"}),"\n",(0,d.jsxs)(r.p,{children:["Several compatibility packages take advantage of the new ability to use a ",(0,d.jsx)(r.code,{children:"ReactNode"})," as a ",(0,d.jsx)(r.code,{children:"label"})," (previously only ",(0,d.jsx)(r.code,{children:"string"}),"s were allowed). These packages override the default ",(0,d.jsx)(r.code,{children:"label"})," for non-text components (",(0,d.jsx)(r.code,{children:"lock*"}),", ",(0,d.jsx)(r.code,{children:"clone*"}),", ",(0,d.jsx)(r.code,{children:"remove*"}),", and ",(0,d.jsx)(r.code,{children:"dragHandle"}),") with SVG icons from their official icon packages. This brings them more in line with their respective design systems by default. To avoid using the icons, use ",(0,d.jsx)(r.code,{children:"translations={defaultTranslations}"}),"."]}),"\n",(0,d.jsx)(r.h4,{id:"react-querybuilderantd",children:(0,d.jsx)(r.code,{children:"@react-querybuilder/antd"})}),"\n",(0,d.jsxs)(r.p,{children:["Icon package: ",(0,d.jsx)(r.a,{href:"https://npmjs.com/package/@ant-design/icons",children:(0,d.jsx)(r.code,{children:"@ant-design/icons"})})]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Icon"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CloseOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CloseOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CopyOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRuleGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CopyOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroupDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRuleDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionUp.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UpOutlined />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionDown.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<DownOutlined />"})})]})]})]}),"\n",(0,d.jsx)(r.h4,{id:"react-querybuilderbootstrap",children:(0,d.jsx)(r.code,{children:"@react-querybuilder/bootstrap"})}),"\n",(0,d.jsxs)(r.p,{children:["Icon package: ",(0,d.jsx)(r.a,{href:"https://npmjs.com/package/bootstrap-icons",children:(0,d.jsx)(r.code,{children:"bootstrap-icons"})})]}),"\n",(0,d.jsxs)(r.blockquote,{children:["\n",(0,d.jsx)(r.p,{children:(0,d.jsxs)(r.em,{children:["Note: The ",(0,d.jsx)(r.code,{children:"BootstrapDragHandle"})," component has been removed. It is unnecessary now that the default drag handle component can accept a ",(0,d.jsx)(r.code,{children:"ReactNode"})," as its ",(0,d.jsx)(r.code,{children:"label"}),"."]})}),"\n"]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Icon"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-x" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-x" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-copy" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRuleGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-copy" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.dragHandle.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-grip-vertical" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-unlock" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-unlock" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroupDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-lock" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRuleDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-lock" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionUp.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-chevron-compact-up" />'})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionDown.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:'<i className="bi bi-chevron-compact-down" />'})})]})]})]}),"\n",(0,d.jsx)(r.h4,{id:"react-querybuilderchakra",children:(0,d.jsx)(r.code,{children:"@react-querybuilder/chakra"})}),"\n",(0,d.jsxs)(r.p,{children:["Icon package: ",(0,d.jsx)(r.a,{href:"https://npmjs.com/package/@chakra-ui/icons",children:(0,d.jsx)(r.code,{children:"@chakra-ui/icons"})})]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Icon"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CloseIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CloseIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRuleGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CopyIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CopyIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroupDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRuleDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionDown.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ChevronDownIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionUp.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ChevronUpIcon />"})})]})]})]}),"\n",(0,d.jsx)(r.h4,{id:"react-querybuilderfluent",children:(0,d.jsx)(r.code,{children:"@react-querybuilder/fluent"})}),"\n",(0,d.jsxs)(r.p,{children:["Icon package: ",(0,d.jsx)(r.a,{href:"https://npmjs.com/package/@fluentui/react-icons-mdl2",children:(0,d.jsx)(r.code,{children:"@fluentui/react-icons-mdl2"})})]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Icon"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CancelIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<CancelIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<DuplicateRowIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRuleGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<DuplicateRowIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.dragHandle.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<GripperDotsVerticalIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<UnlockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroupDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRuleDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionDown.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ChevronDownIcon />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionUp.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ChevronUpIcon />"})})]})]})]}),"\n",(0,d.jsx)(r.h4,{id:"react-querybuildermaterial",children:(0,d.jsx)(r.code,{children:"@react-querybuilder/material"})}),"\n",(0,d.jsxs)(r.p,{children:["Icon package: ",(0,d.jsx)(r.a,{href:"https://npmjs.com/package/@mui/icons-material",children:(0,d.jsx)(r.code,{children:"@mui/icons-material"})})]}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Key"}),(0,d.jsx)(r.th,{children:"Icon"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<Close />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.removeRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<Close />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ContentCopy />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.cloneRuleGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ContentCopy />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroup.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockOpen />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRule.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<LockOpen />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockGroupDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<Lock />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.lockRuleDisabled.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<Lock />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionDown.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ShiftDown />"})})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"translations.shiftActionUp.label"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"<ShiftUp />"})})]})]})]}),"\n",(0,d.jsx)(r.h2,{id:"hooks",children:"Hooks"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["The ",(0,d.jsx)(r.code,{children:"useQueryBuilder"})," hook has been split into ",(0,d.jsx)(r.code,{children:"useQueryBuilderSetup"})," and ",(0,d.jsx)(r.code,{children:"useQueryBuilderSchema"}),". ",(0,d.jsx)(r.code,{children:"useQueryBuilderSchema"})," must be called from a child component of one that calls ",(0,d.jsx)(r.code,{children:"useQueryBuilderSetup"}),". For example usage, see the ",(0,d.jsxs)(r.a,{href:"https://github.com/react-querybuilder/react-querybuilder/blob/main/packages/react-querybuilder/src/components/QueryBuilder.tsx",children:[(0,d.jsx)(r.code,{children:"QueryBuilder"})," source code"]}),"."]}),"\n",(0,d.jsxs)(r.li,{children:["The ",(0,d.jsx)(r.code,{children:"useStopEventPropagation"})," hook, called from the default ",(0,d.jsx)(r.code,{children:"Rule"})," and ",(0,d.jsx)(r.code,{children:"RuleGroup"})," components, now takes a single function as its parameter instead of an object map of functions. It must be run for each wrapped function individually."]}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"@react-querybuilder/mantine"})," now requires Mantine v7+."]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"parseMongoDB"})," now generates more concise queries when it encounters ",(0,d.jsx)(r.code,{children:"$not"})," operators that specify a single, boolean condition. Whereas previously that would yield a group with ",(0,d.jsx)(r.code,{children:"not: true"}),", now it generates a rule with a negated operator (",(0,d.jsx)(r.code,{children:'"="'})," becomes ",(0,d.jsx)(r.code,{children:'"!="'}),", ",(0,d.jsx)(r.code,{children:'"contains"'})," becomes ",(0,d.jsx)(r.code,{children:'"doesNotContain"'}),", etc.)."]}),"\n",(0,d.jsxs)(r.li,{children:["Paths are now declared with a new type alias ",(0,d.jsx)(r.code,{children:"Path"})," instead of ",(0,d.jsx)(r.code,{children:"number[]"}),". The actual type is the same: ",(0,d.jsx)(r.code,{children:"type Path = number[]"}),"."]}),"\n",(0,d.jsxs)(r.li,{children:["The ",(0,d.jsx)(r.code,{children:"RuleGroupTypeIC"})," type now includes ",(0,d.jsx)(r.code,{children:"combinator?: undefined"})," to ensure that query objects intended for use in query builders where ",(0,d.jsx)(r.code,{children:"independentCombinators"})," is enabled do not contain ",(0,d.jsx)(r.code,{children:"combinator"})," properties."]}),"\n"]}),"\n",(0,d.jsxs)(r.p,{children:["Instructions on migrating from v5 to v6 are ",(0,d.jsx)(r.a,{href:"/docs/migrate",children:"here"}),"."]})]})}function h(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},71670:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>c});var d=n(27378);const s={},i=d.createContext(s);function c(e){const r=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),d.createElement(i.Provider,{value:r},e.children)}}}]);