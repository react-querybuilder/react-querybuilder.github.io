"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7419],{87419:e=>{var n,r=Object.defineProperty,t=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,i=Object.prototype.hasOwnProperty,a={};((e,n)=>{for(var t in n)r(e,t,{get:n[t],enumerable:!0})})(a,{parseJsonLogic:()=>x}),e.exports=(n=a,((e,n,a,s)=>{if(n&&"object"==typeof n||"function"==typeof n)for(let l of o(n))i.call(e,l)||l===a||r(e,l,{get:()=>n[l],enumerable:!(s=t(n,l))||s.enumerable});return e})(r({},"__esModule",{value:!0}),n));var s={"=":"!=","!=":"=","<":">=","<=":">",">":"<=",">=":"<",beginsWith:"doesNotBeginWith",doesNotBeginWith:"beginsWith",endsWith:"doesNotEndWith",doesNotEndWith:"endsWith",contains:"doesNotContain",doesNotContain:"contains",between:"notBetween",notBetween:"between",in:"notIn",notIn:"in",notNull:"null",null:"notNull"},l=e=>!!e&&"object"==typeof e&&"rules"in e&&Array.isArray(e.rules),u=e=>l(e)&&!!e.combinator,f=e=>{const{combinator:n,...r}=e,t=[];return e.rules.forEach(((e,r,o)=>{l(e)?t.push(f(e)):t.push(e),r<o.length-1&&t.push(n)})),{...r,rules:t}},c=e=>null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype,p=Object.keys,y=e=>Array.isArray(e)&&e.length>0&&"options"in e[0],d=(e,n,r)=>{if(!e.comparator){const r=n=>n.name!==e.name;return y(n)?n.map((e=>({...e,options:e.options.filter(r)}))):n.filter(r)}const t=n=>e.name!==n.name&&("string"==typeof e.comparator?e[e.comparator]===n[e.comparator]:e.comparator(n,r));return y(n)?n.map((e=>({...e,options:e.options.filter(t)}))).filter((e=>e.options.length>0)):n.filter(t)},m=["value"],b=(e,n,r)=>{const t=e??{};if(t.valueSources)return"function"==typeof t.valueSources?t.valueSources(n):t.valueSources;if(r){const e=r(t.name,n);if(e)return e}return m},v=e=>{const n=new Set,r=[];return e.forEach((e=>{n.has(e.name)||(n.add(e.name),r.push(e))})),r},h=e=>{let n=[];const r=e?Array.isArray(e)?e:Object.keys(e).map((n=>({...e[n],name:n}))).sort(((e,n)=>e.label.localeCompare(n.label))):[];return n=y(r)?v(n.concat(...r.map((e=>e.options)))):v(r),n};var g=e=>(e=>c(e)&&"var"in e)(e)&&"string"==typeof e.var,j=e=>c(e)&&"=="in e,A=e=>c(e)&&"==="in e,N=e=>c(e)&&"!="in e,O=e=>c(e)&&"!=="in e,w=e=>c(e)&&"!"in e,W=e=>c(e)&&"!!"in e,S=e=>c(e)&&"or"in e,k=e=>c(e)&&"and"in e,B=e=>c(e)&&">"in e,C=e=>c(e)&&">="in e,P=e=>c(e)&&"<"in e&&2===e["<"].length,E=e=>c(e)&&"<="in e&&2===e["<="].length,F=e=>c(e)&&"in"in e&&Array.isArray(e.in[1]),V=e=>c(e)&&"in"in e&&!Array.isArray(e.in[1]),I=e=>c(e)&&"<"in e&&Array.isArray(e["<"])&&3===e["<"].length,J=e=>c(e)&&"<="in e&&Array.isArray(e["<="])&&3===e["<="].length,L=e=>c(e)&&"startsWith"in e,$=e=>c(e)&&"endsWith"in e,_={combinator:"and",rules:[]};function x(e,n){void 0===n&&(n={});const r=h(n.fields),{getValueSources:t,listsAsArrays:o,jsonLogicOperations:i}=n,a=(e,n,o)=>function(e){let{fieldsFlat:n,fieldName:r,operator:t,subordinateFieldName:o,getValueSources:i}=e;if(0===n.length)return!0;let a=!1;const s=n.find((e=>e.name===r));s&&(a=!(!o&&"notNull"!==t&&"null"!==t&&!b(s,t,i).some((e=>"value"===e))),a&&o)&&(b(s,t,i).some((e=>"field"===e))&&r!==o&&d(s,n,t).find((e=>e.name===o))||(a=!1));return a}({fieldName:e,fieldsFlat:r,operator:n,subordinateFieldName:o,getValueSources:t});let l=e;if("string"==typeof e)try{l=JSON.parse(e)}catch(v){return _}const y=function e(n,r){if(r&&!c(n))return!1;const t=Object.keys(n)[0],l=n[t];if(k(n))return{combinator:"and",rules:n.and.map((n=>e(n))).filter(Boolean)};if(S(n))return{combinator:"or",rules:n.or.map((n=>e(n))).filter(Boolean)};if(w(n)){const t=e(n["!"]);if(t){if(!(u(t)||"between"!==t.operator&&"in"!==t.operator&&"contains"!==t.operator&&"beginsWith"!==t.operator&&"endsWith"!==t.operator)){const e={...t,operator:s[t.operator]};return r?{combinator:"and",rules:[e]}:e}return I(n["!"])&&u(t)?{...t,not:!0}:{combinator:"and",rules:[t],not:!0}}return!1}if(W(n)){return e(n["!!"])||!1}let f,y=!1,d="",m="=",b="";if(i&&p(i).includes(t))y=i[t](l);else if(j(n)||A(n)||N(n)||O(n)||B(n)||C(n)||P(n)||E(n)||V(n)||L(n)||$(n)){const[e,r]=l;if(g(e)&&!c(r))d=e.var,b=r;else if(!c(e)&&g(r))d=r.var,b=e;else{if(!g(e)||!g(r))return!1;d=e.var,b=r.var,f="field"}m=j(n)||A(n)?null===b?"null":"=":N(n)||O(n)?null===b?"notNull":"!=":V(n)?"contains":L(n)?"beginsWith":$(n)?"endsWith":t,a(d,m,"field"===f?b:void 0)&&(y={field:d,operator:m,value:b,valueSource:f})}else if(I(n)&&g(n["<"][1])){d=n["<"][1].var;const r=[n["<"][0],n["<"][2]];if(r.every(g)||r.every((e=>"string"==typeof e))||r.every((e=>"number"==typeof e))||r.every((e=>"boolean"==typeof e)))return e({and:[{">":[{var:d},r[0]]},{"<":[{var:d},r[1]]}]})||!1}else if(J(n)&&g(n["<="][1])){d=n["<="][1].var,m="between";const e=[n["<="][0],n["<="][2]];if(n["<="].every(g)){f="field";const n=e.map((e=>e.var)).filter((e=>a(d,m,e)));b=o?n:n.join(",")}else(e.every((e=>"string"==typeof e))||e.every((e=>"number"==typeof e))||e.every((e=>"boolean"==typeof e)))&&(b=o?e:e.map((e=>`${e}`)).join(","));a(d,m)&&b.length>=2&&(y={field:d,operator:m,value:b,valueSource:f})}else if(F(n)&&g(l[0])){if(d=l[0].var,m="in",n.in[1].every(g)){f="field";const e=n.in[1].map((e=>e.var)).filter((e=>a(d,m,e)));b=o?e:e.join(",")}else(n.in[1].every((e=>"string"==typeof e))||n.in[1].every((e=>"number"==typeof e))||n.in[1].every((e=>"boolean"==typeof e)))&&(b=o?n.in[1]:n.in[1].map((e=>`${e}`)).join(","));b.length>0&&(y={field:d,operator:m,value:b,valueSource:f})}return!!y&&(r?{combinator:"and",rules:[y]}:y)}(l,!0),m=y||_;return n.independentCombinators?f(m):m}}}]);