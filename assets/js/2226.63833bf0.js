"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2226],{2226:e=>{var t,r=Object.defineProperty,n=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,l=Object.prototype.hasOwnProperty,i={};((e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})})(i,{parseMongoDB:()=>w}),e.exports=(t=i,((e,t,i,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of o(t))l.call(e,s)||s===i||r(e,s,{get:()=>t[s],enumerable:!(a=n(t,s))||a.enumerable});return e})(r({},"__esModule",{value:!0}),t));var a={"=":"!=","!=":"=","<":">=","<=":">",">":"<=",">=":"<",beginsWith:"doesNotBeginWith",doesNotBeginWith:"beginsWith",endsWith:"doesNotEndWith",doesNotEndWith:"endsWith",contains:"doesNotContain",doesNotContain:"contains",between:"notBetween",notBetween:"between",in:"notIn",notIn:"in",notNull:"null",null:"notNull"},s=e=>!!e&&"object"==typeof e&&"rules"in e&&Array.isArray(e.rules),u=e=>s(e)&&!!e.combinator,f=e=>{const{combinator:t,...r}=e,n=[];return e.rules.forEach(((e,r,o)=>{s(e)?n.push(f(e)):n.push(e),r<o.length-1&&n.push(t)})),{...r,rules:n}},p=e=>null!==e&&"object"==typeof e&&Object.getPrototypeOf(e)===Object.prototype,$=Object.keys,c=e=>Array.isArray(e)&&e.length>0&&"options"in e[0],g=(e,t,r)=>{if(!e.comparator){const r=t=>t.name!==e.name;return c(t)?t.map((e=>({...e,options:e.options.filter(r)}))):t.filter(r)}const n=t=>e.name!==t.name&&("string"==typeof e.comparator?e[e.comparator]===t[e.comparator]:e.comparator(t,r));return c(t)?t.map((e=>({...e,options:e.options.filter(n)}))).filter((e=>e.options.length>0)):t.filter(n)},d=["value"],y=(e,t,r)=>{const n=e??{};if(n.valueSources)return"function"==typeof n.valueSources?n.valueSources(t):n.valueSources;if(r){const e=r(n.name,t,{fieldData:n});if(e)return e}return d},m=e=>{const t=new Set,r=[];return e.forEach((e=>{t.has(e.name)||(t.add(e.name),r.push(e))})),r},h=e=>{let t=[];const r=e?Array.isArray(e)?e:Object.keys(e).map((t=>({...e[t],name:t}))).sort(((e,t)=>e.label.localeCompare(t.label))):[];return t=c(r)?m(t.concat(...r.map((e=>e.options)))):m(r),t};var b=e=>"string"==typeof e?e:e.source,v=e=>"string"==typeof e||"number"==typeof e||"boolean"==typeof e,A={$eq:"=",$ne:"!=",$gt:">",$gte:">=",$lt:"<",$lte:"<="},N={combinator:"and",rules:[]};function w(e,t){void 0===t&&(t={});const r=!!t.listsAsArrays,n=h(t.fields),o=t.getValueSources,l=(e,t,r)=>function(e){let{fieldsFlat:t,fieldName:r,operator:n,subordinateFieldName:o,getValueSources:l}=e;if(0===t.length)return!0;let i=!1;const a=t.find((e=>e.name===r));a&&(i=!(!o&&"notNull"!==n&&"null"!==n&&!y(a,n,l).some((e=>"value"===e))),i&&o)&&(y(a,n,l).some((e=>"field"===e))&&r!==o&&g(a,t,n).find((e=>e.name===o))||(i=!1));return i}({fieldName:e,fieldsFlat:n,operator:t,subordinateFieldName:r,getValueSources:o});function i(e,t,n){let o="=",i="";if("$eq"===t||"$ne"===t||"$gt"===t||"$gte"===t||"$lt"===t||"$lte"===t){if("$ne"===t&&null===n){if(l(e,"notNull"))return{field:e,operator:"notNull",value:null}}else if(o=A[t],l(e,o))return{field:e,operator:o,value:n}}else if("$regex"===t&&/^[^^].*[^$]$/.test(b(n))){if(l(e,"contains"))return{field:e,operator:"contains",value:b(n)}}else if("$regex"===t&&/^\^.*[^$]/.test(b(n))){if(l(e,"beginsWith"))return{field:e,operator:"beginsWith",value:b(n).replace(/^\^/,"")}}else if("$regex"===t&&/[^^].*\$/.test(b(n))){if(l(e,"endsWith"))return{field:e,operator:"endsWith",value:b(n).replace(/\$$/,"")}}else if("$in"===t&&Array.isArray(n)){if(l(e,"in"))return i=r?n:n.map((e=>`${e}`)).join(","),{field:e,operator:"in",value:i}}else if("$nin"===t&&Array.isArray(n)&&l(e,"notIn"))return i=r?n:n.map((e=>`${e}`)).join(","),{field:e,operator:"notIn",value:i};return!1}function s(e){const t=$(e).map((t=>function(e,t){let n="";if("$and"===e){if(!Array.isArray(t)||0===t.length||!t.every(p))return!1;if(2===t.length&&t.every((e=>1===$(e).length))){const[e,n]=t,[o,l]=t.map((e=>$(e)[0]));if(o===l&&p(e[o])&&1===$(e[o]).length&&p(n[l])&&1===$(n[l]).length&&("$gte"in e[o]&&"$lte"in n[l]&&n[l].$lte>=e[o].$gte||"$lte"in e[o]&&"$gte"in n[l]&&e[o].$lte>=n[l].$gte)){const[t,i]=[e[o].$gte??e[o].$lte,n[l].$lte??n[l].$gte];let a=r?[t,i]:`${t},${i}`;return t>i&&(a=r?[i,t]:`${i},${t}`),{field:o,operator:"between",value:a}}}const e=t.map((e=>s(e))).filter(Boolean);return e.length>0&&{combinator:"and",rules:e}}if("$or"===e){if(!Array.isArray(t)||0===t.length||!t.every(p))return!1;if(2===t.length&&t.every((e=>1===$(e).length))){const[e,n]=t,[o,l]=t.map((e=>$(e)[0]));if(o===l&&p(e[o])&&1===$(e[o]).length&&p(n[l])&&1===$(n[l]).length&&("$gt"in e[o]&&"$lt"in n[l]&&e[o].$gt>=n[l].$lt||"$lt"in e[o]&&"$gt"in n[l]&&n[l].$gt>=e[o].$lt)){const[t,i]=[e[o].$gt??e[o].$lt,n[l].$lt??n[l].$gt];let a=r?[t,i]:`${t},${i}`;return t>i&&(a=r?[i,t]:`${i},${t}`),{field:o,operator:"notBetween",value:a}}}const e=t.map((e=>s(e))).filter(Boolean);return e.length>0&&{combinator:"or",rules:e}}if("$not"===e&&p(t)){const e=s(t);return!!e&&(u(e)?e.not?{combinator:"and",rules:[e],not:!0}:{...e,not:!0}:{...e,operator:a[e.operator]})}if("$expr"===e){const e=$(t)[0];if(/^\$(eq|gte?|lte?|n?in)$/.test(e)&&Array.isArray(t[e])&&2===t[e].length&&"string"==typeof t[e][0]&&/^\$/.test(t[e][0])){n=t[e][0].replace(/^\$/,"");const r=t[e][1];if("string"==typeof r&&/^\$/.test(r)||Array.isArray(r)&&r.every((e=>"string"==typeof e))&&r.every((e=>/^\$/.test(e)))){const t=Array.isArray(r)?r.map((e=>e.replace(/^\$/,""))):r.replace(/^\$/,""),o=i(n,e,t);if(o)return!("string"==typeof o.value&&!l(n,o.operator,o.value))&&{...o,valueSource:"field"}}return i(n,e,t[e][1])}}else if(/^[^$]/.test(e))if(n=e,v(t)){if(l(n,"="))return{field:n,operator:"=",value:t}}else if(null===t){if(l(n,"null"))return{field:n,operator:"null",value:t}}else if(p(t)){let e=!1,o=!1;const l=$(t).filter((e=>/^\$(eq|ne|gte?|lte?|n?in|regex|not)$/.test(e))).sort();if(0===l.length)return!1;if("$not"in t&&p(t.$not)){const e=s({[n]:t.$not});e&&(o=u(e)?{...e,not:!0}:{...e,operator:a[e.operator]})}"$gte"in t&&"$lte"in t&&(e={field:n,operator:"between",value:r?[t.$gte,t.$lte]:`${t.$gte},${t.$lte}`});const f=l.filter((e=>!(o&&"$not"===e))).filter((t=>!(e&&("$gte"===t||"$lte"===t)))).map((e=>i(n,e,t[e]))).filter(Boolean);return o&&f.unshift(o),e&&f.unshift(e),0!==f.length&&(1===f.length?f[0]:{combinator:"and",rules:f})}return!1}(t,e[t]))).filter(Boolean);return 1===t.length?t[0]:t.length>1&&{combinator:"and",rules:t}}let c=e;if("string"==typeof e)try{c=JSON.parse(e)}catch(w){return N}if(!p(c))return N;const d=s(c),m=d?u(d)?d:{combinator:"and",rules:[d]}:N;return t.independentCombinators?f(m):m}}}]);